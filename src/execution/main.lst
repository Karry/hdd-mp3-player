MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;   HLAVNI SOUBOR 
                      00002 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00003 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00004 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00005 ;  MP3 PREPRCAVAC
                      00006 ; ================
                      00007 ; 
                      00008 ; Program mp3 prehravace pouzivajici jako zdroj dat ATA disk.
                      00009 ; 
                      00010 ; Umi identifikovat disk, precist libovolny sektor, v MBR  najit oddily se systemem souboru FAT32, 
                      00011 ; nacist spousteci zaznam FAT32, praci s FAT32, komunikaci s vs1001 a prehravani mp3 pres vs1001.
                      00012 ;
                      00013 ;
                      00014 ; dodelat:
                      00015 ;       - podpora podadresaru pri prehravani
                      00016 ;       - podporu ID3v1
                      00017 ;       - najit a zabit chyby
                      00018 ;
                      00019 ; chyby o kterych vim:
                      00020 ;
                      00021 ; vyreseen chyby:
                      00022 ;       - Pri cteni SCI (registru VS1001k) dochazi k praskani na vystupu a obcas k resetovani dekoderu
                      00023 ;               ...vyreseno postavenim konecne faze hardwaru
                      00024 ;       - pri cteni nekterych clusteru jsou precteny clustery jine
                      00025 ;               ...tato chyba byla zpusobena chybnym scitanim (MPLAB SIM se chova jinak nez PIC - decf u
                             picu nemeni priznak Carry!!!)
                      00026 ;       - Obcas se nechce vs1001k resetovat. Snad tomu pomuze mala hardwarova uprava.
                      00027 ;               ...opravdu tomu znacne pomohlo pridani kondiku a odporu na reset jako u PICu
                      00028 ;
                      00029 ; srpen 2005 - èerven 2006 Karry - lukas.karas@centrum.cz
                      00030 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00031 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00032 
                      00033 
                      00034 ;**********************************************************
                      00035 ;   VERZE 1.3
                      00036 ;**********************************************************
                      00037 ; !!!!!!!! VSECHNY CASOVE SMYCKY JSOU POCITANY NA Fosc=20MHz !!!!!
                      00038 ; !!!!!!!! NASTAVENI USARTu a SPI TAKY !!!!!!!
                      00039         LIST            p=PIC16F877A,C=132,n=60
2007   3F3A           00040         __CONFIG        _WDT_OFF & _HS_OSC & _PWRTE_OFF & _BODEN_OFF & _LVP_OFF 
                      00041                         ; LVP_OFF = RB3 jako digitalni I/O
                      00042         errorlevel -302         ; vypnuti Message [302]: Register in operand not in bank 0.
                      00043         errorlevel -306         ; vypnuti Message[306] : Crossing page boundary -- ensure page bits are 
                            set.
                      00044                                                 ; ! zjednoduseni vypisu, musim ale davat pozor, z jake b
                            anky ctu a kam skacu
                      00045 ;**********************************************************
                      00046 #DEFINE SPI_SOFTWARE 1          ; podmineny preklad. bud je SPI generovana softwarove (0) (jistejsi, pom
                            alejsi]
                      00047                                                         ; nebo je SPI generovana hardwarove (1)(rychlejs
                            i, neni ale kontrola nad BSYNC)
                      00048 ;**********************************************************
                      00049 
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00050         include "P16F877A.inc"  ; definice blbosti kolem procesoru
                      00001         LIST
                      00002 ; P16F877A.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                      00398         LIST
                      00051         include "mp3.inc"               ; definice promennych, konstant a portu
                      00001 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00002 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00003 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00004 ; DEFINICE PORTU
                      00005 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00006 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00007 ;**********************************************************
                      00008 ; ZAPOJENI PORTU:
                      00009 ;       portA - adresove signaly ATA
                      00010 ;                               5     4     3      2    1    0
                      00011 ;                               CS1-  -     CS0-   DA2  DA1  DA0  
                      00012 ;                               (signaly se znaminkem minus jsou aktivni v logicke 0 !!!)
                      00013 ;               portB - ATA datova sbernice (dolnich 8 bitu)
                      00014 ;               7   .. 0
                      00015 ;               DD7 .. DD0
                      00016 ;               portD - ATA datova sbernice (hornich 8 bitu)
                      00017 ;               15   .. 8
                      00018 ;               DD15 .. DD8 
                      00019 ;               portC - MP3 dekoder vs1001k a USART
                      00020 ;                               7          6        5  4  3    2     1  0
                      00021 ;                               USART out  USART in SI SO SCLK BSYNC CS DREQ
                      00022 ;               portE - ridici signaly ATA
                      00023 ;                               2       1      0
                      00024 ;                               DIOR-   DIOW-  RESET-
                      00025 ;                               (signaly se znaminkem minus jsou aktivni v logicke 0 !!!)
                      00026 ;**********************************************************
  00000007            00027 MP3_PORT                equ PORTC
  00000087            00028 MP3_PORT_TRIS   equ TRISC
                      00029 ; BITY MP3_PORT
                      00030 #define MP3_SO          MP3_PORT,4      ; serial output - tady dostavame z dekoderu data
                      00031 #define MP3_SI          MP3_PORT,5      ; serial input  - pokud MP3_CS=1, tak posilame mp3 data, pokud =
                            0, tak posilame prikaz
                      00032 #define MP3_SCLK        MP3_PORT,3      ; clock - nabezna hrana urcuje platnost dat pri seriovem prenosu
                      00033 #define MP3_CS          MP3_PORT,1      ; cable select  - pokud MP3_CS=1, tak po SI posilame mp3 data, p
                            okud =0, tak posilame prikaz
                      00034 #define MP3_DREQ        MP3_PORT,0      ; data request  - pokud =1, tak dekoder pozaduje dalsi mp3 data
                      00035 #define MP3_BSYNC       MP3_PORT,2      ; pro synchronizaci - ma byt nastaven pri prvnim prenasenem bitu
                             kazdeho bytu
                      00036 ;**********************************************************
                      00037 ; pokud jsem dobre pochopil dataSheat dekoderu vs1001, tak staci do nej jen cpat data, a kdyz skonci mp3
                            , tak odeslat 1024 nulovych bytu,
                      00038 ; softwarove resetovat a posilat dalsi mp3...
                      00039 ;
                      00040 ; popis registru obvodu vs1001 najdete na strane 22 dataSheatu 
                      00041 ; v jeho registrech jsou k dispozici data z hlavicky mp3, zdali mp3 ma spravny format, 
                      00042 ; ovladani hlasitosti a dalsi spousty uzitecnych informaci
                      00043 ;**********************************************************
                      00044 ; PORTY DISKU
  00000005            00045 ATA_ADDRESS             equ PORTA
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000009            00046 ATA_CONTROL             equ PORTE
  00000006            00047 DATA_PORT_LOW           equ PORTB
  00000008            00048 DATA_PORT_HIGH          equ PORTD
                      00049 
  00000085            00050 ATA_ADDRESS_TRIS        equ TRISA
  00000089            00051 ATA_CONTROL_TRIS        equ TRISE
  00000086            00052 DATA_PORT_LOW_TRIS      equ TRISB
  00000088            00053 DATA_PORT_HIGH_TRIS     equ TRISD
                      00054 
                      00055 ; bity ATA_ADDRESS portu
                      00056 #define ERROR_LED       ATA_ADDRESS,3
                      00057 ; bity ATA_CONTROL portu
                      00058 #define ATA_RESET_N     ATA_CONTROL,0
                      00059 #define ATA_DIOW_N      ATA_CONTROL,1
                      00060 #define ATA_DIOR_N      ATA_CONTROL,2
                      00061 
                      00062 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00063 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00064 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00065 ; DEFINICE KONSTANT
                      00066 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00067 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00068 ; ADRESY ATA REGISTRU:
                      00069 ;                                                                       / CHS adressing
                      00070 ;   +-----------+--------------+-------------------+-----------------+
                      00071 ;   | CS0- CS1- |  DA2 DA1 DA0 | READ              | WRITE           |   
                      00072 ;   +-----------+--------------+-------------------+-----------------+
                      00073 ;   | 1    1    |  x   x   x   | data bush h.imped (validace prikazu)|
                      00074 ;   +-----------+--------------+-------------------+-----------------+
                      00075 ;   | 1    0    |  1   1   0   | alternate status  | device control  |
                      00076 ;   +-----------+--------------+-------------------+-----------------+
                      00077 ;   | 0    1    |  0   0   0   | data              | data            |
                      00078 ;   | 0    1    |  0   0   1   | error             | features        |
                      00079 ;   | 0    1    |  0   1   0   |             sector count            |
                      00080 ;   | 0    1    |  0   1   1   |             LBA bits 0-7            |  sector number
                      00081 ;   | 0    1    |  1   0   0   |             LBA bits 8-15           |  cilinder LOW 
                      00082 ;   | 0    1    |  1   0   1   |             LBA bits 16-23          |  cilinder HIGH
                      00083 ;   | 0    1    |  1   1   0   |         device / LBA bits 24-27*    |  device, head
                      00084 ;   | 0    1    |  1   1   1   | status            | command         |
                      00085 ;   +-----------+--------------+-------------------+-----------------+
                      00086 ;   | 0    0    |  0   0   0   | invalid addres    | invalid addres  |
                      00087 ;   +-----------+--------------+-------------------+-----------------+
                      00088 ;
                      00089 ;   * 7 6 5 4   3     2     1     0 
                      00090 ;     1 L 1 DEV LBA27 LBA26 LBA25 LBA24
                      00091 ;  L=1 -> aresa je LBA , L=0 -> adresa je CHS
                      00092 ;  DEV=0 -> master , DEV=1 -> SLAVE
                      00093 ;
                      00094 ;  pokud disk podporuje LBA 48, tak je zadavani adresy trochu odlisne od LBA27
                      00095 ;**********************************************************
                      00096 ; toto jsou definice adres ATA registru. Staci udat jejich adresu na ATA_ADDRESS port a dat prikaz ke ct
                            eni ci zapisu (DIOR- / DIOW-)
                      00097 
                      00098 ;       portA - adresove signaly ATA
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00099 ;                               5     4     3       2    1    0
                      00100 ;                               CS1-  -     CS0-    DA2  DA1  DA0  
                      00101 ;                               (signaly se znaminkem minus jsou aktivni v logicke 0 !!!)
  0000001E            00102 D_STATUS_A    equ b'00011110'
  0000001E            00103 D_DEVICE_C    equ D_STATUS_A
  00000020            00104 D_DATA_R      equ b'00100000'
  00000021            00105 D_FEATURES    equ b'00100001'
  00000021            00106 D_ERROR       equ D_FEATURES
  00000022            00107 D_SECTOR_C    equ b'00100010'
  00000023            00108 D_LBA1        equ b'00100011'   ; LBA low
  00000024            00109 D_LBA2        equ b'00100100'   ; LBA middle
  00000025            00110 D_LBA3        equ b'00100101'   ; LBA high
  00000026            00111 D_DEVICE      equ b'00100110'
  00000027            00112 D_STATUS      equ b'00100111'
  00000027            00113 D_COMMAND     equ D_STATUS
                      00114 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00115 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00116 ; ROZLOZENI PAMETI PROGRAMU
                      00117 
                      00118 ; vis. main.asm
                      00119 
                      00120 ; Vsechny podprogramy by mely nechat nastaven PCLATH na hodnotu jak se do nich vstoupilo...
                      00121 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00122 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00123 ; DEFINICE PROMENNYCH
                      00124 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00125 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00126 ; MAPA PAMETI: (368 bytu)
                      00127 ;       BANK 0:         0x000 - 0x01F = specialni registry,
                      00128 ;                               0x020 - 0x07F = misto (96bytu) pro nase registry:
                      00129 ;                                       0x020 - 0x02E -> registry a parametry HDD
                      00130 ;                                       0x02F         -> loundes (registr obsahujici aktualne nastaveny 
                            filtr)
                      00131 ;                                       0x030 - 0x032 -> --------------------------
                      00132 ;                                       0x033 - 0x034 -> velikost sektoru
                      00133 ;                                       0x035 - 0x03a -> 6bytu pro parametry podprogramu (musime zajisti
                            t, abychom nepouzivali registry, ktere pouzivaji i podprogramy!!!)
                      00134 ;                                       0x03B - 0x04C -> parametry FATky
                      00135 ;                                       0x04D - 0x050 -> registry pro praci s VS1001
                      00136 ;                                       0x051 - 0x056 -> registry pro reseni fragmentovanych souboru
                      00137 ;                                       0x057 - 0x058 -> citac necinosti, ktery odpocitava dobu do STAND
                            -BY disku
                      00138 ;                                       0x059 - 0x05E -> registry pro trideni podle abecedy
                      00139 ;                                       0x05F         -> --------------------------
                      00140 ;                                       0x060 - 0x06F -> informace potrebne pro prehravani
                      00141 
                      00142 ;                                       0x070 - 0x072 -> 3 registry slouzici k zalohovani W, STATUS, FSR
                      00143 ;                                       0x073 - 0x076 -> registry pro prikazy a preruseni + zaloha pro P
                            CLATH
                      00144 ;                                       0x077         -> ---------------------------
                      00145 ;                                       0x078 - 0x07F -> 8 bytu zasobniku prikazu (obsahujici data prika
                            zu prisla po USARTU)
                      00146 ;
                      00147 ;       BANK 1:         0x080 - 0x09F = specialni registry,
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00148 ;                               0x0A0 - 0x0EF = volne misto (80bytu)
                      00149 ;                                       0x0A0 - 0x0AC -> parametry a navratove hodnoty z aritmeto/logick
                            ych podprogramu
                      00150 ;                                       0x0AD - 0x0EF -> --------------------------- (67bytu)
                      00151 ;
                      00152 ;       BANK 2:         0x100 - 0x10F = specialni registry,
                      00153 ;                               0x110 - 0x16F = misto (96bytu) pro nase registry:
                      00154 ;                                       0x110 - 0x14F -> 64bytu BUFFER_2 (pro dlouhe nazvy souboru, tabu
                            lku oddilu, a treba pro cast fatky)
                      00155 ;                                       0x150         -> pri cteni dlouheho jmena potrebuju v bufferu2 6
                            5 bytu... (ten 65 je tady)
                      00156 ;                                       0x151 - 0x16F -> --------------------------- (31bytu)
                      00157 ;
                      00158 ;       BANK 3:         0x180 - 0x18F = specialni registry,
                      00159 ;                               0x190 - 0x1EF = misto (96bytu) pro nase registry:
                      00160 ;                                       0x190 - 0x1CF -> 64bytu BUFFER_1 (pro ruzna data pri cteni...)
                      00161 ;                                       0x1D0 - 0x1EF -> --------------------------- (32 bytu)
                      00162 
                      00163 ; prectena ci zapisovana data
  00000020            00164 DATA_L                  equ 0x020 ; res 1
  00000021            00165 DATA_H                  equ 0x021
                      00166 ; HODNOTY ATA REGISTRU 
  00000022            00167 ATA_STATUS_A    equ 0x022
  00000023            00168 DEVICE_C                equ 0x023
  00000024            00169 FEATURES                equ 0x024
  00000025            00170 ATA_ERROR               equ 0x025
  00000026            00171 SECTOR_C                equ 0x026
  00000027            00172 LBA1                    equ 0x027       ; alias  SECTOR_N
  00000028            00173 LBA2                    equ 0x028       ; alias  CILINDER_L
  00000029            00174 LBA3                    equ 0x029       ; alias  CILINDER_H
  0000002A            00175 LBA4                    equ 0x02a       ; toto neni registr ATA, ale pouze posledni cast aktualni adresy
  0000002B            00176 DEVICE                  equ 0x02b       ; alias  DEVICE_H
  0000002C            00177 ATA_STATUS              equ 0x02c
  0000002D            00178 COMMAND                 equ 0x02d
                      00179 ;**********************************************************
                      00180 ; BITY ATA REGISTRU
                      00181          ; ATA_STATUS register
  00000007            00182 BSY                             equ 7   ; = 1 -> disk je zaneprazdneny, ostatni registry nemusi obsahova
                            t pravdivou informaci
  00000006            00183 DRDY                    equ 6   ; = 1 -> disk ready (pripraven k praci)
  00000003            00184 DRQ                             equ 3   ; = 1 -> signalizuje, ze jsou pripravena data ke cteni 
  00000000            00185 ERR                             equ 0   ; = 1 -> pri provadeni posledniho prikazu doslo k chybe
                      00186          ; ATA_ERROR register
  00000002            00187 ABRT                    equ 2   ; = 1 -> prikaz aborted (spatny optkode prikazu)
                      00188          ; DEVICE_C (control) register
  00000002            00189 SRST                    equ 2   ; nastavime-li, provedeme soft. reset disku
  00000001            00190 nEIN                    equ 1   ; zakazuje preruseni disku (signal INTRQ)
  00000007            00191 HOB                             equ 7   ; tento bit DEVICE CONTROL se nastavuje pouze pokud disk podporu
                            je LBA 48 a cteme horni cast adresy LBA...
                      00192 ;**********************************************************
  0000002E            00193 ATA_ATTRIBUTES  equ 0x02e       ; Parametry hardisku. 
                      00194 ;Bity maji nasledujici vyznam:
  00000000            00195 ATA_OK                  equ 0   ; 0. bit = 1 -> disk je pritomen, zapnuty a funkcni :-)
  00000001            00196 LBA_SUPPORT             equ 1   ; 1. bit = 1 -> podpora LBA (pokud neni nastaven bit2, tak pouze LBA28 -
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            > disk do 120GB)
  00000002            00197 LBA48_SUPPORT   equ 2   ; 2. bit = 1 -> podpora LBA 48 (disk je zrejme vetsi jak 120GB)
  00000003            00198 BIG_SECTOR              equ 3   ; 3. bit = 1 -> velikost sektoru je vetsi nez 256 !!! (s takovym diskem 
                            zatim tento program neumi)
  00000004            00199 FAT32_LOAD              equ 4   ; 4. bit = 1 -> FATka byla uspesne analyzovana a udaje o ni jsou pravdiv
                            e
  00000005            00200 STANDBY                 equ 5   ; 5. bit = 1 -> disk ve standby rezimu
                      00201                                                 ; 6. bit  -> nepouzit
  00000007            00202 APPLICABLE              equ 7   ; 7. bit = 1 -> disk je pro nas pouzitelny (LBA, sektor o 512B)
                      00203 
                      00204 ;PARAM_MAX_LBA1 equ 0x02F               ; [4B] maximalni hodnota LBA (velikost disku)   
                      00205 ;PARAM_MAX_LBA2 equ 0x030               ; tady pozor, disky mohou byt adresovany az LBA 48, MBR je ale o
                            mezen na LBA 32 (2TB)
                      00206 ;PARAM_MAX_LBA3 equ 0x031               ; tak by nemelo smysl vsech 48b kdyz by se nevyuzily. (Navic jse
                            m disk vetsi nez 2TB nevidel :)
                      00207 ;PARAM_MAX_LBA4 equ 0x032               ; (registr s indexem 1 ma nejnizsi vahu)
                      00208 ; Tyto registry nepotrebuju
                      00209 ;**********************************************************
  0000002F            00210 VS_LOUDNESS             equ 0x02F               ; registr obsahujici hodnotu s nastavenym ekvalizerem
                      00211 ;                               equ 0x030
                      00212 ;                               equ 0x031
                      00213 ;                               equ 0x032
                      00214 
                      00215 ;**********************************************************
                      00216 
  00000033            00217 PARAM_SLOV_V_SEKTORU1   equ 0x33 ; [2B] disky mohou mit velikost sektoru vetsi nez 512 (256sl) 
  00000034            00218 PARAM_SLOV_V_SEKTORU2   equ 0x34 
                      00219 ; taky informace k nicemu. pokud beztak neni 512, tak s diskem neumi program pracovat...
                      00220 
                      00221 ; pokud je to zapsano takto, nejvyznamejsi bity jsou niz v paneti (PARAM_MAX_LBA + X)
                      00222 ; pokud je zapsano jako skupina LBA1, LBA2, LBA3, LBA4, tak nejvyznamejsi bity jsou v LBA4
                      00223 ;**********************************************************
                      00224 ; pomocne registry pouzivane v podprogramech 
                      00225 ; !!! MUSIME ZAJISTIT ABY NEBYLY POUZIVANY VE VNORENYCH PODPROGRAMECH !!!
  00000035            00226 TEMPW                   equ 0x035
  00000036            00227 TEMP1                   equ 0x036
  00000037            00228 TEMP2                   equ 0x037
  00000038            00229 TEMP3                   equ 0x038
  00000039            00230 TEMP4                   equ 0x039
  0000003A            00231 TEMP5                   equ 0x03A
                      00232 
                      00233 ; !!! pomocne promenne pro spozdovaci smycky jsou na stejnych mistech
                      00234 ; pouzito pro synchronizaci s prog. picdelay
  00000036            00235 TMP1                    equ 0x036
  00000037            00236 TMP2                    equ 0x037
  00000038            00237 TMP0                    equ 0x038
                      00238 ;**********************************************************
                      00239 ; registry pro praci s FATkou
  0000003B            00240 POZICE                  equ 0x03B               ; na ukladani aktualni pozice v slusteru, pripadne jine 
                            kokotiny
  0000003C            00241 CLUSTER1                equ 0x03C
  0000003D            00242 CLUSTER2                equ 0x03D
  0000003E            00243 CLUSTER3                equ 0x03E
  0000003F            00244 CLUSTER4                equ 0x03F
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00245 
  00000040            00246 POCATEK_DAT1    equ 0x040
  00000041            00247 POCATEK_DAT2    equ 0x041
  00000042            00248 POCATEK_DAT3    equ 0x042
  00000043            00249 POCATEK_DAT4    equ 0x043
                      00250 
  00000044            00251 POCATEK_FAT1    equ 0x044
  00000045            00252 POCATEK_FAT2    equ 0x045
  00000046            00253 POCATEK_FAT3    equ 0x046
  00000047            00254 POCATEK_FAT4    equ 0x047
                      00255 
  00000048            00256 ROOT_DIR_CL1    equ 0x048
  00000049            00257 ROOT_DIR_CL2    equ 0x049
  0000004A            00258 ROOT_DIR_CL3    equ 0x04A
  0000004B            00259 ROOT_DIR_CL4    equ 0x04B
                      00260 
  0000004C            00261 CLUSTER_SIZE    equ 0x04C               ; velikost clusteru (pocet sektoru na cluster)
                      00262 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00263 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00264 ; DEFINICE PROMENNYCH a KONSTANT PRO PRACI S VS1001
                      00265 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00266 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00267 ; adresy registru VS1001
  00000000            00268 VSADDR_MODE                     equ .0          ; nastaveni VS1001
  00000001            00269 VSADDR_STATUS           equ .1          ; slouzi pouze pro zapnuti / vypnuti analogove casti (MUTE)
  00000003            00270 VSADDR_CLOCKF           equ .3          ; informuje dekoder o jeho krystalu. !! je nutne pro spravne dek
                            odovani !!
  00000004            00271 VSADDR_DECODE_TIME      equ .4          ; obsahuje cas dekodovani aktualni MP3 !! neaktualizuje se pri s
                            kocich (previjeni)
  00000005            00272 VSADDR_AUDATA           equ .5          ; obsahuje informace o datovem toku a vzorkovaci frekvenci MP3
                      00273         ; bit 15 = 1 => STEREO; = 0 => MONO
                      00274         ; bity 12-9 obsahuji vzorkovaci frekvenci v Hz
                      00275         ;       0000 -> neznama vzorkovaci frekvence
                      00276         ;       0001 -> 44 100
                      00277         ;       0010 -> 48 000
                      00278         ;       0011 -> 32 000
                      00279         ;       0100 -> 22 050
                      00280         ;       0101 -> 24 000 
                      00281         ;       0110 -> 16 000
                      00282         ;       0111 -> 11 025
                      00283         ;       1000 -> 12 000
                      00284         ;       1001 ->  8 000
                      00285         ; bity 8-0 obsahuji bitrate v kbps 
                      00286 
  00000006            00287 VSADDR_WRAM             equ .6                  ; Slouzi k zapisovani uzivatelskeho programu, dato se za
                            pise na adresu v WRAMADDR
  00000007            00288 VSADDR_WRAMADDR equ .7                  ; Adresuje uzivatelskou pamet dekoderu
  00000008            00289 VSADDR_HDAT0    equ .8                  ; Obsahuje informace ziskane z hlavicky MP3
  00000009            00290 VSADDR_HDAT1    equ .9                  ; Obsahuje informace ziskane z hlavicky MP3
  0000000A            00291 VSADDR_AIADDR   equ .10                 ; Start uzivatelskeho programu (vis. datasheet)
  0000000B            00292 VSADDR_VOL              equ .11                 ; ovladani hlasitosti (pro oba kanaly) Horni byte je lev
                            y kanal, dolni byte je pravy kanal
                      00293                                                                 ; (hodnota 0000h znamena hlasitost na ma
                            x., FF00h hraje pouze pravy kanal, FFFFh je ticho)
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000D            00294 VSADDR_AICTRL0  equ .13                 ; Registr pro ovladani uzivatelskeho programu
  0000000E            00295 VSADDR_AICTRL1  equ .14                 ; Registr pro ovladani uzivatelskeho programu
                      00296 ;**********************************************************
                      00297 ; registry pro praci s VS1001   
                      00298 ; dekoder VS1001 ma vsechny registry 16bitove, proto za jmeno pisu _L /_H (u nekterych registru potrebuj
                            i pouze jednu cast)
  0000004D            00299 VSREG_MODE_L    equ 0x04D
  0000004E            00300 VSREG_STATUS_L  equ 0x04E
  0000004F            00301 VSREG_VOL_L             equ 0x04F               ; pravy kanal
  00000050            00302 VSREG_VOL_H             equ 0x050               ; levy kanal
                      00303 ;**********************************************************
  00000051            00304 FRAGMENT1               equ 0x051
  00000052            00305 FRAGMENT2               equ 0x052
                      00306 ;**********************************************************
  00000053            00307 PREH_D_FRAGMENT1        equ 0x053
  00000054            00308 PREH_D_FRAGMENT2        equ 0x054       ; 16bit cislo, ktere udava kolik clusteru mp3 dat po sobe je na 
                            disku nefragmentovano
                      00309                 ; pokazde kdyz prehrajeme cluster, tak toto cislo dekrementujeme. Kdyz dosahneme 0, tak 
                            zjistime dalsi 
                      00310                 ; cluster a pocet nefragmentovanych clusteru. (jak dlouha je rada po sobe jdoucich clust
                            eru)
  00000055            00311 CITAC_NECINNOSTI1       equ 0x055       ; v preruseni se pokazdych 100ms dekrementuje, dokud neni 0. v h
                            lavni programove smycce 
  00000056            00312 CITAC_NECINNOSTI2       equ 0x056       ; se testuje, a kdyz se rovna 0, posle disku prikaz SLEEP. v pri
                            kazu ke cteni z disku se do nej umisti konstanta.
                      00313                                                                 ; to cele zbusobi to, ze po nekolika min
                            utach necinnosti se disk prepne do sleep
  00000057            00314 KONST_NECINNOSTI1       equ 0x057
  00000058            00315 KONST_NECINNOSTI2       equ 0x058
                      00316 ;**********************************************************
                      00317 ; registry pro ukladani nastaveni hledani
  00000059            00318 HL_PARAMETRY            equ 0x059
                      00319 ;               0. bit = 0 > pokud hledáme soubory, tak pouze MP3
                      00320 ;                                1 > pokud hledáme soubory, vrací vechny soubory
                      00321 ;               1. bit = 0 > hledáme klasicky (nejdríve adresáre, poté soubory
                      00322 ;                                1 > hledáme pouze adresáre, nebo soubory
                      00323 ;               2. bit = 0 > je-li nastaven 1. bit, hledáme pouze adresáøe
                      00324 ;                                1 > je-li nastaven 1. bit, hledáme pouze soubory
                      00325 ;               3. bit = 0 > hledáme podle cisla zaznamu bud následující ci predchozi zaznam
                      00326 ;                                1 > hledáme první záznam v adresáøi
                      00327 ;               4. bit = 0 > hledáme NÁSLEDUJÍCÍ záznam
                      00328 ;                                1 > hledáme PØEDCHOZÍ záznam
                      00329 ;               5. bit = 0 > pokud hledáme pouze soubory, tak vrací jako první záznam adresáø '..'
                      00330 ;                                1 > pokud hledáme soubory, tak nevrací adresáø '..'
                      00331 ;               7. bit - tento bit nelze nastavit uzivatelem
                      00332 ;                               = 0 > adresar je ROOT
                      00333 ;                               = 1 > adresar neni ROOT
                      00334 
  0000005A            00335 HL_ADR_CL1                      equ 0x05A
  0000005B            00336 HL_ADR_CL2                      equ 0x05B
  0000005C            00337 HL_ADR_CL3                      equ 0x05C
  0000005D            00338 HL_ADR_CL4                      equ 0x05D       ; v jakem adresari momentalne vyhledavame
                      00339 
  0000005E            00340 ZAZNAMU_vBUFFERU_DISKU  equ 0x05E       ; sem nam procedura SKOC_NA_ZAZNAM vraci kolik po sobe
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00341                         ; jdoucich zaznamu nam nechala pripravenych v bufferu na disku
                      00342                         ; (znacne totiz zrychluje praci, protoze pokud chceme cist nasledujici zaznam a 
                            mame ho jiz 
                      00343                         ; v bufferu, memusime znova volat SKOC_NA_ZAZNAM ale rovnou FILE_INFO)
                      00344 ;XXXXXXXXX              equ 0x05F
                      00345 ;**********************************************************
                      00346 ; registry pro praci procedur v filesystem (dalsi registry pozivane proceduramy v filesystem jsou CLUSTE
                            R a POZICE)
  00000060            00347 ZAZNAM1                         equ 0x060
  00000061            00348 ZAZNAM2                         equ 0x061       ; poradi zaznamu v adresari
                      00349 ;**********************************************************
                      00350 ; informace potrebne pro prehravani
  00000062            00351 PREH_ADR_CL1            equ 0x062
  00000063            00352 PREH_ADR_CL2            equ 0x063
  00000064            00353 PREH_ADR_CL3            equ 0x064
  00000065            00354 PREH_ADR_CL4            equ 0x065       ; prni cluster adresare, ktery se prave prehrava...
                      00355 
  00000066            00356 PREH_ZAZNAM1            equ 0x066
  00000067            00357 PREH_ZAZNAM2            equ 0x067       ; poradi zaznamu v adresari ktery se zrovna prehrava (soubor mp3
                            )
                      00358 
  00000068            00359 PREH_CITAC_PREV         equ 0x068       ; pokud je mp3 previjena pomalu, sem se zapisuje kolik sektoru s
                            e jiz previnulo. 
                      00360                                                                 ; (Pøi pomalém pøevíjení je pomìr pøehra
                            ných sektorù ku pøeskoèeným 5:20.)
                      00361 
  00000069            00362 PREH_DATA_CL1           equ 0x069
  0000006A            00363 PREH_DATA_CL2           equ 0x06A
  0000006B            00364 PREH_DATA_CL3           equ 0x06B
  0000006C            00365 PREH_DATA_CL4           equ 0x06C       ; aktualni cluster, ktery se prehrava
  0000006D            00366 PREH_DATA_POZICE        equ 0x06D       ; sektor v clusteru, ktery se prehrava
                      00367 
  0000006E            00368 PREH_STAV0                      equ 0x06E       ; registr obsahuje informace o stavu aktualniho prehrava
                            ni
                      00369                                 ; 0. bit =      0 => stop nebo pausa (nic nehraje)
                      00370                                 ;                       1 => play            (nejaky soubor je prehravan
                            )
                      00371                                 ; 1. bit =      0 => neni zadny soubor k prehravani (nastaveni bitu play
                             nema zadny ucinek)
                      00372                                 ;                       1 => je soubor pripraven k prehravani (muze byt 
                            ale pauza - nic nehraje)
                      00373                                 ; 2. bit =      1 => je nastaven, kdyz se zmeni prehravany soubor nebo a
                            dresar (bez volani prikazu) do doby, nez prijde prikaz na dotaz STAVU... (81h)
                      00374                                 ; 3. bit =      0 => po skonceni souboru se pokracuje v prehravani (zavi
                            si na nastaveni repeatu)
                      00375                                 ;                       1 => po skonceni prehravani souboru se nic nepre
                            hrava (ceka se na prijeti prikazu k prehravani)
                      00376                                 ; 4. bit =      0 => repeat off
                      00377                                 ;                       1 => repeat on
                      00378                                 ; 5. bit =      0 => repeat adresare (prvni cluster adresare musi byt na
                            staven v PREH_ADDR_ZACATEK_CL[1-4] )
                      00379                                 ;                       1 => repeat souboru (po skonceni prehravani soub
                            oru se ten samy soubor zacne prehravat znova)
                      00380                                 ; 6. bit =      0 => pri dosazeni posledni skladby v adresari se prestan
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            e prehravat
                      00381                                 ;                       1 => ---------------- // -------------------- se
                             zacnou prohledavat podadresare, ci nasledujici adresar
                      00382                                 ; 7. bit =  0 => po naètení oddílu se nezaène pøehrávat
                      00383                                 ;                       1 => po naètení oddílu se zaène pøehrávat mp3, k
                            terou se pøi posledním pøehráváni skonèilo 
                      00384                                 ;                               (musí ale na disku stále být a nesmí se 
                            mezitím pøehrávat z jiného oddílu)
                      00385                                 ;                               Pokud poslední pøehraná skladba nebyla n
                            a disku nalezena, naène se pøehrávat první mp3 v ROOT adresáøi.
  0000006F            00386 PREH_STAV1                      equ 0x06F
                      00387                                 ; 0. bit =  0 => normalni prehravani
                      00388                                 ;                       1 => previjeni mp3 dopredu
                      00389                                 ; 1. bit =  0 => 
                      00390                                 ;                       1 => rezervovano (pro previjeni dozadu)
                      00391                                 ; 2. bit =      zpusob previjeni,       0 => previji se rychle, potichu
                      00392                                 ;                                                               1 => pre
                            viji se pomalu, vzdy se po nejake dobe kratky usek souboru prehraje
                      00393                                 ; 3. bit =      0 => normalni nastaveni zvuku
                      00394                                 ;                       1 => zvyrazneni basu a vysek (moznost dekoderu v
                            s1001 "bass/treble enhancer")
                      00395                                 ; 4. bit =      0 => NO MUTE
                      00396                                 ;                       1 => MUTE
                      00397                                 ; 5., 6., 7. bit 
                      00398                                 ;                       => rezervovano
                      00399 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00400 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00401 ; registry pro potreby preruseni + prace s prikazy (jsou totiz dostupne odkudkoliv)
  00000070            00402 TEMP_WORKING    equ 0x070
  00000071            00403 TEMP_STATUS             equ 0x071
  00000072            00404 TEMP_FSR                equ 0x072
  00000073            00405 PRIJATYCH_DAT   equ 0x073               ; ukazuje kolik je platnych dat v zasobniku prikazu (0 -> zasobn
                            ik je prazdny)
  00000074            00406 PRIJATE_DATO    equ 0x074               ; pomocna promenna v preruseni
  00000075            00407 STAV_PRIKAZU    equ 0x075               ; pomocny registr signalizujici stav prikazu umisteneho v zasobn
                            iku prikazu
                      00408                                                                 ; pokud zadna procedura nenastavi do 1, 
                            je prikaz v tuto chvili neplatny
                      00409                                                                 ; pokud prikaz je pro proceduru ale nama
                             zatim dost parametru, muji tento byt nastavit take do 1
  00000076            00410 TEMP_PCLATH             equ 0x076
                      00411 ; 0x078 - 0x07F         -> zasobnik prikazu (data prisla po USARTU)
                      00412 ;**********************************************************
                      00413 ; BANK_1        s touto bankou pracuji procedury provadejici 32 bitove 
                      00414 ;                       aritmeto/logicke operace
  000000A0            00415 OPERAND_X1              equ 0x0A0
  000000A1            00416 OPERAND_X2              equ 0x0A1
  000000A2            00417 OPERAND_X3              equ 0x0A2
  000000A3            00418 OPERAND_X4              equ 0x0A3
                      00419 
  000000A4            00420 OPERAND_Y1              equ 0x0A4
  000000A5            00421 OPERAND_Y2              equ 0x0A5
  000000A6            00422 OPERAND_Y3              equ 0x0A6
  000000A7            00423 OPERAND_Y4              equ 0x0A7
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00424 
  000000A8            00425 VYSLEDEK1               equ 0x0A8
  000000A9            00426 VYSLEDEK2               equ 0x0A9
  000000AA            00427 VYSLEDEK3               equ 0x0AA
  000000AB            00428 VYSLEDEK4               equ 0x0AB
                      00429 
  000000AC            00430 PRETECENI               equ 0x0AC
                      00431 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00432 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00433 ; MAKRA
                      00434 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00435 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00436 BANK_0  macro                                   ; prepnuti do banky 0 v pameti dat
                      00437                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
                      00438                 bcf     STATUS,RP0    
                      00439                 endm
                      00440 BANK_1  macro                                   ; prepnuti do banky 1 v pameti dat
                      00441                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
                      00442                 bsf     STATUS,RP0    
                      00443                 endm
                      00444 BANK_2  macro                                   ; prepnuti do banky 2 v pameti dat
                      00445                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
                      00446                 bcf     STATUS,RP0    
                      00447                 endm
                      00448 BANK_3  macro                                   ; prepnuti do banky 3 v pameti dat
                      00449                 bsf     STATUS,RP1              ; BANK3  RP1:RP0 = 11
                      00450                 bsf     STATUS,RP0    
                      00451                 endm
                      00452 ; INDF_BANK_x slouzi k prepinani bank pro neprime adresovani pomoci INDF a FSR
                      00453 INDF_BANK_0     macro               
                      00454                         bcf STATUS,IRP    
                      00455                         endm
                      00456 INDF_BANK_1     macro               
                      00457                         bcf STATUS,IRP    
                      00458                         endm
                      00459 INDF_BANK_2     macro             
                      00460                         bsf STATUS,IRP    
                      00461                         endm
                      00462 INDF_BANK_3     macro             
                      00463                         bsf STATUS,IRP    
                      00464                         endm
                      00465 ;**********************************************************
                      00466 PROG_PAGE_0     macro             
                      00467                         bcf PCLATH,3
                      00468                         bcf PCLATH,4
                      00469                         endm
                      00470 PROG_PAGE_1     macro             
                      00471                         bsf PCLATH,3
                      00472                         bcf PCLATH,4
                      00473                         endm
                      00474 PROG_PAGE_2     macro             
                      00475                         bcf PCLATH,3
                      00476                         bsf PCLATH,4
                      00477                         endm
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00478 PROG_PAGE_3     macro             
                      00479                         bsf PCLATH,3
                      00480                         bsf PCLATH,4
                      00481                         endm
                      00482 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00052 
                      00053 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00054 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00055 ; PROGRAM
                      00056 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00057 ;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                      00058 ;**********************************************************
0000                  00059  org 0x0000                                     ; PAGE 0
0000   2810           00060         goto START
0004                  00061  org 0x0004                                     ; PAGE 0
0004   00F0           00062         movwf TEMP_WORKING
0005   0803           00063         movfw STATUS
0006   00F1           00064         movwf TEMP_STATUS
0007   0804           00065         movfw FSR
0008   00F2           00066         movwf TEMP_FSR
0009   080A           00067         movfw PCLATH
000A   00F6           00068         movwf TEMP_PCLATH
000B   018A           00069         clrf PCLATH
                      00070         BANK_0
000C   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
000D   1283               M                 bcf     STATUS,RP0    
                      00071         INDF_BANK_0
000E   1383               M                         bcf STATUS,IRP    
000F   2ACF           00072         goto INTERRUPT
                      00073 ;**********************************************************
0010                  00074  org 0x0010                                     ; PAGE 0
                      00075         include "mp3.asm"               ; hlavni programova smycka
0010                  00001 START
0010   21C2           00002         call INIT_CONFIG        ; nakonfiguruje preruseni, WDT, USART, pull ups...
0011   21AF           00003         call INIT_PORT          ; nastavy trisy, a porty do vychozi polohy
                      00004 
0012   247D           00005         call DELAY_25us         ; chvili pockame, protoze napjeti zdroje co mam doma (stary PC-AT zdroj)
0013   247D           00006         call DELAY_25us         ; zezacatku dost kolisa a nepomuze tomu ani POR...
0014   247D           00007         call DELAY_25us
                      00008 
                      00009 ;LOOP
                      00010 ;       movlw 'O'
                      00011 ;       call WR_USART
                      00012 ;       movlw 'K'
                      00013 ;       call WR_USART
                      00014 ;       call DELAY_200ms
                      00015 ;       call DELAY_200ms
                      00016 ;       goto LOOP
                      00017 
                      00018 
                      00019         PROG_PAGE_1
0015   158A               M                         bsf PCLATH,3
0016   120A               M                         bcf PCLATH,4
0017   20BE           00020         call VS_INIT
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00021         PROG_PAGE_3
0018   158A               M                         bsf PCLATH,3
0019   160A               M                         bsf PCLATH,4
001A   25F0           00022         call VS_LOAD_PLUGIN
                      00023         PROG_PAGE_0
001B   118A               M                         bcf PCLATH,3
001C   120A               M                         bcf PCLATH,4
                      00024 
001D   23C6           00025         call ATA_RESET                          ; resetujeme disk, koukneme zda tu nejakej mame
001E   1C2E           00026         btfss ATA_ATTRIBUTES,ATA_OK
001F   281D           00027         goto $-2                                        ; pokud neni pripojen disk, tak se jej pokousime
                             neustale najit...
0020   0000           00028         nop                                                     ; ...pokud tam zadny disk neni, tak bych
                            om se stejne ani sem nemeli dostat, protoze budem porad cekat na WAIT_FOR_READY
                      00029 
0021   2432           00030         call IDENTIFY_DEVICE            ; koukneme co disk umi
                      00031 
0022                  00032 CEK_PRIKAZ_01h
                      00033         PROG_PAGE_1
0022   158A               M                         bsf PCLATH,3
0023   120A               M                         bcf PCLATH,4
0024   20DD           00034         call CEKEJ_PRIKAZ
                      00035         PROG_PAGE_0
0025   118A               M                         bcf PCLATH,3
0026   120A               M                         bcf PCLATH,4
                      00036 
0027   0878           00037         movfw 0x078                                     ; prvni byte prikazoveho zasobniku
0028   01F3           00038         clrf PRIJATYCH_DAT                      ; prikaz byl vybran -> prazdny zasobnik
0029   3C01           00039         sublw h'01'                                     ; ...pokud to byl prikaz 01h...
002A   1D03           00040         btfss STATUS,Z
002B   2822           00041         goto CEK_PRIKAZ_01h
                      00042 
002C   082E           00043         movfw ATA_ATTRIBUTES            ; ...vodesleme zpet vlastnosti disku a jeho jmenovku (vis. popis
                             protokolu)
002D   229A           00044         call WR_USART
002E   22AA           00045         call ODESLI_MODEL_NUMBER        ; odesleme jmeno disku 
                      00046 
                      00047 
                      00048         PROG_PAGE_2
002F   118A               M                         bcf PCLATH,3
0030   160A               M                         bsf PCLATH,4
0031   2000           00049         call SCAN_MBR                           ; najdeme oddily s FAT32 a jejich seznam dame do bufferu
                             2
                      00050         PROG_PAGE_0
0032   118A               M                         bcf PCLATH,3
0033   120A               M                         bcf PCLATH,4
0034                  00051 CEK_PRIKAZ_02h_03h
                      00052         PROG_PAGE_1
0034   158A               M                         bsf PCLATH,3
0035   120A               M                         bcf PCLATH,4
0036   20DD           00053         call CEKEJ_PRIKAZ                       ; pockame si na prikaz
0037   01F5           00054         clrf STAV_PRIKAZU                       ; smazeme registr signalizujici platnost prikazu
0038   20E2           00055         call PRIKAZ_02h                         ; testujeme zda prisel prikaz 02h, pokud ano tak jej pro
                            vedeme a nastavime platnost prikazu
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00056         PROG_PAGE_2
0039   118A               M                         bcf PCLATH,3
003A   160A               M                         bsf PCLATH,4
003B   21D3           00057         call PRIKAZ_03h                         ; ---//---
                      00058         PROG_PAGE_0
003C   118A               M                         bcf PCLATH,3
003D   120A               M                         bcf PCLATH,4
003E   1C75           00059         btfss STAV_PRIKAZU,0            ; Pokud si zadna z procedur prikaz neprevzala, ...
003F   01F3           00060         clrf PRIJATYCH_DAT                      ; ...vymazeme zasobnik prikazu. (prikaz neni pro tuto ch
                            vili platny)
0040   1E2E           00061         btfss ATA_ATTRIBUTES,FAT32_LOAD ; cekame dokud nedojde k nasteni nejakeho oddilu
0041   2834           00062         goto CEK_PRIKAZ_02h_03h         ; pokud byl oddil vporadku nacten, pokracujeme...
                      00063 
                      00064 ;*******************************************************************************************************
                            *************
                      00065 ;*******************************************************************************************************
                            *************
                      00066 ;*******************************************************************************************************
                            *************
                      00067 ;*******************************************************************************************************
                            *************
0042                  00068 BIG_LOOP        
                      00069         ; Tady ta smycka beha po nacteni disku a nejake FATky porad dokola.
                      00070         ; Pri kazdem prubehu smyckou vyresime prikazy, ktere prisly, a pokud prehravame 
                      00071         ; nejakou mp3 tak dekoder nakrmime jednim sektorem...
                      00072         ; Mimo to je v teto smycce osefovano, ze kdyz skonci mp3, nacteme dalsi... (v zavislosti na nast
                            aveni repeatu)
                      00073         ; pokud se dostaneme na konec slozky a je nastaveno vyhledavani dalsich slozek, tak nejakou najd
                            eme...
                      00074 
0042   0873           00075         movfw PRIJATYCH_DAT
0043   39FF           00076         andlw h'FF'
0044   1903           00077         btfsc STATUS,Z
0045   286B           00078         goto BIG_LOOP__NENI_PRIKAZ
                      00079         
0046   01F5           00080         clrf STAV_PRIKAZU                       ; smazeme registr signalizujici platnost prikazu
                      00081         ; Pokud jsme tady, tak prisel nejaky prikaz, jdem predat prikaz jednotlivym proceduram
                      00082         PROG_PAGE_1
0047   158A               M                         bsf PCLATH,3
0048   120A               M                         bcf PCLATH,4
0049   20E2           00083         call PRIKAZ_02h                         ; testujeme zda prisel prikaz 02h, pokud ano tak jej pro
                            vedeme a nastavime platnost prikazu
                      00084         PROG_PAGE_2
004A   118A               M                         bcf PCLATH,3
004B   160A               M                         bsf PCLATH,4
004C   21D3           00085         call PRIKAZ_03h                         ; --- // ---
                      00086         PROG_PAGE_1
004D   158A               M                         bsf PCLATH,3
004E   120A               M                         bcf PCLATH,4
004F   2108           00087         call PRIKAZ_04h                         ; --- // ---
0050   2115           00088         call PRIKAZ_05h                         ; --- // ---
0051   2146           00089         call PRIKAZ_06h                         ; --- // ---
0052   2168           00090         call PRIKAZ_07h                         ; --- // ---
0053   218F           00091         call PRIKAZ_08h                         ; --- // ---
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0054   21BD           00092         call PRIKAZ_09h                         ; --- // ---
0055   21F0           00093         call PRIKAZ_0Ah                         ; --- // ---
                      00094         PROG_PAGE_2
0056   118A               M                         bcf PCLATH,3
0057   160A               M                         bsf PCLATH,4
0058   2312           00095         call PRIKAZ_0Bh                         ; --- // ---
0059   2334           00096         call PRIKAZ_0Ch                         ; --- // ---
005A   2378           00097         call PRIKAZ_0Dh                         ; --- // ---
                      00098         PROG_PAGE_1
005B   158A               M                         bsf PCLATH,3
005C   120A               M                         bcf PCLATH,4
                      00099 
005D   221E           00100         call PRIKAZ_80h                         ; --- // ---
005E   228A           00101         call PRIKAZ_81h                         ; --- // ---
005F   22A9           00102         call PRIKAZ_82h                         ; --- // ---
0060   22BF           00103         call PRIKAZ_83h                         ; --- // ---
0061   22F3           00104         call PRIKAZ_84h                         ; --- // ---
                      00105         PROG_PAGE_2
0062   118A               M                         bcf PCLATH,3
0063   160A               M                         bsf PCLATH,4
0064   2396           00106         call PRIKAZ_85h                         ; --- // ---
0065   23F3           00107         call PRIKAZ_86h                         ; --- // ---
0066   2402           00108         call PRIKAZ_87h                         ; --- // ---
                      00109         PROG_PAGE_0
0067   118A               M                         bcf PCLATH,3
0068   120A               M                         bcf PCLATH,4
                      00110         
0069   1C75           00111         btfss STAV_PRIKAZU,0            ; Pokud si zadna z procedur prikaz neprevzala, ...
006A   01F3           00112         clrf PRIJATYCH_DAT                      ; ...vymazeme zasobnik prikazu. (prikaz neni pro tuto ch
                            vili platny)
                      00113 
006B                  00114 BIG_LOOP__NENI_PRIKAZ
006B   0857           00115         movfw KONST_NECINNOSTI1
006C   0558           00116         andwf KONST_NECINNOSTI2,w
006D   3CFF           00117         sublw h'FF'
006E   1903           00118         btfsc STATUS,Z
006F   2874           00119         goto BIG_LOOP__NO_STANDBY       ; pokud je KONST_NECINNOSTI = h'FFFF', tak disk nechame porad za
                            pnuty
                      00120         
0070   0855           00121         movfw CITAC_NECINNOSTI1
0071   0456           00122         iorwf CITAC_NECINNOSTI2,w
0072   1903           00123         btfsc STATUS,Z
0073   2419           00124         call ATA_STANDBY                        ; pokud z disku jsme jiz dlouho nic necetli, tak jej dam
                            e do STANDBY
                      00125                                                                 ; potrebna doba je v KONST_NECINNOSTI
                      00126 
0074                  00127 BIG_LOOP__NO_STANDBY
                      00128 
0074   1C6E           00129         btfss PREH_STAV0,0                      ; Pokud je zvoleno play,...
0075   2907           00130         goto MP3_NOT_PLAY
                      00131 
0076   1CEE           00132         btfss PREH_STAV0,1                      ; ...a je co prehravat...
0077   2907           00133         goto MP3_NOT_PLAY
                      00134         
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0078   086D           00135         movfw PREH_DATA_POZICE
0079   024C           00136         subwf CLUSTER_SIZE,W
007A   1D03           00137         btfss STATUS,Z                          ; ...podivame se zda jiz nejsme na konci clusteru...
007B   28CA           00138         goto SEND_MP3_DATA
                      00139 
007C   0853           00140         movfw PREH_D_FRAGMENT1          ; ...pokud ano, podivame se zda nejsme na posledni casti fragmen
                            tu...
007D   0454           00141         iorwf PREH_D_FRAGMENT2,w
007E   1D03           00142         btfss STATUS,Z
007F   28A0           00143         goto BIG_LOOP_DEC_FRAGMENT      ; ...pokud ne, tak PREH_D_FRAGMENT1-- ; PREH_DATA_CL++
                      00144 
0080   0869           00145         movfw PREH_DATA_CL1                     ; ...pokud jo, tak si najdeme dalsi cluster v retezci.
0081   00BC           00146         movwf CLUSTER1
0082   086A           00147         movfw PREH_DATA_CL2
0083   00BD           00148         movwf CLUSTER2
0084   086B           00149         movfw PREH_DATA_CL3
0085   00BE           00150         movwf CLUSTER3
0086   086C           00151         movfw PREH_DATA_CL4
0087   00BF           00152         movwf CLUSTER4
                      00153 
0088   01ED           00154         clrf PREH_DATA_POZICE
0089   24EB           00155         call NEXT_CLUSTER
                      00156         
008A   1C3B           00157         btfss POZICE,0                          ; Pokud byl cluster posledni v retezci...
008B   2892           00158         goto BIG_LOOP_DALSI_FRAGMENT
                      00159 
008C   2117           00160         call DALSI_SKLADBA                      ; ...tak najdeme dalsi soubor co se ma prehrat (pokud je
                             nastaven repeat a dalsi kraviny)
                      00161         ; otestujeme zda se ma nejaka dalsi mp3 prehravat
008D   1C6E           00162         btfss PREH_STAV0,0                      ; Je zvoleno play?
008E   2907           00163         goto MP3_NOT_PLAY
008F   1CEE           00164         btfss PREH_STAV0,1                      ; Je co prehravat?
0090   2907           00165         goto MP3_NOT_PLAY
0091   28CA           00166         goto SEND_MP3_DATA
                      00167 
0092                  00168 BIG_LOOP_DALSI_FRAGMENT
0092   083C           00169         movfw CLUSTER1
0093   00E9           00170         movwf PREH_DATA_CL1
0094   083D           00171         movfw CLUSTER2
0095   00EA           00172         movwf PREH_DATA_CL2
0096   083E           00173         movfw CLUSTER3
0097   00EB           00174         movwf PREH_DATA_CL3
0098   083F           00175         movfw CLUSTER4
0099   00EC           00176         movwf PREH_DATA_CL4
                      00177 
009A   2573           00178         call ZJISTI_FRAGMENT
                      00179 
009B   0851           00180         movfw FRAGMENT1
009C   00D3           00181         movwf PREH_D_FRAGMENT1
009D   0852           00182         movfw FRAGMENT2
009E   00D4           00183         movwf PREH_D_FRAGMENT2
                      00184 
                      00185         ;movlw 'F'
                      00186         ;call WR_USART
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00187 
009F   28CA           00188         goto SEND_MP3_DATA
00A0                  00189 BIG_LOOP_DEC_FRAGMENT
                      00190         ;----------------------------
00A0   082F           00191         movfw VS_LOUDNESS
00A1   39FF           00192         andlw h'FF'
00A2   1903           00193         btfsc STATUS,Z                          ; pokud je nastaven nejaky filter, tak jej reaktivujeme.
                            ..
00A3   28BA           00194         goto BIG_LOOP_DEC_FRAGMENT_NO_PLUG
                      00195 
00A4   300A           00196         movlw VSADDR_AIADDR
00A5   00B6           00197         movwf TEMP1
00A6   3000           00198         movlw 0x00
00A7   00B7           00199         movwf TEMP2     
00A8   3042           00200         movlw 0x42
00A9   00B8           00201         movwf TEMP3
                      00202         PROG_PAGE_1
00AA   158A               M                         bsf PCLATH,3
00AB   120A               M                         bcf PCLATH,4
00AC   201C           00203         call VS_WR_REG                          ; nastavime zacatek uzivatelskeho programu (0x4200)
                      00204         PROG_PAGE_0
00AD   118A               M                         bcf PCLATH,3
00AE   120A               M                         bcf PCLATH,4
                      00205 
00AF   300D           00206         movlw VSADDR_AICTRL0
00B0   00B6           00207         movwf TEMP1
00B1   082F           00208         movfw VS_LOUDNESS
00B2   00B7           00209         movwf TEMP2     
00B3   3000           00210         movlw 0x00
00B4   00B8           00211         movwf TEMP3
                      00212         PROG_PAGE_1     
00B5   158A               M                         bsf PCLATH,3
00B6   120A               M                         bcf PCLATH,4
00B7   201C           00213         call VS_WR_REG                          ; nastavime pozadovany filter
                      00214         PROG_PAGE_0
00B8   118A               M                         bcf PCLATH,3
00B9   120A               M                         bcf PCLATH,4
                      00215 
00BA                  00216 BIG_LOOP_DEC_FRAGMENT_NO_PLUG
                      00217         ;----------------------------
                      00218 
                      00219         ; PREH_D_FRAGMENT1 --
00BA   3001           00220         movlw .1
00BB   02D3           00221         subwf PREH_D_FRAGMENT1,f
00BC   1803           00222         btfsc STATUS,C
00BD   28BF           00223         goto $+2
00BE   02D4           00224         subwf PREH_D_FRAGMENT2,f
                      00225 
                      00226         ; PREH_DATA_CL ++
00BF   0AE9           00227         incf PREH_DATA_CL1,f
00C0   1D03           00228         btfss STATUS,Z
00C1   28C9           00229         goto $+8
00C2   0AEA           00230         incf PREH_DATA_CL2,f
00C3   1D03           00231         btfss STATUS,Z
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C4   28C9           00232         goto $+5
00C5   0AEB           00233         incf PREH_DATA_CL3,f
00C6   1D03           00234         btfss STATUS,Z
00C7   28C9           00235         goto $+2
00C8   0AEC           00236         incf PREH_DATA_CL4,f
                      00237 
00C9   01ED           00238         clrf PREH_DATA_POZICE
                      00239 
00CA                  00240 SEND_MP3_DATA
00CA   1C6F           00241         btfss PREH_STAV1,0                      ; 0. bit = 1 => previjeni mp3 dopredu
00CB   28E5           00242         goto NOT_MP3_REWIND_FORWARD
00CC   14CD           00243         bsf VSREG_MODE_L,1                      ; fast forward on
                      00244 
00CD   1D6F           00245         btfss PREH_STAV1,2                      ; 2. bit = 1 => previji se pomalu, vzdy se po nejake dob
                            e kratky usek souboru prehraje  
00CE   28D9           00246         goto MP3_REWIND_FORWARD
                      00247 
00CF   0868           00248         movfw PREH_CITAC_PREV           ; MP3 previjime pomalu...
00D0   3C14           00249         sublw .20                                       ; ...podivame se kolik sektoru jsme previnuly...
00D1   1803           00250         btfsc STATUS,C                          ; ...pokud jich je vic jak 20...
00D2   28D9           00251         goto MP3_REWIND_FORWARD         ; 
                      00252         
00D3   10CD           00253         bcf VSREG_MODE_L,1                      ; ...tak dalsi pustime normalne. (fast forward off)
                      00254 
00D4   0868           00255         movfw PREH_CITAC_PREV
00D5   3C19           00256         sublw .25
00D6   1D03           00257         btfss STATUS,Z                          ; pokud jsme jich uz normalne pustily 5, ... (25-20)
00D7   28D9           00258         goto MP3_REWIND_FORWARD
                      00259 
00D8   01E8           00260         clrf PREH_CITAC_PREV            ; ...vymazeme citac previjeni (zas nejaky sektory pustime rychle
                            )
00D9                  00261 MP3_REWIND_FORWARD
00D9   3000           00262         movlw VSADDR_MODE
00DA   00B6           00263         movwf TEMP1
00DB   084D           00264         movfw VSREG_MODE_L
00DC   00B7           00265         movwf TEMP2
00DD   01B8           00266         clrf TEMP3
                      00267         PROG_PAGE_1     
00DE   158A               M                         bsf PCLATH,3
00DF   120A               M                         bcf PCLATH,4
00E0   201C           00268         call VS_WR_REG
                      00269         PROG_PAGE_0
00E1   118A               M                         bcf PCLATH,3
00E2   120A               M                         bcf PCLATH,4
                      00270         
00E3   196F           00271         btfsc PREH_STAV1,2                      ; 2. bit = 1 => previji se pomalu, vzdy se po nejake dob
                            e kratky usek souboru prehraje  
00E4   0AE8           00272         incf PREH_CITAC_PREV,f
00E5                  00273 NOT_MP3_REWIND_FORWARD
                      00274 
00E5   0869           00275         movfw PREH_DATA_CL1                     ; Mame zjisteny cluster a jeho cast, kterou mame prehrav
                            at...
00E6   00BC           00276         movwf CLUSTER1
00E7   086A           00277         movfw PREH_DATA_CL2
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E8   00BD           00278         movwf CLUSTER2
00E9   086B           00279         movfw PREH_DATA_CL3
00EA   00BE           00280         movwf CLUSTER3
00EB   086C           00281         movfw PREH_DATA_CL4
00EC   00BF           00282         movwf CLUSTER4
00ED   086D           00283         movfw PREH_DATA_POZICE
00EE   00BB           00284         movwf POZICE
                      00285 
00EF   2488           00286         call CLUSTER_TO_LBA                     ; zjistime si skutecnou polohu dat na disku...
00F0   3001           00287         movlw .1
00F1   00A6           00288         movwf SECTOR_C
00F2   23E1           00289         call READ_SECTOR                        ; dame prikaz precist data...
                      00290 
00F3   1487           00291         bsf MP3_CS                                      ; po SI posilam data
00F4   3000           00292         movlw .0                                        ; posilame celkem 256 slov
00F5   00B6           00293         movwf TEMP1             
00F6                  00294 SEND_MP3_WORD
                      00295         PROG_PAGE_1
00F6   158A               M                         bsf PCLATH,3
00F7   120A               M                         bcf PCLATH,4
00F8   2097           00296         call WAIT_FOR_VSDREQ
                      00297         PROG_PAGE_0
00F9   118A               M                         bcf PCLATH,3
00FA   120A               M                         bcf PCLATH,4
00FB   2382           00298         call READ_DATA
00FC   0820           00299         movfw DATA_L
                      00300         PROG_PAGE_1
00FD   158A               M                         bsf PCLATH,3
00FE   120A               M                         bcf PCLATH,4
00FF   2000           00301         call VS_WR_BYTE
0100   0821           00302         movfw DATA_H
0101   2000           00303         call VS_WR_BYTE
                      00304         PROG_PAGE_0
0102   118A               M                         bcf PCLATH,3
0103   120A               M                         bcf PCLATH,4
0104   0BB6           00305         decfsz TEMP1,f  
0105   28F6           00306         goto SEND_MP3_WORD
                      00307 
0106   0AED           00308         incf PREH_DATA_POZICE,f
0107                  00309 MP3_NOT_PLAY
                      00310 
0107   1C6E           00311         btfss PREH_STAV0,0                      ; Pokud je zvoleno play,...
0108   2842           00312         goto BIG_LOOP
0109   18EE           00313         btfsc PREH_STAV0,1                      ; ...neni co prehravat...
010A   2842           00314         goto BIG_LOOP
010B   19EE           00315         btfsc PREH_STAV0,3                      ; ...ma se pokracovat v prehravani...
010C   2842           00316         goto BIG_LOOP
010D   1A6E           00317         btfsc PREH_STAV0,4                      ; ...neni zvolen repeat...
010E   2842           00318         goto BIG_LOOP
010F   1F6E           00319         btfss PREH_STAV0,6                      ; ...ma se pokracovat v prehravani v dalsich slozkach...
0110   2842           00320         goto BIG_LOOP
                      00321 
                      00322         ; jdeme prozkoumavat podadresare v aktualnim adresari, nebo hledat dalsi adresare s MP3
                      00323         PROG_PAGE_2
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0111   118A               M                         bcf PCLATH,3
0112   160A               M                         bsf PCLATH,4
0113   2C10           00324         goto HLEDEJ_ADRESAR
0114                  00325 HLEDEJ_ADRESAR_RETURN
                      00326         PROG_PAGE_0
0114   118A               M                         bcf PCLATH,3
0115   120A               M                         bcf PCLATH,4
                      00327 
0116   2842           00328         goto BIG_LOOP
                      00329 ;*******************************************************************************************************
                            *************
                      00330 ;*******************************************************************************************************
                            *************
                      00331 ;*******************************************************************************************************
                            *************
                      00332 ;*******************************************************************************************************
                            *************
0117                  00333 DALSI_SKLADBA
                      00334         ; tato procedura je volana, kdyz skonci mp3, aby nasla v adresari dalsi mp3 ktera se ma prehrava
                            t...
0117   224C           00335         call ULOZ_KONFIGUTACI
                      00336 
                      00337 ;       bcf PREH_STAV0,0                ; 0. bit =      0 => stop nebo pauza (nic nehraje)
0118   10EE           00338         bcf PREH_STAV0,1                ; 1. bit =      0 => neni zadny soubor k prehravani (nastaveni b
                            itu play nema zadny ucinek)
0119   116E           00339         bcf PREH_STAV0,2                ; 2. bit =      1 => je nastaven, kdyz se zmeni prehravany soubo
                            r (bez volani prikazu) do doby, nez prijde prikaz na dotaz STAVU... (81h)
011A   106F           00340         bcf PREH_STAV1,0                ; 0. bit =  0 => normalni prehravani (mp3 se nepreviji)
011B   19EE           00341         btfsc PREH_STAV0,3              ; 3. bit =      0 => po skonceni souboru se pokracuje v prehrava
                            ni (zavisi na nastaveni repeatu)
011C   0008           00342         return
                      00343 
                      00344 ; PREH_STAV0
                      00345 ;       4. bit =        0 => repeat off
                      00346 ;                               1 => repeat on
                      00347 ;       5. bit =        0 => repeat adresare (prvni cluster adresare musi byt nastaven v PREH_ADDR_ZACAT
                            EK_CL[1-4] )
                      00348 ;                               1 => repeat souboru (po skonceni prehravani souboru se ten samy soubor z
                            acne prehravat znova)
011D   1E6E           00349         btfss PREH_STAV0,4
011E   2951           00350         goto DALSI_SKLADBA_NO_R_S
011F   1EEE           00351         btfss PREH_STAV0,5
0120   2951           00352         goto DALSI_SKLADBA_NO_R_S       
0121                  00353 DALSI_SKLADBA_REPAT_SOUBORU
0121   0862           00354         movfw PREH_ADR_CL1
0122   00BC           00355         movwf CLUSTER1
0123   0863           00356         movfw PREH_ADR_CL2
0124   00BD           00357         movwf CLUSTER2
0125   0864           00358         movfw PREH_ADR_CL3
0126   00BE           00359         movwf CLUSTER3
0127   0865           00360         movfw PREH_ADR_CL4
0128   00BF           00361         movwf CLUSTER4
0129   0866           00362         movfw PREH_ZAZNAM1
012A   00E0           00363         movwf ZAZNAM1
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

012B   0867           00364         movfw PREH_ZAZNAM2
012C   00E1           00365         movwf ZAZNAM2
                      00366 
                      00367         PROG_PAGE_1
012D   158A               M                         bsf PCLATH,3
012E   120A               M                         bcf PCLATH,4
012F   2361           00368         call SKOC_NA_ZAZNAM
                      00369         PROG_PAGE_0
0130   118A               M                         bcf PCLATH,3
0131   120A               M                         bcf PCLATH,4
0132   183B           00370         btfsc POZICE,0                          ; tento test by tu byt nemusel, protoze jsme jiz tento s
                            oubor hrali, jeden ale nikdy nevi...
0133   0008           00371         return
                      00372         PROG_PAGE_1
0134   158A               M                         bsf PCLATH,3
0135   120A               M                         bcf PCLATH,4
0136   23E1           00373         call FILE_INFO
                      00374         PROG_PAGE_0
0137   118A               M                         bcf PCLATH,3
0138   120A               M                         bcf PCLATH,4
                      00375 
                      00376         INDF_BANK_2
0139   1783               M                         bsf STATUS,IRP    
                      00377         ; ...nastavime jej jako prehravany soubor.
013A   301C           00378         movlw 0x1C                                      ; 13. byte bufferu 2
013B   0084           00379         movwf FSR
013C   0800           00380         movfw INDF
013D   00E9           00381         movwf PREH_DATA_CL1
013E   00BC           00382         movwf CLUSTER1
013F   0A84           00383         incf FSR,f
0140   0800           00384         movfw INDF
0141   00EA           00385         movwf PREH_DATA_CL2
0142   00BD           00386         movwf CLUSTER2
0143   0A84           00387         incf FSR,f
0144   0800           00388         movfw INDF
0145   00EB           00389         movwf PREH_DATA_CL3
0146   00BE           00390         movwf CLUSTER3
0147   0A84           00391         incf FSR,f
0148   0800           00392         movfw INDF
0149   00EC           00393         movwf PREH_DATA_CL4
014A   00BF           00394         movwf CLUSTER4
                      00395 
014B   2573           00396         call ZJISTI_FRAGMENT
                      00397 
014C   0851           00398         movfw FRAGMENT1
014D   00D3           00399         movwf PREH_D_FRAGMENT1
014E   0852           00400         movfw FRAGMENT2
014F   00D4           00401         movwf PREH_D_FRAGMENT2
                      00402 
0150   299D           00403         goto DALSI_SKLADBA_PLAY         ; nic jineho nemusime nastavovat, protoze hrajeme ten samy soubo
                            r co predtim
0151                  00404 DALSI_SKLADBA_NO_R_S
                      00405 ; PREH_STAV0
                      00406 ;       4. bit =        0 => repeat off
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00407 ;                               1 => repeat on
                      00408 ;       5. bit =        0 => repeat adresare (prvni cluster adresare musi byt nastaven v PREH_ADDR_ZACAT
                            EK_CL[1-4] )
                      00409 ;                               1 => repeat souboru (po skonceni prehravani souboru se ten samy soubor z
                            acne prehravat znova)
                      00410         ; tak ted jdem hledat dalsi soubor v adresari...
                      00411         
                      00412 ;       HL_PARAMETRY    -- parametry hledani
                      00413 ;       HL_ADR_CL[1-4]  -- prnvi cluster prohledavaneho adresare
                      00414 ;       ZAZNAM[1-2]             -- zaznam od ktereho hledame
0151   3006           00415         movlw b'00000110'
0152   00D9           00416         movwf HL_PARAMETRY
0153   0862           00417         movfw PREH_ADR_CL1
0154   00DA           00418         movwf HL_ADR_CL1
0155   0863           00419         movfw PREH_ADR_CL2
0156   00DB           00420         movwf HL_ADR_CL2
0157   0864           00421         movfw PREH_ADR_CL3
0158   00DC           00422         movwf HL_ADR_CL3
0159   0865           00423         movfw PREH_ADR_CL4
015A   00DD           00424         movwf HL_ADR_CL4
015B   0866           00425         movfw PREH_ZAZNAM1
015C   00E0           00426         movwf ZAZNAM1
015D   0867           00427         movfw PREH_ZAZNAM2
015E   00E1           00428         movwf ZAZNAM2
                      00429         
                      00430         PROG_PAGE_1
015F   158A               M                         bsf PCLATH,3
0160   120A               M                         bcf PCLATH,4
0161   2479           00431         call HLEDEJ
                      00432         PROG_PAGE_0     
0162   118A               M                         bcf PCLATH,3
0163   120A               M                         bcf PCLATH,4
                      00433 
                      00434         INDF_BANK_2
0164   1783               M                         bsf STATUS,IRP    
0165   3030           00435         movlw 0x30
0166   0084           00436         movwf FSR
0167   0800           00437         movfw INDF
0168   3C06           00438         sublw h'06'
0169   1903           00439         btfsc STATUS,Z
016A   2980           00440         goto DALSI_SKLADBA_MAME_SOUBOR
                      00441 
                      00442         ; zadny dalsi mp3 soubor v adresari neni...
016B   1E6E           00443         btfss PREH_STAV0,4                              ; ..podivame se, zda neni nastaven repeat slozky
016C   0008           00444         return
                      00445 
                      00446         ; je nastaven repeat slozky a uz neni co prehravat. Jdem hledat prvni mp3 ve slozce...
                      00447 
                      00448         ; HL_PARAMETRY
                      00449         ;               7. bit - tento bit nelze nastavit uzivatelem
                      00450         ;                               = 0 > adresar je ROOT
                      00451         ;                               = 1 > adresar neni ROOT 
016D   3006           00452         movlw b'00000110'                               ; parametry hledani, pokud hledame prvni mp3 adr
                            esari ktery neni ROOT 
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00453                                                                         ; (prvni zaznam je ukazatel na p
                            redchozi adresar)
016E   1FD9           00454         btfss HL_PARAMETRY,7
016F   300E           00455         movlw b'00001110'                               ; parametry hledani, pokud hledame prvni mp3 v R
                            OOT adresari (prvni zaznam)
0170   00D9           00456         movwf HL_PARAMETRY
                      00457 
0171   3001           00458         movlw h'01'                                             ; prvni cluster prohledavaneho adresare 
                            mame jiz nastaven,
0172   00E0           00459         movwf ZAZNAM1                                   ; parametry taky, ted jen zaznam od klereho hled
                            ame... 
0173   01E1           00460         clrf ZAZNAM2                                    ; (pokud hledame v ROOTu, hledame prvni zaznam)
                      00461 
                      00462         PROG_PAGE_1
0174   158A               M                         bsf PCLATH,3
0175   120A               M                         bcf PCLATH,4
0176   2479           00463         call HLEDEJ
                      00464         PROG_PAGE_0     
0177   118A               M                         bcf PCLATH,3
0178   120A               M                         bcf PCLATH,4
                      00465 
                      00466         INDF_BANK_2
0179   1783               M                         bsf STATUS,IRP    
017A   3030           00467         movlw 0x30
017B   0084           00468         movwf FSR
017C   0800           00469         movfw INDF
017D   3C06           00470         sublw h'06'
017E   1D03           00471         btfss STATUS,Z
017F   0008           00472         return                                                  ; sem bychom se nemeli dostat, protoze k
                            dyz uz neco hralo, tak tu nejaky soubor musi byt?!
                      00473         ;goto DALSI_SKLADBA_MAME_SOUBOR
0180                  00474 DALSI_SKLADBA_MAME_SOUBOR
                      00475         INDF_BANK_2
0180   1783               M                         bsf STATUS,IRP    
0181   303C           00476         movlw 0x3C
0182   0084           00477         movwf FSR
0183   0800           00478         movfw INDF
0184   00E9           00479         movwf PREH_DATA_CL1
0185   00BC           00480         movwf CLUSTER1
0186   0A84           00481         incf FSR,f
0187   0800           00482         movfw INDF
0188   00EA           00483         movwf PREH_DATA_CL2
0189   00BD           00484         movwf CLUSTER2
018A   0A84           00485         incf FSR,f
018B   0800           00486         movfw INDF
018C   00EB           00487         movwf PREH_DATA_CL3
018D   00BE           00488         movwf CLUSTER3
018E   0A84           00489         incf FSR,f
018F   0800           00490         movfw INDF
0190   00EC           00491         movwf PREH_DATA_CL4
0191   00BF           00492         movwf CLUSTER4
0192   0A84           00493         incf FSR,f
0193   0800           00494         movfw INDF
0194   00E6           00495         movwf PREH_ZAZNAM1
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0195   0A84           00496         incf FSR,f
0196   0800           00497         movfw INDF
0197   00E7           00498         movwf PREH_ZAZNAM2
                      00499 
0198   2573           00500         call ZJISTI_FRAGMENT
                      00501 
0199   0851           00502         movfw FRAGMENT1
019A   00D3           00503         movwf PREH_D_FRAGMENT1
019B   0852           00504         movfw FRAGMENT2
019C   00D4           00505         movwf PREH_D_FRAGMENT2
                      00506 
                      00507 
019D                  00508 DALSI_SKLADBA_PLAY
019D   01ED           00509         clrf PREH_DATA_POZICE
019E   146E           00510         bsf PREH_STAV0,0
019F   14EE           00511         bsf PREH_STAV0,1                        ; nastavime si vlastosti prehravani: (PREH_STAV[0-1])
01A0   156E           00512         bsf PREH_STAV0,2
                      00513 
                      00514         PROG_PAGE_1
01A1   158A               M                         bsf PCLATH,3
01A2   120A               M                         bcf PCLATH,4
01A3   204D           00515         call VS_SOFT_RESET
                      00516 
01A4   10CD           00517         bcf VSREG_MODE_L,1                      ; prehravame normalni rychlosti 
01A5   106F           00518         bcf PREH_STAV1,0                        ; prehravame normalni rychlosti 
                      00519         
01A6   3000           00520         movlw VSADDR_MODE
01A7   00B6           00521         movwf TEMP1
01A8   084D           00522         movfw VSREG_MODE_L
01A9   00B7           00523         movwf TEMP2
01AA   01B8           00524         clrf TEMP3
01AB   201C           00525         call VS_WR_REG
                      00526         PROG_PAGE_0
01AC   118A               M                         bcf PCLATH,3
01AD   120A               M                         bcf PCLATH,4
                      00527         
01AE   0008           00528         return
                      00529 ;*******************************************************************************************************
                            *************
01AF                  00530 INIT_PORT
                      00531         BANK_1
01AF   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
01B0   1683               M                 bsf     STATUS,RP0    
                      00532 
01B1   3091           00533         movlw b'10010001'                       ; bity SO a DREQ jako vstupy (signaly z dekoderu)
01B2   0087           00534         movwf MP3_PORT_TRIS
01B3   3000           00535         movlw b'00000000'                       ; adresovani disku jako vystupy
01B4   0085           00536         movwf ATA_ADDRESS_TRIS          
01B5   3000           00537         movlw .0
01B6   0089           00538         movwf ATA_CONTROL_TRIS          ; ovladani disku jako vystupy
01B7   30FF           00539         movlw 0xff
01B8   0086           00540         movwf DATA_PORT_LOW_TRIS        ; datovou sbernici jako vstupy
01B9   0088           00541         movwf DATA_PORT_HIGH_TRIS       
                      00542         BANK_0
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01BA   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
01BB   1283               M                 bcf     STATUS,RP0    
                      00543         
01BC   3007           00544         movlw b'00000111'       ; signal reset-, diow- a dior- jsou aktivni v log. 0 !!!
01BD   0089           00545         movwf ATA_CONTROL
01BE   3037           00546         movlw b'00110111'       ; CS1-, CS0- = 1 => datova sbernice disku je odpojena
01BF   0085           00547         movwf ATA_ADDRESS
01C0   0187           00548         clrf MP3_PORT   
01C1   0008           00549         return
                      00550 ;**********************************************************
01C2                  00551 INIT_CONFIG     ; nakonfiguruje preruseni, WDT, USART, pull ups....
                      00552         BANK_0
01C2   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
01C3   1283               M                 bcf     STATUS,RP0    
01C4   3031           00553         MOVLW b'00110001'       ; preddelicka 1:8, timer1 on, interni osc
01C5   0090           00554         MOVWF T1CON                     ; 
01C6   018F           00555         clrf TMR1H
01C7   018E           00556         clrf TMR1L
                      00557 
                      00558         BANK_1
01C8   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
01C9   1683               M                 bsf     STATUS,RP0    
01CA   30C7           00559         movlw b'11000111'       ; ...pull up a podobny koniny
                      00560                 ; PORTB Pull-up Enable bit              1 = pull up enabled
                      00561                 ; Interrupt Edge Select bit             1 = interrupt on rising edge of RB0/INT pin
                      00562                 ; TMR0 Clock Source Select bit  0 = Internal instruction cycle clock (CLKO)
                      00563                 ; TMR0 Source Edge Select bit   0 = Increment on low-to-high transition on RA4/T0CKI pin
                      00564                 ; Prescaler Assignment bit              0 = Prescaler is assigned to the Timer0 module
                      00565                 ; PS2:PS0: Prescaler Rate Select bits   111 = TMR0 Rate 1 : 256; WDT Rate 1 : 128
01CB   0081           00566         movwf OPTION_REG
                      00567         
01CC   3020           00568         movlw b'00100000'       ; povolime preruseni od USARTu (kdyz neco dostanem)
01CD   008C           00569         movwf PIE1      
01CE   3000           00570         movlw b'00000000'       ; ostatni vnejsi preruseni vymaskujeme
01CF   008D           00571         movwf PIE2                      
01D0   140C           00572         bsf PIE1, TMR1IE        ; Enable Timer1 interrupt
                      00573 
01D1   30C0           00574         movlw b'11000000'       ; povolime preruseni na vnejsi zarizeni (USART)                         
01D2   008B           00575         movwf INTCON
                      00576 
01D3   3026           00577         movlw b'00100110'       ;konfigurace USARTu (asynchronni, 8bit, bez parity, rychle - (BRGH = 1))
01D4   0098           00578         movwf TXSTA
                      00579         BANK_0
01D5   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
01D6   1283               M                 bcf     STATUS,RP0    
01D7   3090           00580         movlw b'10010000'       ;zapnu USART
01D8   0098           00581         movwf RCSTA
                      00582         BANK_1
01D9   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
01DA   1683               M                 bsf     STATUS,RP0    
01DB   3040           00583         movlw .64               ; Fosc = 20 MHz, BRGH=1 => rychlost = 19231 bps
                      00584         ;movlw .129     ; Fosc = 20 MHz, BRGH=1 => rychlost =  9615 bps
                      00585         ;movlw .103     ; Fosc = 16 MHz, BRGH=1 => rychlost =  9615 bps
01DC   0099           00586         movwf SPBRG     
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00587 
01DD   3007           00588         movlw b'00000111'
01DE   009F           00589         movwf ADCON1            ; vsechny vstupy (RA,RE) jako digitalni
                      00590         BANK_0  
01DF   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
01E0   1283               M                 bcf     STATUS,RP0    
01E1   019F           00591         clrf ADCON0                     ; pro jistotu (vypneme A/D prevodniky)
                      00592 
                      00593 #IF SPI_SOFTWARE==1
                      00594 ;spi setup
                      00595         BANK_1
01E2   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
01E3   1683               M                 bsf     STATUS,RP0    
01E4   0194           00596         clrf SSPSTAT
01E5   1714           00597         bsf SSPSTAT,CKE
                      00598         BANK_0
01E6   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
01E7   1283               M                 bcf     STATUS,RP0    
01E8   0194           00599         clrf SSPCON                     ; SPI master, 5MHz clock
01E9   1694           00600         bsf SSPCON,SSPEN        ; enable port
                      00601 #ENDIF
                      00602 ; mastaveni dulezitych registru
01EA   01F3           00603         clrf PRIJATYCH_DAT      ; zasobnik prikazu prazdny...
01EB   3070           00604         movlw h'70'     
01EC   00D7           00605         movwf KONST_NECINNOSTI1
01ED   3017           00606         movlw h'17'                     ; 1770h = 6000d => pri 0.1s preruseni 10 minut
01EE   00D8           00607         movwf KONST_NECINNOSTI2
                      00608 
01EF   01E2           00609         clrf PREH_ADR_CL1
01F0   01E3           00610         clrf PREH_ADR_CL2
01F1   01E4           00611         clrf PREH_ADR_CL3
01F2   01E5           00612         clrf PREH_ADR_CL4
01F3   01E6           00613         clrf PREH_ZAZNAM1
01F4   01E7           00614         clrf PREH_ZAZNAM2
01F5   01EE           00615         clrf PREH_STAV0
01F6   01EF           00616         clrf PREH_STAV1
                      00617 
                      00618 ; nacteni konfigurace z EEPROM
                      00619         BANK_2
01F7   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
01F8   1283               M                 bcf     STATUS,RP0    
01F9   018D           00620         clrf EEADR
                      00621         BANK_3
01FA   1703               M                 bsf     STATUS,RP1              ; BANK3  RP1:RP0 = 11
01FB   1683               M                 bsf     STATUS,RP0    
01FC   140C           00622         bsf EECON1,RD
                      00623         BANK_2
01FD   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
01FE   1283               M                 bcf     STATUS,RP0    
01FF   080C           00624         movfw EEDATA
                      00625         BANK_0
0200   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0201   1283               M                 bcf     STATUS,RP0    
0202   00CF           00626         movwf VSREG_VOL_L
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00627 
                      00628         BANK_2
0203   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0204   1283               M                 bcf     STATUS,RP0    
0205   0A8D           00629         incf EEADR,f
                      00630         BANK_3
0206   1703               M                 bsf     STATUS,RP1              ; BANK3  RP1:RP0 = 11
0207   1683               M                 bsf     STATUS,RP0    
0208   140C           00631         bsf EECON1,RD
                      00632         BANK_2
0209   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
020A   1283               M                 bcf     STATUS,RP0    
020B   080C           00633         movfw EEDATA
                      00634         BANK_0
020C   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
020D   1283               M                 bcf     STATUS,RP0    
020E   00D0           00635         movwf VSREG_VOL_H
                      00636         
                      00637         BANK_2
020F   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0210   1283               M                 bcf     STATUS,RP0    
0211   0A8D           00638         incf EEADR,f
                      00639         BANK_3
0212   1703               M                 bsf     STATUS,RP1              ; BANK3  RP1:RP0 = 11
0213   1683               M                 bsf     STATUS,RP0    
0214   140C           00640         bsf EECON1,RD
                      00641         BANK_2
0215   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0216   1283               M                 bcf     STATUS,RP0    
0217   080C           00642         movfw EEDATA
                      00643         BANK_0
0218   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0219   1283               M                 bcf     STATUS,RP0    
021A   00EE           00644         movwf PREH_STAV0
                      00645 
                      00646         BANK_2
021B   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
021C   1283               M                 bcf     STATUS,RP0    
021D   0A8D           00647         incf EEADR,f
                      00648         BANK_3
021E   1703               M                 bsf     STATUS,RP1              ; BANK3  RP1:RP0 = 11
021F   1683               M                 bsf     STATUS,RP0    
0220   140C           00649         bsf EECON1,RD
                      00650         BANK_2
0221   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0222   1283               M                 bcf     STATUS,RP0    
0223   080C           00651         movfw EEDATA
                      00652         BANK_0
0224   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0225   1283               M                 bcf     STATUS,RP0    
0226   00EF           00653         movwf PREH_STAV1
0227   0008           00654         return
                      00655 ;**********************************************************
0228                  00656 WR_EEPROM                               ; zapíe data z EEDATA na místo EEADR
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00657         BANK_2
0228   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0229   1283               M                 bcf     STATUS,RP0    
022A   080C           00658         movfw EEDATA
                      00659         BANK_0
022B   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
022C   1283               M                 bcf     STATUS,RP0    
022D   00B6           00660         movwf TEMP1                     ; zapisovanou hodnotu dame do TEMP1
                      00661         BANK_3
022E   1703               M                 bsf     STATUS,RP1              ; BANK3  RP1:RP0 = 11
022F   1683               M                 bsf     STATUS,RP0    
0230   140C           00662         bsf EECON1,RD
                      00663         BANK_2
0231   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0232   1283               M                 bcf     STATUS,RP0    
0233   020C           00664         subwf EEDATA,W          ; podivame se, zda nechceme zapisovat hodnotu, ktera uz je zde ulozena..
                            .
                      00665         BANK_0
0234   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0235   1283               M                 bcf     STATUS,RP0    
0236   1903           00666         btfsc STATUS,Z
0237   0008           00667         return                          ; pokud ano, tak nic nezapisujeme a koncime
0238   0836           00668         movfw TEMP1
                      00669         BANK_2
0239   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
023A   1283               M                 bcf     STATUS,RP0    
023B   008C           00670         movwf EEDATA
                      00671         BANK_3  
023C   1703               M                 bsf     STATUS,RP1              ; BANK3  RP1:RP0 = 11
023D   1683               M                 bsf     STATUS,RP0    
023E   138B           00672         bcf INTCON,GIE          ; Zákaz pøeruení
023F   150C           00673         bsf EECON1,WREN         ; Povolení zápisu
0240   3055           00674         movlw h'55'                     ; zapi hodnotu
0241   008D           00675         movwf EECON2            ; do EECON2
0242   30AA           00676         movlw h'AA'                     ; zapi dalí
0243   008D           00677         movwf EECON2            ; do EECON2
0244   148C           00678         bsf EECON1,WR           ; Zahájení zápisu
0245   178B           00679         bsf INTCON,GIE          ; Povol pøeruení               
0246   188C           00680         btfsc EECON1,WR         ; èekáme, ne se dokonèí zápis
0247   2A46           00681         goto $-1        
0248   120C           00682         bcf EECON1,EEIF
                      00683         BANK_0
0249   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
024A   1283               M                 bcf     STATUS,RP0    
024B   0008           00684         return
                      00685 ;**********************************************************
024C                  00686 ULOZ_KONFIGUTACI
                      00687         ; uloí do EEPROMy natavení
                      00688         BANK_2  
024C   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
024D   1283               M                 bcf     STATUS,RP0    
024E   3000           00689         movlw .0
024F   008D           00690         movwf EEADR
                      00691         BANK_0
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0250   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0251   1283               M                 bcf     STATUS,RP0    
0252   084F           00692         movfw VSREG_VOL_L
                      00693         BANK_2
0253   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0254   1283               M                 bcf     STATUS,RP0    
0255   008C           00694         movwf EEDATA
0256   2228           00695         call WR_EEPROM
                      00696 
                      00697         BANK_2
0257   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0258   1283               M                 bcf     STATUS,RP0    
0259   3001           00698         movlw .1
025A   008D           00699         movwf EEADR
                      00700         BANK_0
025B   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
025C   1283               M                 bcf     STATUS,RP0    
025D   0850           00701         movfw VSREG_VOL_H
                      00702         BANK_2
025E   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
025F   1283               M                 bcf     STATUS,RP0    
0260   008C           00703         movwf EEDATA
0261   2228           00704         call WR_EEPROM
                      00705 
                      00706         BANK_2
0262   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0263   1283               M                 bcf     STATUS,RP0    
0264   3002           00707         movlw .2
0265   008D           00708         movwf EEADR
                      00709         BANK_0
0266   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0267   1283               M                 bcf     STATUS,RP0    
0268   086E           00710         movfw PREH_STAV0
                      00711         BANK_2
0269   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
026A   1283               M                 bcf     STATUS,RP0    
026B   008C           00712         movwf EEDATA
026C   2228           00713         call WR_EEPROM
                      00714 
                      00715         BANK_2
026D   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
026E   1283               M                 bcf     STATUS,RP0    
026F   3003           00716         movlw .3
0270   008D           00717         movwf EEADR
                      00718         BANK_0
0271   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0272   1283               M                 bcf     STATUS,RP0    
0273   086F           00719         movfw PREH_STAV1
                      00720         BANK_2
0274   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0275   1283               M                 bcf     STATUS,RP0    
0276   008C           00721         movwf EEDATA
0277   2228           00722         call WR_EEPROM
                      00723 
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00724         INDF_BANK_0
0278   1383               M                         bcf STATUS,IRP    
0279   3004           00725         movlw .4
027A   00B7           00726         movwf TEMP2
027B   3040           00727         movlw 0x40                                      ; POCATEK_DAT1
027C   0084           00728         movwf FSR
027D                  00729 ULOZ_KONFIGUTACI_LOOP1
027D   0837           00730         movfw TEMP2
                      00731         BANK_2
027E   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
027F   1283               M                 bcf     STATUS,RP0    
0280   008D           00732         movwf EEADR
0281   0800           00733         movfw INDF
0282   008C           00734         movwf EEDATA
0283   0A84           00735         incf FSR,f
0284   2228           00736         call WR_EEPROM
                      00737         ; BANK_2        ; neni potreba, protoze z predchozi proceduru se vracime v BANCE 0
0285   0AB7           00738         incf TEMP2,f
0286   0837           00739         movfw TEMP2
0287   3C08           00740         sublw .8
0288   1D03           00741         btfss STATUS,Z
0289   2A7D           00742         goto ULOZ_KONFIGUTACI_LOOP1
                      00743 
                      00744         ;INDF_BANK_0
                      00745         ;movlw .9
                      00746         ;movwf TEMP2
028A   3062           00747         movlw 0x62                                      ; PREH_ADR_CL1          equ 0x062
028B   0084           00748         movwf FSR
028C                  00749 ULOZ_KONFIGUTACI_LOOP2
028C   0837           00750         movfw TEMP2
                      00751         BANK_2
028D   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
028E   1283               M                 bcf     STATUS,RP0    
028F   008D           00752         movwf EEADR
0290   0800           00753         movfw INDF
0291   008C           00754         movwf EEDATA
0292   0A84           00755         incf FSR,f
0293   2228           00756         call WR_EEPROM
                      00757         ; BANK_2        ; neni potreba, protoze z predchozi proceduru se vracime v BANCE 0
0294   0AB7           00758         incf TEMP2,f
0295   0837           00759         movfw TEMP2
0296   3C13           00760         sublw .19
0297   1D03           00761         btfss STATUS,Z
0298   2A8C           00762         goto ULOZ_KONFIGUTACI_LOOP2
                      00763 
                      00764         
0299   0008           00765         return
                      00766 ;**********************************************************
029A                  00767 WR_USART        ; odesle slovo ve workingu po USARTu
                      00768                         ; prijimani dat je reseno prez preruseni...
                      00769         BANK_1  
029A   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
029B   1683               M                 bsf     STATUS,RP0    
029C   1C98           00770         btfss TXSTA,1 
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

029D   2A9A           00771         goto WR_USART   ; cekame do chvile nez bude pripraven transmit buffer 
                      00772 
                      00773         BANK_0  
029E   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
029F   1283               M                 bcf     STATUS,RP0    
02A0   0099           00774         movwf TXREG
02A1   0008           00775         return
                      00776 ;**********************************************************
                      00777 ; tento podprogram bude pro budouci praci zbytecny, je zde jen proto, abych na PC videl ze program byl s
                            pusten...
                      00778 ;POZDRAV  ; odesle po seriove lince pozdrav
                      00779 ;       movlw 'A'       
                      00780 ;       call WR_USART
                      00781 ;       movlw 'h'
                      00782 ;       call WR_USART
                      00783 ;       movlw 'o'
                      00784 ;       call WR_USART
                      00785 ;       movlw 'j'
                      00786 ;       call WR_USART
                      00787 ;       movlw '!'
                      00788 ;       call WR_USART
                      00789 ;       return
                      00790 ;**********************************************************
                      00791 ; odesle data, ktera jdou z disku USARTEM. Pocet dat je v reg. TEMP1
02A2                  00792 ODESLI_DATA
02A2   2382           00793         call READ_DATA  
02A3   0820           00794         movfw DATA_L
02A4   229A           00795         call WR_USART
02A5   0821           00796         movfw DATA_H
02A6   229A           00797         call WR_USART   
02A7   0BB6           00798         decfsz TEMP1,F
02A8   2AA2           00799         goto ODESLI_DATA
02A9   0008           00800         return
                      00801 ;**********************************************************
02AA                  00802 ODESLI_MODEL_NUMBER     ; Podprogram IDENTIFY_DEVICE nam do bufferu 1 hodil jmeno disku
                      00803                         ; mi jej ted odesleme USARTem, aby mohl byt zobrazen na displeji
                      00804         INDF_BANK_3     ; BUFFER_1 je v bance 3
02AA   1783               M                         bsf STATUS,IRP    
02AB   3090           00805         movlw 0x90      ; na adrese 90
02AC   0084           00806         movwf FSR
02AD   3014           00807         movlw .20       ; budeme odesilat 20 slov (40 znaku)
02AE   00B6           00808         movwf TEMP1
02AF                  00809 ODESLI_MODEL_NUMBER_ODESILANI
02AF   0800           00810         movfw INDF
02B0   00B7           00811         movwf TEMP2     ; data do bufferu byla vkladana stylem DATA_L, DATA_H, DATA_L, DATA_H...
02B1   0A84           00812         incf FSR,F      ; ASCII hodnoty jsou ale razeny stylem DATA_H, DATA_L, DATA_H, DATA_L...
02B2   0800           00813         movfw INDF      ; proto to pisu tak slozite...
02B3   0A84           00814         incf FSR,F
                      00815         
02B4   229A           00816         call WR_USART
02B5   0837           00817         movfw TEMP2
02B6   229A           00818         call WR_USART   
                      00819 
02B7   0BB6           00820         decfsz TEMP1,F
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02B8   2AAF           00821         goto ODESLI_MODEL_NUMBER_ODESILANI
                      00822 
                      00823         INDF_BANK_0     
02B9   1383               M                         bcf STATUS,IRP    
02BA   0008           00824         return
                      00825 ;**********************************************************
02BB                  00826 ODESLI_BUFF2_HIGH
                      00827         ; odesle z horni poloviny bufferu2 tolik bytu, kolik je v TEMP1
                      00828         INDF_BANK_2     ; BUFFER_2 je v bance 2
02BB   1783               M                         bsf STATUS,IRP    
02BC   3030           00829         movlw 0x30      ; horni pulka od adresy 30h
02BD   0084           00830         movwf FSR
02BE                  00831 ODESLI_BUFF2_HIGH_ODESILANI
02BE   0800           00832         movfw INDF
02BF   229A           00833         call WR_USART
02C0   0A84           00834         incf FSR,F      
02C1   0BB6           00835         decfsz TEMP1,F
02C2   2ABE           00836         goto ODESLI_BUFF2_HIGH_ODESILANI
                      00837 
                      00838         INDF_BANK_0             
02C3   1383               M                         bcf STATUS,IRP    
02C4   0008           00839         return
                      00840 ;**************************************************************************
02C5                  00841 ODESLI_BUFFER2
                      00842         ; v TEMP1 ocakava hodnotu kolik bytu ma odeslat
                      00843         INDF_BANK_2     ; BUFFER_2 je v bance 2
02C5   1783               M                         bsf STATUS,IRP    
02C6   3010           00844         movlw 0x10      ; na adrese 10
02C7   0084           00845         movwf FSR
02C8                  00846 ODESLI_BUFFER2_ODESILANI
02C8   0800           00847         movfw INDF
02C9   229A           00848         call WR_USART
02CA   0A84           00849         incf FSR,F      
02CB   0BB6           00850         decfsz TEMP1,F
02CC   2AC8           00851         goto ODESLI_BUFFER2_ODESILANI
                      00852 
                      00853         INDF_BANK_0             
02CD   1383               M                         bcf STATUS,IRP    
02CE   0008           00854         return
                      00855 ;**********************************************************
02CF                  00856 INTERRUPT                                       ; sem se skace po zavolani preruseni (uz jsou vyreseny u
                            lohy dulezitych registru)
02CF   1A8C           00857         btfsc PIR1,RCIF                 ; testujeme o jake preruseni jde
02D0   2AE2           00858         goto INTERRUPT_USART    ; Pokud jde o preruseni od USARTU, skocime...
02D1   180C           00859         btfsc PIR1,TMR1IF               ; testujeme o jake preruseni jde
02D2   2AD4           00860         goto INTERRUPT_TIMER1   ; Pokud jde o preruseni od TIMER1, skocime...
02D3   2AEE           00861         goto END_OF_INTERRUPT   ; Pokud jde o jine preruseni, koncime
                      00862 
02D4                  00863 INTERRUPT_TIMER1
02D4   100C           00864         bcf PIR1,TMR1IF
02D5   30DF           00865         movlw h'df'
02D6   008E           00866         movwf TMR1L
02D7   300B           00867         movlw h'0b'
02D8   008F           00868         movwf TMR1H
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00869 
                      00870 ;       movfw CITAC_NECINNOSTI1
                      00871 ;       iorwf CITAC_NECINNOSTI2,w
                      00872 ;       btfsc STATUS,Z
                      00873 ;       call WR_USART
                      00874 
02D9   0855           00875         movfw CITAC_NECINNOSTI1
02DA   0456           00876         iorwf CITAC_NECINNOSTI2,w
02DB   1903           00877         btfsc STATUS,Z
02DC   2AEE           00878         goto END_OF_INTERRUPT   ; pokud je CITAC_NECINNOSTI = 0, nic se nedekrementuje
                      00879         
02DD   3001           00880         movlw .1
02DE   02D5           00881         subwf CITAC_NECINNOSTI1,f
02DF   1C03           00882         btfss STATUS,C
02E0   02D6           00883         subwf CITAC_NECINNOSTI2,f
                      00884 
02E1   2AEE           00885         goto END_OF_INTERRUPT
                      00886 
02E2                  00887 INTERRUPT_USART
02E2   081A           00888         movfw RCREG                             ; !!! vynulovat pøíznak !!!     
02E3   00F4           00889         movwf PRIJATE_DATO
                      00890 
                      00891 ;       movlw '['
                      00892 ;       call WR_USART
                      00893 ;       movfw PRIJATE_DATO
                      00894 ;       call WR_USART
                      00895 ;       movlw ']'
                      00896 ;       call WR_USART
                      00897 
02E4   0873           00898         movfw PRIJATYCH_DAT
02E5   3C07           00899         sublw .7                                ; pokud je v zasobniku uz plno (PRIJATYCH_DAT=8), tak ko
                            ncime
02E6   1C03           00900         btfss STATUS,C
02E7   2AEE           00901         goto END_OF_INTERRUPT   ; Zasobnik je plny, nic prijimat nebudeme
                      00902 
02E8   0873           00903         movfw PRIJATYCH_DAT
02E9   3E78           00904         addlw 0x78                              ; zacatek zasobniku prikazu
02EA   0084           00905         movwf FSR
02EB   0874           00906         movfw PRIJATE_DATO              ; prijmuta data -> do W
02EC   0080           00907         movwf INDF                              ; prijate dato na prvni volne misto v zasobniku
                      00908         
02ED   0AF3           00909         incf  PRIJATYCH_DAT,F   ; pricteme k indikaci zasobniku
                      00910 
02EE                  00911 END_OF_INTERRUPT                        ; sem skocime kdyz mame vsechny veci kolem preruseni vyrizeny
02EE   0876           00912         movfw TEMP_PCLATH
02EF   008A           00913         movwf PCLATH
02F0   0872           00914         movfw TEMP_FSR
02F1   0084           00915         movwf FSR
02F2   0871           00916         movfw TEMP_STATUS
02F3   0083           00917         movwf STATUS
02F4   0870           00918         movfw TEMP_WORKING
02F5   0009           00919         retfie
                      00920 ;**********************************************************
02F6                  00921 DELAY_2ms
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00922 ; (Fosc = 20 MHz , instr. cyklus= 200 ns) 2 000us / 0.2  us = 10 000 instrukcnich cyklu
                      00923 ;Variables: TMP1, TMP0
                      00924 ;Delay 10001 cycles
02F6   3010           00925         MOVLW 0x10  ;16 DEC
02F7   00B6           00926         MOVWF TMP1
02F8   30CF           00927         MOVLW 0x0CF  ;207 DEC
02F9   00B8           00928         MOVWF TMP0
02FA   0BB8           00929         DECFSZ TMP0,F
02FB   2AFA           00930         GOTO $-1
02FC   0BB6           00931         DECFSZ TMP1,F
02FD   2AF8           00932         GOTO $-5
                      00933 ;End of Delay
02FE   0008           00934         return
                      00935 ;**********************************************************
02FF                  00936 DELAY_200ms
                      00937 ; (Fosc = 20 MHz , instr. cyklus= 200 ns) 200 000us / 0.2  us = 1 000 000 instrukcnich cyklu
                      00938 ;Variables: TMP2, TMP1, TMP0
                      00939 ;Delay 1000000 cycles
02FF   3015           00940         MOVLW 0x15  ;21 DEC
0300   00B7           00941         MOVWF TMP2
0301   3059           00942         MOVLW 0x59  ;89 DEC
0302   00B6           00943         MOVWF TMP1
0303   30B1           00944         MOVLW 0x0B1  ;177 DEC
0304   00B8           00945         MOVWF TMP0
0305   0BB8           00946         DECFSZ TMP0,F
0306   2B05           00947         GOTO $-1
0307   0BB6           00948         DECFSZ TMP1,F
0308   2B03           00949         GOTO $-5
0309   0BB7           00950         DECFSZ TMP2,F
030A   2B01           00951         GOTO $-9
                      00952 ;End of Delay
030B   0008           00953         return
                      00954 ;**********************************************************
                      00076         include "ata.asm"               ; podprogramy na ovladani ATA disku
                      00001 ;**********************************************************
                      00002 ;**********************************************************
                      00003 ;**********************************************************
                      00004 ; OBSLUZNE PODPROGRAMY PRO ATA
                      00005 ;**********************************************************
                      00006 ;**********************************************************
                      00007 ;**********************************************************
                      00008 
                      00009 ;**********************************************************
                      00010 ; cteni a zapis ATA registru 
                      00011 ;**********************************************************
030C                  00012 RD_STATUS   
030C   3027           00013         movlw D_STATUS      ; Status 
030D   138B           00014         bcf INTCON,GIE      
030E   235F           00015         call RUTR 
030F   178B           00016         bsf INTCON,GIE
0310   00AC           00017         movwf ATA_STATUS
0311   0008           00018         return
                      00019 ;*****************************************
                      00020 ;RD_ERROR
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00021 ;       movlw D_ERROR      ; Error
                      00022 ;       call RUTR
                      00023 ;       movwf ATA_ERROR
                      00024 ;       return
                      00025 ;*****************************************
                      00026 ;RD_STATUS_A     
                      00027 ;       movlw D_STATUS_A    ; Alternate Status 
                      00028 ;       call RUTR 
                      00029 ;       movwf ATA_STATUS_A
                      00030 ;       return
                      00031 ;*****************************************
                      00032 ;RD_SC
                      00033 ;       movlw D_SECTOR_C    ; Sector Count
                      00034 ;       call RUTR
                      00035 ;       movwf SECTOR_C
                      00036 ;       return
                      00037 ;*****************************************
                      00038 ;RD_LBA1
                      00039 ;       movlw D_LBA1    ; Sector Number 
                      00040 ;       call RUTR                
                      00041 ;       movwf LBA1 
                      00042 ;       return
                      00043 ;*****************************************
                      00044 ;RD_LBA2
                      00045 ;       movlw D_LBA2  ; Cylinder Low
                      00046 ;       call RUTR
                      00047 ;       movwf LBA2
                      00048 ;       return
                      00049 ;*****************************************
                      00050 ;RD_LBA3
                      00051 ;       movlw D_LBA3  ; Cylinder High   
                      00052 ;       call RUTR
                      00053 ;       movwf LBA3
                      00054 ;       return
                      00055 ;*****************************************
0312                  00056 RD_DEVICE
0312   3026           00057         movlw D_DEVICE  ; Device Head
0313   138B           00058         bcf INTCON,GIE
0314   235F           00059         call RUTR 
0315   178B           00060         bsf INTCON,GIE
0316   00AB           00061         movwf DEVICE
0317   0008           00062         return
                      00063 ;*****************************************
                      00064 ;*****************************************
0318                  00065 WR_DC
0318   0823           00066         movf DEVICE_C,w     ; Device Control
0319   00B5           00067         movwf TEMPW
031A   301E           00068         movlw D_DEVICE_C
031B   138B           00069         bcf INTCON,GIE
031C   236C           00070         call RUTW
031D   178B           00071         bsf INTCON,GIE
031E   0008           00072         return
                      00073 ;*****************************************
031F                  00074 WR_COMMAND          
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

031F   082D           00075         movf COMMAND,w      ; Command       
0320   00B5           00076         movwf TEMPW
0321   3027           00077         movlw D_COMMAND
0322   138B           00078         bcf INTCON,GIE
0323   236C           00079         call RUTW
0324   178B           00080         bsf INTCON,GIE
0325   0008           00081         return
                      00082 ;*****************************************
0326                  00083 WR_SC                    
0326   0826           00084     movf SECTOR_C,w     ; Sector Count
0327   00B5           00085         movwf TEMPW
0328   3022           00086         movlw D_SECTOR_C     
0329   138B           00087         bcf INTCON,GIE
032A   236C           00088         call RUTW
032B   178B           00089         bsf INTCON,GIE
032C   0008           00090         return
                      00091 ;*****************************************
032D                  00092 WR_LBA1
032D   0827           00093         movf LBA1,w     
032E   00B5           00094         movwf TEMPW
032F   3023           00095         movlw D_LBA1    
0330   138B           00096         bcf INTCON,GIE
0331   236C           00097         call RUTW
0332   178B           00098         bsf INTCON,GIE
0333   0008           00099         return
                      00100 ;*****************************************
0334                  00101 WR_LBA2
0334   0828           00102         movf LBA2,w   ; Cylinder Low
0335   00B5           00103         movwf TEMPW
0336   3024           00104         movlw D_LBA2
0337   138B           00105         bcf INTCON,GIE
0338   236C           00106         call RUTW
0339   178B           00107         bsf INTCON,GIE
033A   0008           00108         return
                      00109 ;*****************************************
033B                  00110 WR_LBA3
033B   0829           00111         movf LBA3,w   ; Cylinder High
033C   00B5           00112         movwf TEMPW
033D   3025           00113         movlw D_LBA3
033E   138B           00114         bcf INTCON,GIE
033F   236C           00115         call RUTW
0340   178B           00116         bsf INTCON,GIE
0341   0008           00117         return
                      00118 ;*****************************************
0342                  00119 WR_DEVICE
0342   082B           00120         movf DEVICE,w     ; Device Head 
0343   00B5           00121         movwf TEMPW
0344   3026           00122         movlw D_DEVICE
0345   138B           00123         bcf INTCON,GIE
0346   236C           00124         call RUTW
0347   178B           00125         bsf INTCON,GIE
0348   0008           00126         return
                      00127 ;*****************************************
0349                  00128 WR_FEATURES
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0349   0824           00129         movf FEATURES,w     ; Features
034A   00B5           00130         movwf TEMPW
034B   3021           00131         movlw D_FEATURES
034C   138B           00132         bcf INTCON,GIE
034D   236C           00133         call RUTW
034E   178B           00134         bsf INTCON,GIE
034F   0008           00135         return
                      00136 ;*****************************************
                      00137 ; zapise vsechny registry potrebne k vykonani prikazu (adresove registry a prikaz)
0350                  00138 WR_BLOCK
                      00139 ;       call WAIT_FOR_READY_FOR_COMMAND
0350   230C           00140         call RD_STATUS
0351   182C           00141         btfsc ATA_STATUS,ERR
0352   2B57           00142         goto $+5                                        ; Nastal error disku. Co budeme delat? S*r*m* na
                             to a jdeme dal
0353   1BAC           00143         btfsc ATA_STATUS,BSY
0354   2B50           00144         goto $-4                                        ; Bsy <> 0, cekame dal 
0355   1F2C           00145         btfss ATA_STATUS,DRDY
0356   2B50           00146         goto $-6
                      00147 
0357   2349           00148         call WR_FEATURES
0358   2326           00149         call WR_SC
0359   232D           00150         call WR_LBA1
035A   2334           00151         call WR_LBA2
035B   233B           00152         call WR_LBA3
035C   2342           00153         call WR_DEVICE
035D   231F           00154         call WR_COMMAND
035E   0008           00155         return
                      00156 ;*****************************************
                      00157 ; ve workingu mame adresu registru ktery mame precist, 
                      00158 ; pak v nem vracime jeho hodnotu...
035F                  00159 RUTR          
035F   0085           00160         movwf ATA_ADDRESS                  ; adresa pozadovaneho registru
                      00161 
                      00162         BANK_1
0360   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
0361   1683               M                 bsf     STATUS,RP0    
0362   30FF           00163     movlw 0xFF
0363   0086           00164     movwf DATA_PORT_LOW_TRIS   ; z datove zbernice cteme
0364   0088           00165     movwf DATA_PORT_HIGH_TRIS
                      00166         BANK_0
0365   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0366   1283               M                 bcf     STATUS,RP0    
                      00167 
0367   1109           00168         bcf ATA_DIOR_N
0368   0000           00169     nop                                                 ; PIO delay min. 120ns (PIO 4)  
0369   0806           00170     movfw DATA_PORT_LOW                 ; Read DD0..D7 IDE
036A   1509           00171         bsf ATA_DIOR_N
                      00172 
036B   0008           00173     return
                      00174 ;**********************************************************
                      00175 ; ve workingu mame adresu registru ktery mame zapsat,
                      00176 ; a v reg. TEMPW hodnotu kterou mame do tohoto registru zapsat
036C                  00177 RUTW
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

036C   0085           00178         movwf ATA_ADDRESS
                      00179 
                      00180         BANK_1
036D   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
036E   1683               M                 bsf     STATUS,RP0    
036F   3000           00181     movlw 0x0
0370   0086           00182     movwf DATA_PORT_LOW_TRIS   ; do datove sbernice zapisujeme
0371   0088           00183     movwf DATA_PORT_HIGH_TRIS
                      00184         BANK_0
0372   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0373   1283               M                 bcf     STATUS,RP0    
                      00185 
0374   0835           00186     movf TEMPW,w        
0375   0086           00187     movwf DATA_PORT_LOW                 ; Write DD0..DD7 IDE 
0376   0188           00188         clrf DATA_PORT_HIGH
                      00189 
0377   1089           00190         bcf ATA_DIOW_N
0378   0000           00191         nop
0379   1489           00192         bsf ATA_DIOW_N
                      00193           
                      00194         BANK_1
037A   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
037B   1683               M                 bsf     STATUS,RP0    
037C   30FF           00195     movlw 0xff
037D   0086           00196     movwf DATA_PORT_LOW_TRIS   ; datova sbernice na cteni
037E   0088           00197     movwf DATA_PORT_HIGH_TRIS
                      00198         BANK_0
037F   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0380   1283               M                 bcf     STATUS,RP0    
                      00199 
0381   0008           00200         return
                      00201 ;**********************************************************
0382                  00202 READ_DATA
                      00203 ;       call WAIT_FOR_DATA      ; tento odskok do dalsich podprogramu si nemohu, dovolit, protoze mam je
                            n 8urovnovy STACK
                      00204         ; Wait: ( Bsy=0 AND Drq=1 ) OR err=1
                      00205         ; 7   6    5  4   3   2    1   0
                      00206         ; BSY DRDY DF DSC DRQ CORR IDX ERR
                      00207         ; (cekame az disk bude mit pro nas prichystana data)
0382   3027           00208         movlw D_STATUS      ; Status 
0383   138B           00209         bcf INTCON,GIE
0384   235F           00210         call RUTR 
0385   178B           00211         bsf INTCON,GIE
0386   00AC           00212         movwf ATA_STATUS
0387   182C           00213         btfsc ATA_STATUS,ERR
0388   2B8D           00214         goto READ_DATA_CTEME            ; Nastal error disku. Co budeme delat? S*r*m* na to a data prect
                            eme...
                      00215 
0389   1BAC           00216         btfsc ATA_STATUS,BSY
038A   2B82           00217         goto READ_DATA                          ; Bsy <> 0, cekame dal 
                      00218         
038B   1DAC           00219         btfss ATA_STATUS,DRQ
038C   2B82           00220         goto READ_DATA                          ; Drq <> 1, cekame dal 
                      00221         
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

038D                  00222 READ_DATA_CTEME
038D   0857           00223         movfw KONST_NECINNOSTI1
038E   00D5           00224         movwf CITAC_NECINNOSTI1
038F   0858           00225         movfw KONST_NECINNOSTI2
0390   00D6           00226         movwf CITAC_NECINNOSTI2         ; disk je vypinan po urcite dobe necinosti
0391   12AE           00227         bcf ATA_ATTRIBUTES,STANDBY
                      00228 
0392   3020           00229     movlw D_DATA_R
0393   0085           00230         movwf ATA_ADDRESS
                      00231 
                      00232         BANK_1
0394   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
0395   1683               M                 bsf     STATUS,RP0    
0396   30FF           00233     movlw 0xFF
0397   0086           00234     movwf DATA_PORT_LOW_TRIS   ; z datove zbernice cteme
0398   0088           00235     movwf DATA_PORT_HIGH_TRIS
                      00236         BANK_0
0399   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
039A   1283               M                 bcf     STATUS,RP0    
                      00237 
039B   1109           00238         bcf ATA_DIOR_N
039C   0000           00239     nop                                                 ; PIO delay min. 120ns (PIO 4)  
039D   0000           00240         nop
039E   0806           00241     movfw DATA_PORT_LOW                 ; Read DD0..D7 IDE
039F   00A0           00242         movwf DATA_L
03A0   0808           00243     movfw DATA_PORT_HIGH                ; Read DD8..D15 IDE
03A1   00A1           00244         movwf DATA_H
03A2   1509           00245         bsf ATA_DIOR_N
                      00246 
03A3   0008           00247     return
                      00248 ;**********************************************************
                      00249 ; stava se, ze obcas nas zajima jen cast vracenych dat, tak ty ktere nas nezajimaji, preskocime
                      00250 ; ocakava parametr v registru TEMP1 (kolik slov ma preskocit)
                      00251 ; pokud TEMP1 = 0 tak preskoci 256 slov
03A4                  00252 PRESKOC
03A4   2382           00253         call READ_DATA
03A5   0BB6           00254         decfsz TEMP1,F
03A6   2BA4           00255         goto PRESKOC
03A7   0008           00256         return
                      00257 ;**********************************************************
                      00258 ; rekne disku na ze pristi instrukce, registry, data.... budou pro mastera
03A8                  00259 SELECT_DEVICE
03A8   30E0           00260         movlw b'11100000'       ; adresy budou v LBA, budeme pracovat s masterem
03A9   00AB           00261         movwf DEVICE
03AA   2342           00262         call WR_DEVICE
03AB   0008           00263         return
                      00264 ;**********************************************************
03AC                  00265 ZAPIS_DO_BUFFERU_1      ; buffer1 ma 64B a je v bance 3 na adrese 0x190 - 0x1CF
                      00266                                         ; jako parametr dostanem TEMP1, kde je pocet bytu k zapisu
                      00267                                         ; maximalni hodnota v TEMP1 muze byt 32 (1 slovo = 2 byty)
                      00268         INDF_BANK_3             ; neprime adresovani na banku 3
03AC   1783               M                         bsf STATUS,IRP    
03AD   3090           00269         movlw 0x90              ; adresa ja 190, devaty byt urcuje banku (0,1 / 2,3) fsr je tedy 90
03AE   0084           00270         movwf FSR               
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03AF                  00271 ZAPIS_DO_BUFFERU_1__ZAPIS
03AF   2382           00272         call READ_DATA
                      00273         
03B0   0820           00274         movfw DATA_L
03B1   0080           00275         movwf INDF
03B2   0A84           00276         incf FSR,F
03B3   0821           00277         movfw DATA_H
03B4   0080           00278         movwf INDF
03B5   0A84           00279         incf FSR,F
                      00280 
03B6   0BB6           00281         decfsz TEMP1,F
03B7   2BAF           00282         goto ZAPIS_DO_BUFFERU_1__ZAPIS
                      00283 
                      00284         INDF_BANK_0     
03B8   1383               M                         bcf STATUS,IRP    
03B9   0008           00285         return
                      00286 ;**********************************************************
03BA                  00287 CLEAR_BUFFER2           ; BUFFER2 je 64bytu dat v bance 2 na adrese 0x110 - 0x14F
                      00288                                         ; pouziva TEMP1
03BA   3040           00289         movlw .64
03BB   00B6           00290         movwf TEMP1
                      00291         INDF_BANK_2             ; neprime adresovani na banku 2
03BC   1783               M                         bsf STATUS,IRP    
03BD   3010           00292         movlw 0x10
03BE   0084           00293         movwf FSR
03BF   3000           00294         movlw .0
                      00295 
03C0                  00296 CLEAR_BEFFER2__CLEAR
03C0   0080           00297         movwf INDF
03C1   0A84           00298         incf FSR,F
03C2   0BB6           00299         decfsz TEMP1,F
03C3   2BC0           00300         goto CLEAR_BEFFER2__CLEAR
                      00301 
                      00302         INDF_BANK_0             ; neprime adresovani na banku 0
03C4   1383               M                         bcf STATUS,IRP    
03C5   0008           00303         return
                      00304 ;**********************************************************
03C6                  00305 ATA_RESET
                      00306         ; Resetuje disk zjisti, zda vubec nejaky disk je pripojen
03C6   01AE           00307         clrf ATA_ATTRIBUTES     ; registr obsahujici bity rikajici co disk umi
                      00308 
03C7   1009           00309         bcf ATA_RESET_N         ; resetujeme disk
03C8   247D           00310         call DELAY_25us         ; signal reset musi byt min. 25us
03C9   1409           00311         bsf ATA_RESET_N         ; koncime s resetem disku
                      00312 
03CA   2482           00313         call WAIT_FOR_READY     ; vynulujeme device bit v DEVICE registru (disk musi byt master!), ...
03CB   23A8           00314         call SELECT_DEVICE      ; ...nastavime bit L - LBA addressing
                      00315 
03CC   2482           00316         call WAIT_FOR_READY
03CD   3002           00317         movlw b'00000010'       ; zakazeme preruseni (ted mam na mysli signal INTRQ z disku)
03CE   00A3           00318         movwf DEVICE_C          ; bit nIEN = 1 -> zakazeme preruseni disku (stejne nemame signal INTRQ p
                            ripojen)
03CF   2318           00319         call WR_DC                      ; zapiseme hodnotu do registru DEVICE CONTROL
                      00320 
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03D0   30E0           00321         movlw b'11100000'       ; adresy budou v LBA, budeme pracovat s masterem
03D1   00AB           00322         movwf DEVICE
03D2   01A6           00323         clrf SECTOR_C
03D3   01A7           00324         clrf LBA1       
03D4   01A8           00325         clrf LBA2
03D5   01A9           00326         clrf LBA3
03D6   01A4           00327         clrf FEATURES
03D7   3000           00328         movlw h'00'                     ; code prikazu nop
03D8   00AD           00329         movwf COMMAND
03D9   2350           00330         call WR_BLOCK           ; ted provedeme prvni prikaz (nop) a podivame se co nam disk vrati
                      00331 
03DA   2482           00332         call WAIT_FOR_READY
03DB   2312           00333         call RD_DEVICE          ; Precteme reg. device. Pokud je disk OK, tak by nam mel vratit to, co j
                            sme do nej predtim zapsaly
03DC   082B           00334         movfw DEVICE
03DD   3CE0           00335         sublw b'11100000'
03DE   1903           00336         btfsc STATUS,Z          ; pokud DEVICE <> b'11100000', tak tu bud disk nemame, nebo je nejakej r
                            ozsypanej, nebo je spatne svicivanej (treba SLAVE)
03DF   142E           00337         bsf ATA_ATTRIBUTES,ATA_OK       ; 0. bit = 1 -> disk je pritomen, zapnuty a funkcni...
                      00338 
03E0   0008           00339         return          
                      00340 ;**********************************************************
03E1                  00341 READ_SECTOR
                      00342         ; Tento podprogram prevezme parametry SECTOR_C (kolik sec. mame precist)
                      00343         ; a LBA1 - LBA4, kde je ulozena LBA adresa sectoru od ktereho mame cist
                      00344         ; Postara se o spravne zadani adresy do disku (LBA28 / LBA48) a zavolani prikazu ke cteni...
                      00345         ; Samotne cteni se musi obslouzit v jine casti programu (podle toho co cteme...)
                      00346 
                      00347 ;       call WAIT_FOR_READY
                      00348         ; Cekame az Bsy bit = 0 
03E1   230C           00349         call RD_STATUS
03E2   182C           00350         btfsc ATA_STATUS,ERR
03E3   2BE6           00351         goto $+3                                        ; Nastal error disku. Co budeme delat? S*r*m* na
                             to a jdeme dal
03E4   1BAC           00352         btfsc ATA_STATUS,BSY
03E5   2BE1           00353         goto $-4                                        ; Bsy <> 0, cekame dal 
                      00354 
                      00355 
                      00356 ;       call SELECT_DEVICE
03E6   30E0           00357         movlw b'11100000'       ; adresy budou v LBA, budeme pracovat s masterem
03E7   00AB           00358         movwf DEVICE
03E8   2342           00359         call WR_DEVICE
                      00360 
                      00361 ;       call WAIT_FOR_READY_FOR_COMMAND
03E9   230C           00362         call RD_STATUS
03EA   182C           00363         btfsc ATA_STATUS,ERR
03EB   2BF0           00364         goto $+5                                        ; Nastal error disku. Co budeme delat? S*r*m* na
                             to a jdeme dal
03EC   1BAC           00365         btfsc ATA_STATUS,BSY
03ED   2BE9           00366         goto $-4                                        ; Bsy <> 0, cekame dal 
03EE   1F2C           00367         btfss ATA_STATUS,DRDY
03EF   2BE9           00368         goto $-6
                      00369 
03F0   192E           00370         btfsc ATA_ATTRIBUTES,LBA48_SUPPORT
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03F1   2C01           00371         goto READ_SECTOR_LBA48
                      00372 
03F2                  00373 READ_SECTOR_LBA27               ; zadavani adresy v LBA28 je celkem jednoduche, LBA bity 24-27 jsou obsa
                            zene v dolnich 4 bitech DEVICE reg.
03F2   01A4           00374         clrf FEATURES
03F3   2349           00375         call WR_FEATURES
03F4   2326           00376         call WR_SC
03F5   232D           00377         call WR_LBA1
03F6   2334           00378         call WR_LBA2
03F7   233B           00379         call WR_LBA3
03F8   082A           00380         movfw LBA4                      ; Z nejvyssi casti adresy...
03F9   390F           00381         andlw b'00001111'       ; ...pouzijeme pouze dolni 4bity...
03FA   38E0           00382         iorlw b'11100000'       ; ...horni 3bity nastavime (LBA adresovani, master)...
03FB   00AB           00383         movwf DEVICE            ; ...a zapiseme do DEVICE.
03FC   2342           00384         call WR_DEVICE
03FD   3020           00385         movlw 0x20                      ; Read sector. OPCODE - 20h (with retries) or 21h (without retri
                            es)
03FE   00AD           00386         movwf COMMAND           ; ...podle me to znamena ze prikaz 20h se bude pri neuspechu pokouset zn
                            ova o cteni....
03FF   231F           00387         call WR_COMMAND         ; ...protoze se v novejsich spicifacich jiz prikaz 21h nevyskytuje, pouz
                            ivam ke cteni 20h.
0400   0008           00388         return
                      00389 
0401                  00390 READ_SECTOR_LBA48
                      00391         ; !!! Pripominam ze to co zde pisu (o LBA48) vim ze specifikace ATA8, v praxi jsem LBA48 na zadn
                            em disku jeste nezkousel !!!
                      00392         ; Zadavani adresy pri LBA48 se o neco lisi nez LBA28. Do registru LBA 1,2,3 se data zadavaji 2x.
                             
                      00393         ; Prvi zadavani znamena horni cast adresy, druhe zadavani dolni cast adresy.
                      00394         ; Znova sem pisu ze v tomto programu vyuzijeme jen LBA o 32bitech (2TB) a ne celych LBA48
0401   3000           00395         movlw .0
0402   00B5           00396         movwf TEMPW
0403   3022           00397         movlw D_SECTOR_C    ; vyssi cast parametru SECTOR_C = 0
0404   236C           00398         call RUTW       
0405   2326           00399         call WR_SC                      ; nizci cast parametru SECTOR_C
                      00400 
0406   3000           00401         movlw .0
0407   00B5           00402         movwf TEMPW
0408   3025           00403         movlw D_LBA3            ; LBA bity 47:40
0409   236C           00404         call RUTW
040A   3000           00405         movlw .0
040B   00B5           00406         movwf TEMPW
040C   3024           00407         movlw D_LBA2            ; LBA bity 39:32
040D   236C           00408         call RUTW
040E   082A           00409         movfw LBA4
040F   00B5           00410         movwf TEMPW
0410   3023           00411         movlw D_LBA1            ; LBA bity 31:24
0411   236C           00412         call RUTW
                      00413 
0412   233B           00414         call WR_LBA3            ; LBA bity 23:16
0413   2334           00415         call WR_LBA2            ; LBA bity 15:8
0414   232D           00416         call WR_LBA1            ; LBA bity  7:0
0415   3024           00417         movlw h'24'                     ; pri LBA48 se musi pouzit tohoto prikazu ke cteni (READ SECTOR(
                            S) EXT - 24h, PIO data-in)
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0416   00AD           00418         movwf COMMAND
0417   231F           00419         call WR_COMMAND
0418   0008           00420         return
                      00421 ;**********************************************************
0419                  00422 ATA_STANDBY
0419   1AAE           00423         btfsc ATA_ATTRIBUTES,STANDBY
041A   0008           00424         return                                          ; pokud disk jiz je ve standby, nebudeme posilat
                             prikaz
                      00425                                                                 ; tento bit je nulovan pri cteni z disku
                      00426 
041B   01A4           00427         clrf FEATURES
041C   01A6           00428         clrf SECTOR_C
041D   01A7           00429         clrf LBA1
041E   01A8           00430         clrf LBA2
041F   01A9           00431         clrf LBA3
                      00432 
0420   3096           00433         movlw h'96'
0421   00AD           00434         movwf COMMAND
                      00435 
0422   230C           00436         call RD_STATUS
0423   182C           00437         btfsc ATA_STATUS,ERR
0424   2C29           00438         goto $+5                                        ; Nastal error disku. Co budeme delat? S*r*m* na
                             to a jdeme dal
0425   1BAC           00439         btfsc ATA_STATUS,BSY
0426   2C22           00440         goto $-4                                        ; Bsy <> 0, cekame dal 
0427   1F2C           00441         btfss ATA_STATUS,DRDY
0428   2C22           00442         goto $-6
                      00443 
0429   2349           00444         call WR_FEATURES
042A   2326           00445         call WR_SC
042B   232D           00446         call WR_LBA1
042C   2334           00447         call WR_LBA2
042D   233B           00448         call WR_LBA3
042E   2342           00449         call WR_DEVICE
042F   231F           00450         call WR_COMMAND
0430   16AE           00451         bsf ATA_ATTRIBUTES,STANDBY
0431   0008           00452         return
                      00453 ;**********************************************************
0432                  00454 IDENTIFY_DEVICE
                      00455         ; ted uz vime, ze mame pripojen nejaky disk, tento podprogram provede prikaz 
                      00456         ; identify device a zjisti co je disk zac. Nektere dulezite informace ulozi 
                      00457         ; (nastavi byty v ATA_ATTRIBUTES) a jmenovku disku hodi do bufferu
                      00458 
                      00459         ; rekneme disku, ze s nim chcem pracovat (s masterem)
0432   2482           00460         call WAIT_FOR_READY
0433   23A8           00461         call SELECT_DEVICE
                      00462         
                      00463         ; podivame se zda tu vubec disk je a co podporuje (LBA)
0434   2482           00464         call WAIT_FOR_READY     ; celame nez bude disk opet ready pro dalsi prikazy
                      00465 
0435   30E0           00466         movlw b'11100000'       ; adresy budou v LBA, budeme pracovat s masterem
0436   00AB           00467         movwf DEVICE
0437   01A6           00468         clrf SECTOR_C
0438   01A7           00469         clrf LBA1       
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0439   01A8           00470         clrf LBA2
043A   01A9           00471         clrf LBA3
043B   01A4           00472         clrf FEATURES
043C   30EC           00473         movlw 0xEC                      ; code prikazu IDENTIFY DEVICE
043D   00AD           00474         movwf COMMAND
043E   2350           00475         call WR_BLOCK
                      00476 
                      00477         ; pokud se neco nepodelalo, dostanem 256 16ti bitovych slov kde je napsano co disk umi a co je t
                            o zac...
                      00478         ; slova cisluji od nuly, (tzn. ze slov je 0-255)
043F   301B           00479         movlw .27               ; prvnich 27 slov je pro nas nepotrebnych
0440   00B6           00480         movwf TEMP1
0441   23A4           00481         call PRESKOC
                      00482         
                      00483         ; [27-46] model mumber (ASCI retezec s nazvem disku)
                      00484         ; tady precteme 20 slov a rovnou je odesleme do pric
                      00485                 ; pokud nekde od disku dostavame ASCII retezec jsou data nasledujici: 
                      00486                 ; pr. disk nam posila string Copyright
                      00487                 ;               1. DATA_H = 'C' 
                      00488                 ;               1. DATA_l = 'o'
                      00489                 ;               2. DATA_H = 'P' 
                      00490                 ;               2. DATA_l = 'y'
0442   3014           00491         movlw .20               ; dalsich 20 slov obsahuje 40 s ASCII znaku s nazvem disku
0443   00B6           00492         movwf TEMP1
0444   23AC           00493         call ZAPIS_DO_BUFFERU_1
                      00494                 
                      00495         ; ted jsme uz precetli 47 slov z 256 :-)
0445   3002           00496         movlw .2                ; dalsi 2 slova jsou nam k nicemu
0446   00B6           00497         movwf TEMP1
0447   23A4           00498         call PRESKOC
                      00499                 
0448   2382           00500         call READ_DATA  ; slovo 49 - capabilities (schopnosti)
                      00501                         ; 15:14 Reserved for the IDENTIFY PACKET DEVICE command.
                      00502                         ;    13 1 = Standby timer values as specified in this standard are supported
                      00503                         ;       0 = Standby timer values shall be managed by the device
                      00504                         ;    12 Reserved for the IDENTIFY PACKET DEVICE command.
                      00505                         ;    11 1 = IORDY supported
                      00506                         ;       0 = IORDY may be supported
                      00507                         ;    10 1 = IORDY may be disabled
                      00508                         ;     9 1 = LBA supported
                      00509                         ;     8 1 = DMA supported.
                      00510                         ;   7:0 Retired 
0449   18A1           00511         btfsc DATA_H,1  ;bit 9 = 1 -> LBA supported
044A   14AE           00512         bsf ATA_ATTRIBUTES,LBA_SUPPORT
                      00513 
                      00514         ;precetli jsme 50 slov
044B   300A           00515         movlw .10
044C   00B6           00516         movwf TEMP1
044D   23A4           00517         call PRESKOC
                      00518         
044E   2382           00519         call READ_DATA  ; 60
044F   0820           00520         movfw DATA_L
                      00521 ;       movwf PARAM_MAX_LBA1            ; nejnizsi cast adresy
0450   0821           00522         movfw DATA_H
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00523 ;       movwf PARAM_MAX_LBA2    
                      00524         
0451   2382           00525         call READ_DATA  ; 61
0452   0820           00526         movfw DATA_L
                      00527 ;       movwf PARAM_MAX_LBA3
0453   0821           00528         movfw DATA_H
                      00529 ;       movwf PARAM_MAX_LBA4            ; nejvyssi cast adresy
                      00530         
                      00531         ;precetli jsme 62 slov, zbyva 194
0454   3015           00532         movlw .21
0455   00B6           00533         movwf TEMP1
0456   23A4           00534         call PRESKOC
                      00535 
                      00536         ; 83 slov, na rade je slovo 83 (pripominam ze slova jsou cislovana od nuly)
0457   2382           00537         call READ_DATA  ; 83 - command supported. Tady nas zajima bit 10 - 1 = 48-bit Address feature se
                            t supported
0458   1921           00538         btfsc DATA_H,2  ; pokud disk umi LBA 48 pripiseme tuto skutecnost do ATA_ATTRIBUTES
0459   152E           00539         bsf ATA_ATTRIBUTES,LBA48_SUPPORT
                      00540 
                      00541         ;precetli jsme 84 slov
045A   3010           00542         movlw .16
045B   00B6           00543         movwf TEMP1
045C   23A4           00544         call PRESKOC
                      00545                 
045D   1D2E           00546         btfss ATA_ATTRIBUTES,LBA48_SUPPORT
045E   2C66           00547         goto INIT_ATA__NOT_SUPPORT_LBA48
                      00548                         ; pokud je podporovano LBA 48, nachazi se ve slovech [100-103] skutecny pocet se
                            ktoru 
                      00549                         ; do slov 60-61 by se sice vesel pocet sektoru u disku do 2TB, podle standardu s
                            e tam ale zapisuje pouze hodnota max pro LBA 28 (cca 120 GB)
                      00550                         ; mi precteme ale jen nejnizsi 2 slova, predpokladam totiz ze disk neni vetsi ja
                            k 2TB
045F   2382           00551                         call READ_DATA  ; 100
0460   0820           00552                         movfw DATA_L
                      00553 ;                       movwf PARAM_MAX_LBA1            ; nejnizsi cast adresy
0461   0821           00554                         movfw DATA_H
                      00555 ;                       movwf PARAM_MAX_LBA2    
                      00556 
0462   2382           00557                         call READ_DATA  ; 101
0463   0820           00558                         movfw DATA_L
                      00559 ;                       movwf PARAM_MAX_LBA3
0464   0821           00560                         movfw DATA_H
                      00561 ;                       movwf PARAM_MAX_LBA4            ; nejvyssi cast adresy                  
0465   2C69           00562                 goto INIT_ATA__DALSI
0466                  00563 INIT_ATA__NOT_SUPPORT_LBA48
0466   3002           00564         movlw .2        ; 100, 101
0467   00B6           00565         movwf TEMP1
0468   23A4           00566         call PRESKOC    
0469                  00567 INIT_ATA__DALSI
                      00568         ; precetli jsme 102 slov
0469   3004           00569         movlw .4        ; 102, 103, 104, 105
046A   00B6           00570         movwf TEMP1
046B   23A4           00571         call PRESKOC
                      00572 
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

046C   2382           00573         call READ_DATA  ; slovo 106 - pokud bit 15=0 a bit 14=1, tak obsahuje pravdive informace
                      00574                                                 ; pro nas je podstatne, ze pokud je bit 12 = 1, tak sekt
                            or je vetsi nez 256 slov
                      00575                                                 ; pokud je sektor vetsi nez 256 slov, je jeho velikost v
                            e slovech [117-118]
046D   1BA1           00576         btfsc DATA_H,7
046E   2C73           00577         goto INIT_ATA__DALSI2
046F   1F21           00578         btfss DATA_H,6
0470   2C73           00579         goto INIT_ATA__DALSI2
0471   1A21           00580         btfsc DATA_H,4
0472   15AE           00581         bsf ATA_ATTRIBUTES,BIG_SECTOR
0473                  00582 INIT_ATA__DALSI2
                      00583         ; precteno 107, zbyva 149
0473   3095           00584         movlw .149      ; 107 - 256
0474   00B6           00585         movwf TEMP1
0475   23A4           00586         call PRESKOC
                      00587                 
                      00588         ; ted vime co mame za disk, tak se na to jdem podivat...
                      00589         ; pokud disk splnuje vsechny nase pozadavky, tak nastavime 7 bit v ATA_ATTRIBUTES
0476   13AE           00590         bcf ATA_ATTRIBUTES,APPLICABLE   
0477   1CAE           00591         btfss ATA_ATTRIBUTES,LBA_SUPPORT
0478   0008           00592         return
                      00593         ; pokud jsme tady, disk podporuje LBA (dneska se jich uz moc nevidi, co by LBA neumeli)
0479   19AE           00594         btfsc ATA_ATTRIBUTES,BIG_SECTOR
047A   0008           00595         return
                      00596         ; mazec, disk ma velikost sektoru 256 slov, vetsi naroky na disk nemam :-)
047B   17AE           00597         bsf ATA_ATTRIBUTES,APPLICABLE ; disk umi to co potrebujeme...   
                      00598 
047C   0008           00599         return
                      00600 ;**************************************************************************
                      00601 ;**********************************************************
                      00602 ; CEKACI PROCEDURY
                      00603 ;**********************************************************
047D                  00604 DELAY_25us
                      00605         ; pouziva TEMP1
                      00606         ; (Fosc = 20 MHz , instr. cyklus= 0.20 us) 25us / 0.20 us = 125 instrukcnich cyklu
                      00607         ; (Fosc = 16 MHz , instr. cyklus= 0.25 us) 25us / 0.25 us = 100 instrukcnich cyklu
                      00608         ; (Fosc = 04 MHz , instr. cyklus= 1.00 us) 25us / 1.00 us =  25 instrukcnich cyklu      
047D   302A           00609         MOVLW 0x2A              ;42 DEC -> Delay 127 cycles
                      00610         ;MOVLW 0x21             ;33 DEC -> Delay 100 cycles
                      00611         ;MOVLW 0x08             ;25 DEC -> Delay  25 cycles
047E   00B6           00612         MOVWF TEMP1
047F   0BB6           00613         DECFSZ TEMP1,F
0480   2C7F           00614         GOTO $-1
                      00615         ;End of Delay
0481   0008           00616         return
                      00617 ;**************************************************************************
0482                  00618 WAIT_FOR_READY
                      00619         ; Cekame az Bsy bit = 0 
                      00620         ; (cekame az disk nebude zaneprazdnen)
0482   230C           00621         call RD_STATUS
0483   082C           00622         movfw ATA_STATUS
0484   3980           00623         andlw b'10000000'
0485   1903           00624         btfsc STATUS,Z
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0486   0008           00625         return
0487   2C82           00626         goto WAIT_FOR_READY
                      00627 ;**************************************************************************
                      00628 ;WAIT_FOR_READY_FOR_COMMAND
                      00629 ;       call WAIT_FOR_READY
                      00630 ;       btfss ATA_STATUS,DRDY
                      00631 ;       goto WAIT_FOR_READY_FOR_COMMAND
                      00632 ;       return
                      00633 ;**************************************************************************
                      00077         include "fat32.asm"     ; podprogramy na nacteni a praci s FAT32
                      00001 ;**********************************************************
                      00002 ;**********************************************************
                      00003 ;**********************************************************
                      00004 ; OBSLUZNE PODPROGRAMY PRO FAT32
                      00005 ;**********************************************************
                      00006 ;**********************************************************
                      00007 ;**********************************************************
                      00008 
                      00009 ;**************************************************************************
0488                  00010 CLUSTER_TO_LBA
                      00011         ; vezme hodnoty v CLUSTER[1-4] a POZICE (sektor v clusteru) a do LBA 1-4 vypocita skutecnou pozi
                            ci na disku
                      00012         ; pro spravnou funkci musi byt POZICE < CLUSTER_SIZE (POZICE muze byt v rozsahu 0 .. CLUSTER_SIZ
                            E - 1)
                      00013         ; LBA := POCATEK_DAT + (CLUSTER * CLUSTER_SIZE) + POZICE
                      00014         INDF_BANK_1                             ; neprime adresovani do banku1
0488   1383               M                         bcf STATUS,IRP    
0489   30A0           00015         movlw 0xA0                                      ; OPERAND_X
048A   0084           00016         movwf FSR
048B   083C           00017         movfw CLUSTER1
048C   0080           00018         movwf INDF
048D   0A84           00019         incf FSR,F
048E   083D           00020         movfw CLUSTER2
048F   0080           00021         movwf INDF
0490   0A84           00022         incf FSR,F
0491   083E           00023         movfw CLUSTER3
0492   0080           00024         movwf INDF
0493   0A84           00025         incf FSR,F
0494   083F           00026         movfw CLUSTER4
0495   0080           00027         movwf INDF
0496   0A84           00028         incf FSR,F
                      00029 
                      00030         ; Nejdriv se koukneme zda-li CLUSTER se nerovna 0, to bychom pak vratily 
                      00031         ; pozici na prvnim clusteru root adresare...
0497   273E           00032         call NULA                                               ; if (X =  0) then PRETECENI := 0 else P
                            RETECENI := 1
                      00033         BANK_1
0498   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
0499   1683               M                 bsf     STATUS,RP0    
049A   182C           00034         btfsc PRETECENI,0
049B   2CAC           00035         goto CLUSTER_TO_LBA_NO_ROOT
                      00036         BANK_0
049C   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
049D   1283               M                 bcf     STATUS,RP0    
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

049E   30A0           00037         movlw 0xA0                                      ; OPERAND_X
049F   0084           00038         movwf FSR
04A0   0848           00039         movfw ROOT_DIR_CL1
04A1   0080           00040         movwf INDF
04A2   0A84           00041         incf FSR,F
04A3   0849           00042         movfw ROOT_DIR_CL2
04A4   0080           00043         movwf INDF
04A5   0A84           00044         incf FSR,F
04A6   084A           00045         movfw ROOT_DIR_CL3
04A7   0080           00046         movwf INDF
04A8   0A84           00047         incf FSR,F
04A9   084B           00048         movfw ROOT_DIR_CL4
04AA   0080           00049         movwf INDF
04AB   0A84           00050         incf FSR,F
                      00051                 
04AC                  00052 CLUSTER_TO_LBA_NO_ROOT
                      00053         BANK_0
04AC   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
04AD   1283               M                 bcf     STATUS,RP0    
                      00054         ; CLUSTER_SIZE je vzdy exponentem 2 (1,2,4,8,16,32,64,128), proto tento jednoduchy zapis
04AE   18CC           00055         btfsc CLUSTER_SIZE,1            ; 2
04AF   2697           00056         call POSUNDOLEVA_1                      ; X := X * 2
04B0   194C           00057         btfsc CLUSTER_SIZE,2            ; 4
04B1   269F           00058         call POSUNDOLEVA_2                      ; X := X * 4
04B2   19CC           00059         btfsc CLUSTER_SIZE,3            ; 8
04B3   26A8           00060         call POSUNDOLEVA_3                      ; X := X * 8
04B4   1A4C           00061         btfsc CLUSTER_SIZE,4            ; 16
04B5   26B2           00062         call POSUNDOLEVA_4                      ; X := X * 4
04B6   1ACC           00063         btfsc CLUSTER_SIZE,5            ; 32
04B7   26BD           00064         call POSUNDOLEVA_5                      ; X := X * 32
04B8   1B4C           00065         btfsc CLUSTER_SIZE,6            ; 64
04B9   26C9           00066         call POSUNDOLEVA_6                      ; X := X * 64
04BA   1BCC           00067         btfsc CLUSTER_SIZE,7            ; 128
04BB   26D6           00068         call POSUNDOLEVA_7                      ; X := X * 128
                      00069         
04BC   0840           00070         movfw POCATEK_DAT1
04BD   0080           00071         movwf INDF                                      ; OPERAND_Y
04BE   0A84           00072         incf FSR,F
04BF   0841           00073         movfw POCATEK_DAT2
04C0   0080           00074         movwf INDF
04C1   0A84           00075         incf FSR,F
04C2   0842           00076         movfw POCATEK_DAT3
04C3   0080           00077         movwf INDF
04C4   0A84           00078         incf FSR,F
04C5   0843           00079         movfw POCATEK_DAT4
04C6   0080           00080         movwf INDF
04C7   0A84           00081         incf FSR,F
                      00082 
04C8   2629           00083         call SOUCET                                     ; VYSLEDEK := POCATEK_DAT + (CLUSTER * CLUSTER_S
                            IZE)
                      00084 
                      00085         ; zbyva tedy k vysledku pricist POZICE a dat nasledny vysledek do LBA    
04C9   083B           00086         movfw POZICE
                      00087         BANK_1
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04CA   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
04CB   1683               M                 bsf     STATUS,RP0    
04CC   00A4           00088         movwf OPERAND_Y1
04CD   01A5           00089         clrf OPERAND_Y2
04CE   01A6           00090         clrf OPERAND_Y3
04CF   01A7           00091         clrf OPERAND_Y4
04D0   0828           00092         movfw VYSLEDEK1
04D1   00A0           00093         movwf OPERAND_X1
04D2   0829           00094         movfw VYSLEDEK2
04D3   00A1           00095         movwf OPERAND_X2
04D4   082A           00096         movfw VYSLEDEK3
04D5   00A2           00097         movwf OPERAND_X3
04D6   082B           00098         movfw VYSLEDEK4
04D7   00A3           00099         movwf OPERAND_X4        
                      00100         BANK_0
04D8   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
04D9   1283               M                 bcf     STATUS,RP0    
04DA   2629           00101         call SOUCET
                      00102 
                      00103         INDF_BANK_1                             ; neprime adresovani do banku1
04DB   1383               M                         bcf STATUS,IRP    
04DC   30A8           00104         movlw 0xA8                                      ; VYSLEDEK
04DD   0084           00105         movwf FSR
04DE   0800           00106         movfw INDF
04DF   00A7           00107         movwf LBA1
04E0   0A84           00108         incf FSR,F
04E1   0800           00109         movfw INDF
04E2   00A8           00110         movwf LBA2
04E3   0A84           00111         incf FSR,F
04E4   0800           00112         movfw INDF
04E5   00A9           00113         movwf LBA3
04E6   0A84           00114         incf FSR,F
04E7   0800           00115         movfw INDF
04E8   00AA           00116         movwf LBA4
04E9   0A84           00117         incf FSR,F
                      00118         
04EA   0008           00119         return
                      00120 ;**************************************************************************
04EB                  00121 NEXT_CLUSTER
                      00122         ; V CLUSTER prijme cislo clusteru, podiva se do FATky na disku a v CLUSTER vrati 
                      00123         ; hodnotu clustru, ktery nasleduje v retezu clusteru.
                      00124         ; Pokud pozadovany cluster byl posledni v retezu vrati v reg. POZICE konstantu FFh
                      00125         ; Pokud soucasny cluster je prazdny (coz by se stat nemelo) vrati taky v POZICE FFh
                      00126         ; Jinak, pokud s vse povede, dame do POZICE 0
                      00127 
                      00128         ; ! PODPROGRAM NETESTUJE ZDA NEBYLO ZADANO VETSI CISLO NEZ JE POCET CLUSTERU !!!
                      00129         
04EB   01BB           00130         clrf POZICE
                      00131         ; LBA := [(CLUSTER * 4) / 512 ] + POCATEK_FAT
                      00132         ; LBA := ( CLUSTER / 128 ) + POCATEK_FAT
                      00133         ; offset := CLUSTER mod 128 
                      00134         INDF_BANK_1                             ; neprime adresovani do banku1
04EC   1383               M                         bcf STATUS,IRP    
04ED   30A0           00135         movlw 0xA0                                      ; OPERAND_X
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04EE   0084           00136         movwf FSR
04EF   083C           00137         movfw CLUSTER1
04F0   0080           00138         movwf INDF
04F1   0A84           00139         incf FSR,F
04F2   083D           00140         movfw CLUSTER2
04F3   0080           00141         movwf INDF
04F4   0A84           00142         incf FSR,F
04F5   083E           00143         movfw CLUSTER3
04F6   0080           00144         movwf INDF
04F7   0A84           00145         incf FSR,F
04F8   083F           00146         movfw CLUSTER4
04F9   0080           00147         movwf INDF
                      00148 
                      00149         ; Nejdriv se koukneme zda-li CLUSTER se nerovna 0, to pak musime jako cluster brat prvni cluster
                             ROOT adr.
04FA   273E           00150         call NULA                                               ; if (X =  0) then PRETECENI := 0 else P
                            RETECENI := 1
                      00151         BANK_1
04FB   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
04FC   1683               M                 bsf     STATUS,RP0    
04FD   182C           00152         btfsc PRETECENI,0
04FE   2D0F           00153         goto NEXT_CLUSTER_NO_ROOT
                      00154         BANK_0
04FF   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0500   1283               M                 bcf     STATUS,RP0    
0501   30A0           00155         movlw 0xA0                                      ; OPERAND_X
0502   0084           00156         movwf FSR
0503   0848           00157         movfw ROOT_DIR_CL1
0504   0080           00158         movwf INDF
0505   0A84           00159         incf FSR,F
0506   0849           00160         movfw ROOT_DIR_CL2
0507   0080           00161         movwf INDF
0508   0A84           00162         incf FSR,F
0509   084A           00163         movfw ROOT_DIR_CL3
050A   0080           00164         movwf INDF
050B   0A84           00165         incf FSR,F
050C   084B           00166         movfw ROOT_DIR_CL4
050D   0080           00167         movwf INDF
050E   0A84           00168         incf FSR,F
                      00169                 
050F                  00170 NEXT_CLUSTER_NO_ROOT
                      00171         BANK_0
050F   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0510   1283               M                 bcf     STATUS,RP0    
                      00172         
0511   272F           00173         call POSUNDOPRAVA_7     ; X := X div 128  ; PRETECENI := X mod 128
0512   30AC           00174         movlw 0xAC                                      ; PRETECENI
0513   0084           00175         movwf FSR
0514   0800           00176         movfw INDF
0515   00B6           00177         movwf TEMP1
                      00178 
0516   30A4           00179         movlw 0xA4                                      ; OPERAND_Y
0517   0084           00180         movwf FSR
0518   0844           00181         movfw POCATEK_FAT1
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0519   0080           00182         movwf INDF
051A   0A84           00183         incf FSR,F
051B   0845           00184         movfw POCATEK_FAT2
051C   0080           00185         movwf INDF
051D   0A84           00186         incf FSR,F
051E   0846           00187         movfw POCATEK_FAT3
051F   0080           00188         movwf INDF
0520   0A84           00189         incf FSR,F
0521   0847           00190         movfw POCATEK_FAT4
0522   0080           00191         movwf INDF
0523   0A84           00192         incf FSR,F
                      00193 
0524   2629           00194         call SOUCET
                      00195         
0525   0800           00196         movfw INDF                                      ; FSR ukazuje na VYSLEDEK
0526   00A7           00197         movwf LBA1
0527   0A84           00198         incf FSR,F
0528   0800           00199         movfw INDF
0529   00A8           00200         movwf LBA2
052A   0A84           00201         incf FSR,F
052B   0800           00202         movfw INDF
052C   00A9           00203         movwf LBA3
052D   0A84           00204         incf FSR,F
052E   0800           00205         movfw INDF
052F   00AA           00206         movwf LBA4
0530   0A84           00207         incf FSR,F
                      00208         
0531   01A4           00209         clrf FEATURES
0532   3001           00210         movlw .1
0533   00A6           00211         movwf SECTOR_C
0534   23E1           00212         call READ_SECTOR
                      00213 
0535   1003           00214         bcf STATUS,C                            ; TEMP1 := CLUSTER mod 128 (TEMP1 je v intervalu 0..127)
0536   0D36           00215         rlf TEMP1,W                                     ; W := TEMP1 * 2
0537   00B6           00216         movwf TEMP1
0538   39FF           00217         andlw h'FF'
0539   1D03           00218         btfss STATUS,Z
053A   23A4           00219         call PRESKOC                            ; pokud je zaznam o clusteru na nulte pozici v sektoru, 
                            nic preskakovat nebudem...
                      00220 
                      00221 
053B   30A0           00222         movlw 0xA0                                      ; OPERAND_X
053C   0084           00223         movwf FSR               
053D   2382           00224         call READ_DATA  
053E   0820           00225         movfw DATA_L
053F   0080           00226         movwf INDF
0540   00BC           00227         movwf CLUSTER1
0541   0A84           00228         incf FSR,F
0542   0821           00229         movfw DATA_H
0543   0080           00230         movwf INDF
0544   00BD           00231         movwf CLUSTER2
0545   0A84           00232         incf FSR,F      
0546   2382           00233         call READ_DATA  
0547   0820           00234         movfw DATA_L
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0548   0080           00235         movwf INDF
0549   00BE           00236         movwf CLUSTER3
054A   0A84           00237         incf FSR,F
054B   0821           00238         movfw DATA_H
054C   0080           00239         movwf INDF
054D   00BF           00240         movwf CLUSTER4
054E   0A84           00241         incf FSR,F
                      00242 
                      00243         ; ted mame hodnotu clusteru ktery nam byl na pocatku predan v reg. CLUSTER, podivame se zda neby
                            l nasledkem 
                      00244         ; nejake chyby prazdny, nebo zda neni posledni v alokacnim retezu
054F   273E           00245         call NULA                                               ; if (OPERAND_X =  0) then PRETECENI := 
                            0 else PRETECENI := 1
                      00246         BANK_1
0550   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
0551   1683               M                 bsf     STATUS,RP0    
0552   182C           00247         btfsc PRETECENI,0
0553   2D59           00248         goto NEXT_CLUSTER_NEPRAZDNY
                      00249         BANK_0
0554   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0555   1283               M                 bcf     STATUS,RP0    
0556   30FF           00250         movlw h'FF'
0557   00BB           00251         movwf POZICE
0558   2D70           00252         goto NEXT_CLUSTER_KONEC                 ; Nevim sice jak by se toto mohlo stat, ale cluster byl 
                            prazdny, proto neni jiz co resit..
0559                  00253 NEXT_CLUSTER_NEPRAZDNY
                      00254         BANK_0
0559   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
055A   1283               M                 bcf     STATUS,RP0    
                      00255         ; Ted se podivame zda cluster nebyl posledni v alokacnim retezu -> cluster >= 0x0FFFFFF7
055B   30F7           00256         movlw 0xF7
055C   0080           00257         movwf INDF
055D   0A84           00258         incf FSR,F
055E   30FF           00259         movlw 0xFF
055F   0080           00260         movwf INDF
0560   0A84           00261         incf FSR,F
0561   30FF           00262         movlw 0xFF
0562   0080           00263         movwf INDF
0563   0A84           00264         incf FSR,F
0564   300F           00265         movlw 0x0F
0565   0080           00266         movwf INDF
0566   0A84           00267         incf FSR,F
                      00268         
0567   2655           00269         call ROZDIL                                             ; VYSLEDEK := X - Y 
                      00270                                                                         ; pri podteceni PRETECENI = 1 ( 
                            VYSLEDEK < 0 => PRETECENI = 1 )
                      00271         BANK_1
0568   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
0569   1683               M                 bsf     STATUS,RP0    
056A   182C           00272         btfsc PRETECENI,0
056B   2D70           00273         goto NEXT_CLUSTER_KONEC
                      00274         BANK_0
056C   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
056D   1283               M                 bcf     STATUS,RP0    
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

056E   30FF           00275         movlw h'FF'
056F   00BB           00276         movwf POZICE
0570                  00277 NEXT_CLUSTER_KONEC
                      00278         BANK_0
0570   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0571   1283               M                 bcf     STATUS,RP0    
0572   0008           00279         return
                      00280 ;**************************************************************************
0573                  00281 ZJISTI_FRAGMENT
                      00282 ; v CLUSTER[1-4] prijme cislo clusteru a do FRAGMENT[1-2] umisti kolik clusteru 
                      00283 ; po tomto clusteru nasledujich tvori jeden fragment
                      00284 ; (pokud je retezec tvoren pouze z tohoto clusteru, je vraceno cislo 0)
                      00285 
                      00286 ; Pokud soucasny cluster je prazdny (coz by se stat nemelo) vrati v POZICE FFh
                      00287 ; Jinak, pokud s vse povede, dame do POZICE 0
                      00288 
                      00289 ; ! PODPROGRAM NENI POUZITELNY PRO CLUSTER 0 (prvni cluster ROOT adresare)
                      00290 ; ! PODPROGRAM NETESTUJE ZDA NEBYLO ZADANO VETSI CISLO NEZ JE POCET CLUSTERU !!!
                      00291         
0573   01BB           00292         clrf POZICE
0574   01D2           00293         clrf FRAGMENT2
                      00294         ;movlw .1
                      00295         ;movwf FRAGMENT1
0575   01D1           00296         clrf FRAGMENT1
                      00297         ; LBA := [(CLUSTER * 4) / 512 ] + POCATEK_FAT
                      00298         ; LBA := ( CLUSTER / 128 ) + POCATEK_FAT
                      00299         ; offset := CLUSTER mod 128 
                      00300         INDF_BANK_1                             ; neprime adresovani do banku1
0576   1383               M                         bcf STATUS,IRP    
0577   30A0           00301         movlw 0xA0                                      ; OPERAND_X
0578   0084           00302         movwf FSR
0579   083C           00303         movfw CLUSTER1
057A   00DA           00304         movwf HL_ADR_CL1                        ; v HL_ADR_CL[1-4] mam hodnotu clusteru na predchozim za
                            znamu, proto si prvni cluster dame sem
057B   0080           00305         movwf INDF
057C   0A84           00306         incf FSR,F
057D   083D           00307         movfw CLUSTER2
057E   00DB           00308         movwf HL_ADR_CL2
057F   0080           00309         movwf INDF
0580   0A84           00310         incf FSR,F
0581   083E           00311         movfw CLUSTER3
0582   00DC           00312         movwf HL_ADR_CL3
0583   0080           00313         movwf INDF
0584   0A84           00314         incf FSR,F
0585   083F           00315         movfw CLUSTER4
0586   00DD           00316         movwf HL_ADR_CL4
0587   0080           00317         movwf INDF
                      00318 
0588   272F           00319         call POSUNDOPRAVA_7                     ; X := X div 128  ; PRETECENI := X mod 128
0589   30AC           00320         movlw 0xAC                                      ; PRETECENI
058A   0084           00321         movwf FSR
058B   0800           00322         movfw INDF
058C   00BA           00323         movwf TEMP5                                     ; TEMP5 := CLUSTER mod 128 (TEMP5 je v intervalu
                             0..127)
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00324 ;       bcf STATUS,C                            
                      00325 ;       rlf TEMP2,W                                     ; W := TEMP1 * 2
                      00326 
058D   30A4           00327         movlw 0xA4                                      ; OPERAND_Y
058E   0084           00328         movwf FSR
058F   0844           00329         movfw POCATEK_FAT1
0590   0080           00330         movwf INDF
0591   0A84           00331         incf FSR,F
0592   0845           00332         movfw POCATEK_FAT2
0593   0080           00333         movwf INDF
0594   0A84           00334         incf FSR,F
0595   0846           00335         movfw POCATEK_FAT3
0596   0080           00336         movwf INDF
0597   0A84           00337         incf FSR,F
0598   0847           00338         movfw POCATEK_FAT4
0599   0080           00339         movwf INDF
059A   0A84           00340         incf FSR,F
                      00341 
059B   2629           00342         call SOUCET
                      00343         
059C   0800           00344         movfw INDF                                      ; FSR ukazuje na VYSLEDEK
059D   00A7           00345         movwf LBA1
059E   0A84           00346         incf FSR,F
059F   0800           00347         movfw INDF
05A0   00A8           00348         movwf LBA2
05A1   0A84           00349         incf FSR,F
05A2   0800           00350         movfw INDF
05A3   00A9           00351         movwf LBA3
05A4   0A84           00352         incf FSR,F
05A5   0800           00353         movfw INDF
05A6   00AA           00354         movwf LBA4
05A7   0A84           00355         incf FSR,F
                      00356 
05A8   01A4           00357         clrf FEATURES
05A9   3001           00358         movlw .1
05AA   00A6           00359         movwf SECTOR_C
05AB   23E1           00360         call READ_SECTOR
                      00361 
05AC   1003           00362         bcf STATUS,C
05AD   0D3A           00363         rlf TEMP5,w
05AE   00B6           00364         movwf TEMP1                                     ; TEMP1 := TEMP5 * 2
05AF   083A           00365         movfw TEMP5
05B0   39FF           00366         andlw h'FF'
05B1   1D03           00367         btfss STATUS,Z
05B2   23A4           00368         call PRESKOC                            ; pokud je zaznam o clusteru na nulte pozici v sektoru, 
                            nic preskakovat nebudem...
                      00369                                                                 ; preskakujeme pouze na zacatku, pak jdo
                            u hezky za sebou
05B3   2DB8           00370         goto ZJISTI_FRAGMENT_CLUSTER
05B4                  00371 ZJISTI_FRAGMENT_CTI_SECTOR
                      00372 
05B4   01A4           00373         clrf FEATURES
05B5   3001           00374         movlw .1
05B6   00A6           00375         movwf SECTOR_C
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

05B7   23E1           00376         call READ_SECTOR
                      00377 
05B8                  00378 ZJISTI_FRAGMENT_CLUSTER
05B8   30A0           00379         movlw 0xA0                                      ; OPERAND_X
05B9   0084           00380         movwf FSR               
05BA   2382           00381         call READ_DATA  
05BB   0820           00382         movfw DATA_L
05BC   0080           00383         movwf INDF
05BD   0A84           00384         incf FSR,F
05BE   0821           00385         movfw DATA_H
05BF   0080           00386         movwf INDF
05C0   0A84           00387         incf FSR,F      
05C1   2382           00388         call READ_DATA  
05C2   0820           00389         movfw DATA_L
05C3   0080           00390         movwf INDF
05C4   0A84           00391         incf FSR,F
05C5   0821           00392         movfw DATA_H
05C6   0080           00393         movwf INDF
05C7   0A84           00394         incf FSR,F
                      00395 
                      00396 
                      00397         ; ted mame hodnotu clusteru v OPERAND_X. pokud je posledni v retezci, nebo je prazdny, tak konci
                            me
05C8   273E           00398         call NULA                                               ; if (OPERAND_X =  0) then PRETECENI := 
                            0 else PRETECENI := 1
                      00399         BANK_1
05C9   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
05CA   1683               M                 bsf     STATUS,RP0    
05CB   182C           00400         btfsc PRETECENI,0
05CC   2DD0           00401         goto ZJISTI_FRAGMENT_NEPRAZDNY
                      00402         BANK_0
05CD   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
05CE   1283               M                 bcf     STATUS,RP0    
05CF   2E26           00403         goto ZJISTI_FRAGMENT_KONEC                      ; Nevim sice jak by se toto mohlo stat, ale clus
                            ter byl prazdny, proto neni jiz co resit..
05D0                  00404 ZJISTI_FRAGMENT_NEPRAZDNY
                      00405         BANK_0
05D0   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
05D1   1283               M                 bcf     STATUS,RP0    
                      00406 
                      00407         ; Ted se podivame zda cluster nebyl posledni v alokacnim retezu -> cluster >= 0x0FFFFFF7
05D2   30F7           00408         movlw 0xF7
05D3   0080           00409         movwf INDF
05D4   0A84           00410         incf FSR,F
05D5   30FF           00411         movlw 0xFF
05D6   0080           00412         movwf INDF
05D7   0A84           00413         incf FSR,F
05D8   30FF           00414         movlw 0xFF
05D9   0080           00415         movwf INDF
05DA   0A84           00416         incf FSR,F
05DB   300F           00417         movlw 0x0F
05DC   0080           00418         movwf INDF
05DD   0A84           00419         incf FSR,F
                      00420         
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

05DE   2655           00421         call ROZDIL                                             ; VYSLEDEK := X - Y 
                      00422                                                                         ; pri podteceni PRETECENI = 1 ( 
                            VYSLEDEK < 0 => PRETECENI = 1 )
                      00423         BANK_1
05DF   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
05E0   1683               M                 bsf     STATUS,RP0    
05E1   1C2C           00424         btfss PRETECENI,0                               ; pokud je vysledek zaporny, je neni cluster pos
                            ledni a my pokracujeme...
05E2   2E26           00425         goto ZJISTI_FRAGMENT_KONEC
                      00426         BANK_0
05E3   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
05E4   1283               M                 bcf     STATUS,RP0    
                      00427 
05E5   30A4           00428         movlw 0xA4                                              ; OPERAND_Y
05E6   0084           00429         movwf FSR               
05E7   085A           00430         movfw HL_ADR_CL1                                ; v HL_ADR_CL[1-4] mam hodnotu clusteru na predc
                            hozim zaznamu
05E8   0080           00431         movwf INDF
05E9   0A84           00432         incf FSR,F
05EA   085B           00433         movfw HL_ADR_CL2
05EB   0080           00434         movwf INDF
05EC   0A84           00435         incf FSR,F
05ED   085C           00436         movfw HL_ADR_CL3
05EE   0080           00437         movwf INDF
05EF   0A84           00438         incf FSR,F
05F0   085D           00439         movfw HL_ADR_CL4
05F1   0080           00440         movwf INDF
                      00441 
                      00442 
05F2   2655           00443         call ROZDIL                                             ; VYSLEDEK := SOUCASNY_CL - PREDCHOZI_CL
                      00444                                                                         ; vysledek se musi rovnat 1
                      00445         BANK_1
05F3   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
05F4   1683               M                 bsf     STATUS,RP0    
05F5   082B           00446         movfw VYSLEDEK4
05F6   042A           00447         iorwf VYSLEDEK3,W
05F7   0429           00448         iorwf VYSLEDEK2,W
05F8   1D03           00449         btfss STATUS,Z
05F9   2E26           00450         goto ZJISTI_FRAGMENT_KONEC
05FA   0828           00451         movfw VYSLEDEK1
05FB   3C01           00452         sublw .1
05FC   1D03           00453         btfss STATUS,Z
05FD   2E26           00454         goto ZJISTI_FRAGMENT_KONEC
                      00455         BANK_0
05FE   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
05FF   1283               M                 bcf     STATUS,RP0    
                      00456 
                      00457         ; OK, ted vime, ze predchozi cluster byl o jednu mensi, nez soucasny...
                      00458         ; podivame se zda neni FRAGMENT moc velky...
0600   1BD2           00459         btfsc FRAGMENT2,7
0601   2E26           00460         goto ZJISTI_FRAGMENT_KONEC
                      00461         
                      00462         ; FRAGMENT++
0602   0AD1           00463         incf FRAGMENT1,f
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0603   1903           00464         btfsc STATUS,Z
0604   0AD2           00465         incf FRAGMENT2,f
                      00466 
0605   30A0           00467         movlw 0xA0                                              ; OPERAND_X
0606   0084           00468         movwf FSR               
0607   0800           00469         movfw INDF
0608   00DA           00470         movwf HL_ADR_CL1                                ; v HL_ADR_CL[1-4] mam hodnotu clusteru na predc
                            hozim zaznamu
0609   0A84           00471         incf FSR,F
060A   0800           00472         movfw INDF
060B   00DB           00473         movwf HL_ADR_CL2
060C   0A84           00474         incf FSR,F
060D   0800           00475         movfw INDF
060E   00DC           00476         movwf HL_ADR_CL3
060F   0A84           00477         incf FSR,F
0610   0800           00478         movfw INDF
0611   00DD           00479         movwf HL_ADR_CL4
                      00480 
                      00481 
0612   0ABA           00482         incf TEMP5,f
0613   083A           00483         movfw TEMP5
0614   3C80           00484         sublw .128
0615   1D03           00485         btfss STATUS,Z
0616   2DB8           00486         goto ZJISTI_FRAGMENT_CLUSTER
                      00487 
0617   01BA           00488         clrf TEMP5
                      00489 
                      00490         ; LBA++
0618   3001           00491         movlw .1
0619   07A7           00492         addwf LBA1,f
061A   1C03           00493         btfss STATUS,C
061B   2E23           00494         goto ZJISTI_FRAGMENT_INC_KONEC
061C   07A8           00495         addwf LBA2,f
061D   1C03           00496         btfss STATUS,C
061E   2E23           00497         goto ZJISTI_FRAGMENT_INC_KONEC
061F   07A9           00498         addwf LBA3,f
0620   1C03           00499         btfss STATUS,C
0621   2E23           00500         goto ZJISTI_FRAGMENT_INC_KONEC
0622   07AA           00501         addwf LBA4,f
0623                  00502 ZJISTI_FRAGMENT_INC_KONEC
                      00503 
                      00504         BANK_0
0623   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0624   1283               M                 bcf     STATUS,RP0    
0625   2DB4           00505         goto ZJISTI_FRAGMENT_CTI_SECTOR
                      00506 
0626                  00507 ZJISTI_FRAGMENT_KONEC
                      00508         BANK_0
0626   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0627   1283               M                 bcf     STATUS,RP0    
0628   0008           00509         return
                      00510 ;**************************************************************************
                      00078         include "aritmetic.asm" ; podprogramy vykonavajici zakladni aritmetologicke operace
                      00001 ;**********************************************************
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00002 ;**********************************************************
                      00003 ;**********************************************************
                      00004 ; Obsahuje podrogramy realizujici zakladni aritmeticke operace
                      00005 ; pouzivane v mp3 preprcavaci. Vsechny operace se provadi 
                      00006 ; s 32bitovymi cisly.
                      00007 ; 
                      00008 ; Pro praci aritmetickych procedur je rezervovana BANKA 1 !!!!!
                      00009 ;**********************************************************
                      00010 ;**********************************************************
                      00011 ;**********************************************************
0629                  00012 SOUCET
                      00013 ; provede soucet hodnoty v registrech OPERAND_X[1..4] 
                      00014 ; s hodnotou v OPERAND_Y[1..4] a umisti do VYSLEDEK[1..4] 
                      00015 ; pokud dojde k preteceni, nastavi se PRETECENI do 1
                      00016 ; (byty s indexem 1 maji nejnizsi vahu)
                      00017         BANK_1
0629   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
062A   1683               M                 bsf     STATUS,RP0    
062B   01AC           00018         clrf PRETECENI
                      00019 
062C   0820           00020         movfw OPERAND_X1
062D   0724           00021         addwf OPERAND_Y1,W
062E   00A8           00022         movwf VYSLEDEK1
062F   1803           00023         btfsc STATUS,C
0630   14AC           00024                 bsf PRETECENI,1
                      00025 
0631   0821           00026         movfw OPERAND_X2
0632   0725           00027         addwf OPERAND_Y2,W
0633   00A9           00028         movwf VYSLEDEK2
0634   3001           00029         movlw .1
0635   1803           00030         btfsc STATUS,C
0636   142C           00031                 bsf PRETECENI,0
0637   18AC           00032         btfsc PRETECENI,1
0638   07A9           00033                 addwf VYSLEDEK2,F
0639   1803           00034         btfsc STATUS,C
063A   142C           00035                 bsf PRETECENI,0
063B   10AC           00036         bcf PRETECENI,1
                      00037 
063C   0822           00038         movfw OPERAND_X3
063D   0726           00039         addwf OPERAND_Y3,W
063E   00AA           00040         movwf VYSLEDEK3
063F   3001           00041         movlw .1
0640   1803           00042         btfsc STATUS,C
0641   14AC           00043                 bsf PRETECENI,1
0642   182C           00044         btfsc PRETECENI,0
0643   07AA           00045                 addwf VYSLEDEK3,F
0644   1803           00046         btfsc STATUS,C
0645   14AC           00047                 bsf PRETECENI,1
0646   102C           00048         bcf PRETECENI,0
                      00049 
0647   0823           00050         movfw OPERAND_X4
0648   0727           00051         addwf OPERAND_Y4,W
0649   00AB           00052         movwf VYSLEDEK4
064A   3001           00053         movlw .1
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

064B   1803           00054         btfsc STATUS,C
064C   142C           00055                 bsf PRETECENI,0
064D   18AC           00056         btfsc PRETECENI,1
064E   07AB           00057                 addwf VYSLEDEK4,F
064F   1803           00058         btfsc STATUS,C
0650   142C           00059                 bsf PRETECENI,0
0651   10AC           00060         bcf PRETECENI,1 
                      00061 
                      00062         BANK_0
0652   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0653   1283               M                 bcf     STATUS,RP0    
0654   0008           00063         return
                      00064 ;**********************************************************
                      00065 ;**********************************************************
0655                  00066 ROZDIL  ; VYSLEDEK := X - Y
                      00067                 ; pri podteceni PRETECENI = 1 ( VYSLEDEK < 0 => PRETECENI = 1 )
                      00068         BANK_1
0655   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
0656   1683               M                 bsf     STATUS,RP0    
0657   01AC           00069         clrf PRETECENI
                      00070 
0658   0824           00071         movfw OPERAND_Y1
0659   0220           00072         subwf OPERAND_X1,W      ; W = X - Y     
065A   00A8           00073         movwf VYSLEDEK1
065B   1C03           00074         btfss STATUS,C
065C   14AC           00075                 bsf PRETECENI,1
                      00076         
065D   0825           00077         movfw OPERAND_Y2
065E   0221           00078         subwf OPERAND_X2,W      ; W = X - Y     
065F   00A9           00079         movwf VYSLEDEK2
0660   3001           00080         movlw .1
0661   1C03           00081         btfss STATUS,C
0662   142C           00082                 bsf PRETECENI,0
0663   18AC           00083         btfsc PRETECENI,1
0664   02A9           00084                 subwf VYSLEDEK2,F
0665   1C03           00085         btfss STATUS,C
0666   142C           00086                 bsf PRETECENI,0
0667   10AC           00087         bcf PRETECENI,1 
                      00088         
0668   0826           00089         movfw OPERAND_Y3
0669   0222           00090         subwf OPERAND_X3,W      ; W = X - Y     
066A   00AA           00091         movwf VYSLEDEK3
066B   3001           00092         movlw .1
066C   1C03           00093         btfss STATUS,C
066D   14AC           00094                 bsf PRETECENI,1
066E   182C           00095         btfsc PRETECENI,0
066F   02AA           00096                 subwf VYSLEDEK3,F
0670   1C03           00097         btfss STATUS,C
0671   14AC           00098                 bsf PRETECENI,1
0672   102C           00099         bcf PRETECENI,0
                      00100         
0673   0827           00101         movfw OPERAND_Y4
0674   0223           00102         subwf OPERAND_X4,W      ; W = X - Y     
0675   00AB           00103         movwf VYSLEDEK4
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0676   3001           00104         movlw .1
0677   1C03           00105         btfss STATUS,C
0678   142C           00106                 bsf PRETECENI,0
0679   18AC           00107         btfsc PRETECENI,1
067A   02AB           00108                 subwf VYSLEDEK4,F
067B   1C03           00109         btfss STATUS,C
067C   142C           00110                 bsf PRETECENI,0
067D   10AC           00111         bcf PRETECENI,1 
                      00112         
                      00113         BANK_0
067E   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
067F   1283               M                 bcf     STATUS,RP0    
0680   0008           00114         return
                      00115 ;**********************************************************
0681                  00116 DEKREMENTUJ     ; X := X - 1
                      00117         BANK_1
0681   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
0682   1683               M                 bsf     STATUS,RP0    
0683   3001           00118         movlw .1
                      00119 
0684   02A0           00120         subwf OPERAND_X1,f
0685   1803           00121         btfsc STATUS,C
0686   2E8E           00122         goto DEKREMENTUJ_KONEC
                      00123         
0687   02A1           00124         subwf OPERAND_X2,f
0688   1803           00125         btfsc STATUS,C
0689   2E8E           00126         goto DEKREMENTUJ_KONEC
                      00127 
068A   02A2           00128         subwf OPERAND_X3,f
068B   1803           00129         btfsc STATUS,C
068C   2E8E           00130         goto DEKREMENTUJ_KONEC
                      00131 
068D   02A3           00132         subwf OPERAND_X4,f
068E                  00133 DEKREMENTUJ_KONEC
                      00134         BANK_0
068E   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
068F   1283               M                 bcf     STATUS,RP0    
0690   0008           00135         return
                      00136 ;**********************************************************
0691                  00137 POSUNDOLEVA     ; X := (X * 2) mod 0xFFFFFFFF , PRETECENI := (X * 2) div 0xFFFFFFFF
                      00138                         ; tento podprogram nepouzivat, primo v hlavnim programu
                      00139                         ; musi se nastavit BANK_1 a vymazat PRETECENI!!!
                      00140                         ; (je pouze pro pouziti v nasobicich podprogramech)
                      00141                         ; pouzivat jen POSUNDOLEVA_1, 2, 3, 4 
0691   0DA0           00142         rlf OPERAND_X1,F
0692   0DA1           00143         rlf OPERAND_X2,F
0693   0DA2           00144         rlf OPERAND_X3,F
0694   0DA3           00145         rlf OPERAND_X4,F
0695   0DAC           00146         rlf PRETECENI,F 
0696   0008           00147         return
                      00148 ;**********************************************************
0697                  00149 POSUNDOLEVA_1   ; X := X * 2
                      00150                                 ; X > 0xFFFF FFFF => PRETECENI obsahuje bity navic
                      00151         BANK_1
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0697   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
0698   1683               M                 bsf     STATUS,RP0    
0699   01AC           00152         clrf PRETECENI
069A   1003           00153         bcf STATUS,C
                      00154         
069B   2691           00155         call POSUNDOLEVA
                      00156 
                      00157         BANK_0
069C   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
069D   1283               M                 bcf     STATUS,RP0    
069E   0008           00158         return
                      00159 ;**********************************************************
069F                  00160 POSUNDOLEVA_2   ; X := X * 4
                      00161                                 ; X > 0xFFFF FFFF => PRETECENI obsahuje bity navic
                      00162         BANK_1
069F   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
06A0   1683               M                 bsf     STATUS,RP0    
06A1   01AC           00163         clrf PRETECENI
06A2   1003           00164         bcf STATUS,C
                      00165         
06A3   2691           00166         call POSUNDOLEVA
06A4   2691           00167         call POSUNDOLEVA
                      00168 
                      00169         BANK_0
06A5   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
06A6   1283               M                 bcf     STATUS,RP0    
06A7   0008           00170         return
                      00171 ;**********************************************************
06A8                  00172 POSUNDOLEVA_3   ; X := X * 8
                      00173                                 ; X > 0xFFFF FFFF => PRETECENI obsahuje bity navic
                      00174         BANK_1
06A8   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
06A9   1683               M                 bsf     STATUS,RP0    
06AA   01AC           00175         clrf PRETECENI
06AB   1003           00176         bcf STATUS,C
                      00177         
06AC   2691           00178         call POSUNDOLEVA
06AD   2691           00179         call POSUNDOLEVA
06AE   2691           00180         call POSUNDOLEVA
                      00181 
                      00182         BANK_0
06AF   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
06B0   1283               M                 bcf     STATUS,RP0    
06B1   0008           00183         return
                      00184 ;**********************************************************
06B2                  00185 POSUNDOLEVA_4   ; X := X * 16
                      00186                                 ; X > 0xFFFF FFFF => PRETECENI obsahuje bity navic
                      00187         BANK_1
06B2   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
06B3   1683               M                 bsf     STATUS,RP0    
06B4   01AC           00188         clrf PRETECENI
06B5   1003           00189         bcf STATUS,C
                      00190         
06B6   2691           00191         call POSUNDOLEVA
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

06B7   2691           00192         call POSUNDOLEVA
06B8   2691           00193         call POSUNDOLEVA
06B9   2691           00194         call POSUNDOLEVA
                      00195 
                      00196         BANK_0
06BA   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
06BB   1283               M                 bcf     STATUS,RP0    
06BC   0008           00197         return
                      00198 ;**********************************************************
06BD                  00199 POSUNDOLEVA_5   ; X := X * 32
                      00200                                 ; X > 0xFFFF FFFF => PRETECENI obsahuje bity navic
                      00201         BANK_1
06BD   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
06BE   1683               M                 bsf     STATUS,RP0    
06BF   01AC           00202         clrf PRETECENI
06C0   1003           00203         bcf STATUS,C
                      00204         
06C1   2691           00205         call POSUNDOLEVA
06C2   2691           00206         call POSUNDOLEVA
06C3   2691           00207         call POSUNDOLEVA
06C4   2691           00208         call POSUNDOLEVA
06C5   2691           00209         call POSUNDOLEVA
                      00210 
                      00211         BANK_0
06C6   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
06C7   1283               M                 bcf     STATUS,RP0    
06C8   0008           00212         return
                      00213 ;**********************************************************
06C9                  00214 POSUNDOLEVA_6   ; X := X * 64
                      00215                                 ; X > 0xFFFF FFFF => PRETECENI obsahuje bity navic
                      00216         BANK_1
06C9   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
06CA   1683               M                 bsf     STATUS,RP0    
06CB   01AC           00217         clrf PRETECENI
06CC   1003           00218         bcf STATUS,C
                      00219         
06CD   2691           00220         call POSUNDOLEVA
06CE   2691           00221         call POSUNDOLEVA
06CF   2691           00222         call POSUNDOLEVA
06D0   2691           00223         call POSUNDOLEVA
06D1   2691           00224         call POSUNDOLEVA
06D2   2691           00225         call POSUNDOLEVA
                      00226 
                      00227         BANK_0
06D3   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
06D4   1283               M                 bcf     STATUS,RP0    
06D5   0008           00228         return
                      00229 ;**********************************************************
06D6                  00230 POSUNDOLEVA_7   ; X := X * 128
                      00231                                 ; X > 0xFFFF FFFF => PRETECENI obsahuje bity navic
                      00232         BANK_1
06D6   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
06D7   1683               M                 bsf     STATUS,RP0    
06D8   01AC           00233         clrf PRETECENI
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

06D9   1003           00234         bcf STATUS,C
                      00235         
06DA   2691           00236         call POSUNDOLEVA
06DB   2691           00237         call POSUNDOLEVA
06DC   2691           00238         call POSUNDOLEVA
06DD   2691           00239         call POSUNDOLEVA
06DE   2691           00240         call POSUNDOLEVA
06DF   2691           00241         call POSUNDOLEVA
06E0   2691           00242         call POSUNDOLEVA
                      00243 
                      00244         BANK_0
06E1   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
06E2   1283               M                 bcf     STATUS,RP0    
06E3   0008           00245         return
                      00246 ;**********************************************************
06E4                  00247 POSUNDOPRAVA    ; X := X div 2 , PRETECENI := X mod 2
                      00248                         ; tento podprogram nepouzivat, primo v hlavnim programu
                      00249                         ; musi se nastavit BANK_1 a vymazat PRETECENI!!!
                      00250                         ; (je pouze pro pouziti v nasobicich podprogramech)
                      00251                         ; pouzivat jen POSUNDOPRAVA_1, 2, 3, 4 
06E4   1003           00252         bcf STATUS,C
06E5   0CA3           00253         rrf OPERAND_X4,F
06E6   0CA2           00254         rrf OPERAND_X3,F
06E7   0CA1           00255         rrf OPERAND_X2,F
06E8   0CA0           00256         rrf OPERAND_X1,F
06E9   0008           00257         return
                      00258 ;**********************************************************
06EA                  00259 POSUNDOPRAVA_1  ; X := X div 2
                      00260                                 ; PRETECENI := X mod 2
                      00261         BANK_1
06EA   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
06EB   1683               M                 bsf     STATUS,RP0    
06EC   0820           00262         movfw OPERAND_X1
06ED   3901           00263         andlw b'00000001'
06EE   00AC           00264         movwf PRETECENI         ; PRETECENI := X mod 2
                      00265         
06EF   26E4           00266         call POSUNDOPRAVA
                      00267 
                      00268         BANK_0
06F0   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
06F1   1283               M                 bcf     STATUS,RP0    
06F2   0008           00269         return
                      00270 ;**********************************************************
06F3                  00271 POSUNDOPRAVA_2  ; X := X div 4
                      00272                                 ; PRETECENI := X mod 4
                      00273         BANK_1
06F3   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
06F4   1683               M                 bsf     STATUS,RP0    
06F5   0820           00274         movfw OPERAND_X1
06F6   3903           00275         andlw b'00000011'
06F7   00AC           00276         movwf PRETECENI         ; PRETECENI := X mod 4
                      00277         
06F8   26E4           00278         call POSUNDOPRAVA
06F9   26E4           00279         call POSUNDOPRAVA
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00280 
                      00281         BANK_0
06FA   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
06FB   1283               M                 bcf     STATUS,RP0    
06FC   0008           00282         return
                      00283 ;**********************************************************
06FD                  00284 POSUNDOPRAVA_3  ; X := X div 8
                      00285                                 ; PRETECENI := X mod 8
                      00286         BANK_1
06FD   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
06FE   1683               M                 bsf     STATUS,RP0    
06FF   0820           00287         movfw OPERAND_X1
0700   3907           00288         andlw b'00000111'
0701   00AC           00289         movwf PRETECENI         ; PRETECENI := X mod 8
                      00290         
0702   26E4           00291         call POSUNDOPRAVA
0703   26E4           00292         call POSUNDOPRAVA
0704   26E4           00293         call POSUNDOPRAVA
                      00294 
                      00295         BANK_0
0705   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0706   1283               M                 bcf     STATUS,RP0    
0707   0008           00296         return
                      00297 ;**********************************************************
0708                  00298 POSUNDOPRAVA_4  ; X := X div 16
                      00299                                 ; PRETECENI := X mod 16
                      00300         BANK_1
0708   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
0709   1683               M                 bsf     STATUS,RP0    
070A   0820           00301         movfw OPERAND_X1
070B   390F           00302         andlw b'00001111'
070C   00AC           00303         movwf PRETECENI         ; PRETECENI := X mod 16
                      00304         
070D   26E4           00305         call POSUNDOPRAVA
070E   26E4           00306         call POSUNDOPRAVA
070F   26E4           00307         call POSUNDOPRAVA
0710   26E4           00308         call POSUNDOPRAVA
                      00309 
                      00310         BANK_0
0711   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0712   1283               M                 bcf     STATUS,RP0    
0713   0008           00311         return
                      00312 ;**********************************************************
0714                  00313 POSUNDOPRAVA_5  ; X := X div 32
                      00314                                 ; PRETECENI := X mod 32
                      00315         BANK_1
0714   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
0715   1683               M                 bsf     STATUS,RP0    
0716   0820           00316         movfw OPERAND_X1
0717   391F           00317         andlw b'00011111'
0718   00AC           00318         movwf PRETECENI         ; PRETECENI := X mod 32
                      00319         
0719   26E4           00320         call POSUNDOPRAVA
071A   26E4           00321         call POSUNDOPRAVA
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

071B   26E4           00322         call POSUNDOPRAVA
071C   26E4           00323         call POSUNDOPRAVA
071D   26E4           00324         call POSUNDOPRAVA
                      00325 
                      00326         BANK_0
071E   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
071F   1283               M                 bcf     STATUS,RP0    
0720   0008           00327         return
                      00328 ;**********************************************************
0721                  00329 POSUNDOPRAVA_6  ; X := X div 64
                      00330                                 ; PRETECENI := X mod 64
                      00331         BANK_1
0721   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
0722   1683               M                 bsf     STATUS,RP0    
0723   0820           00332         movfw OPERAND_X1
0724   393F           00333         andlw b'00111111'
0725   00AC           00334         movwf PRETECENI         ; PRETECENI := X mod 64
                      00335         
0726   26E4           00336         call POSUNDOPRAVA
0727   26E4           00337         call POSUNDOPRAVA
0728   26E4           00338         call POSUNDOPRAVA
0729   26E4           00339         call POSUNDOPRAVA
072A   26E4           00340         call POSUNDOPRAVA
072B   26E4           00341         call POSUNDOPRAVA
                      00342 
                      00343         BANK_0
072C   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
072D   1283               M                 bcf     STATUS,RP0    
072E   0008           00344         return
                      00345 ;**********************************************************
072F                  00346 POSUNDOPRAVA_7  ; X := X div 128
                      00347                                 ; PRETECENI := X mod 128
                      00348         BANK_1
072F   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
0730   1683               M                 bsf     STATUS,RP0    
0731   0820           00349         movfw OPERAND_X1
0732   397F           00350         andlw b'01111111'
0733   00AC           00351         movwf PRETECENI         ; PRETECENI := X mod 128
                      00352         
0734   26E4           00353         call POSUNDOPRAVA
0735   26E4           00354         call POSUNDOPRAVA
0736   26E4           00355         call POSUNDOPRAVA
0737   26E4           00356         call POSUNDOPRAVA
0738   26E4           00357         call POSUNDOPRAVA
0739   26E4           00358         call POSUNDOPRAVA
073A   26E4           00359         call POSUNDOPRAVA
                      00360 
                      00361         BANK_0
073B   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
073C   1283               M                 bcf     STATUS,RP0    
073D   0008           00362         return
                      00363 ;**********************************************************
073E                  00364 NULA    ; if (X =  0) then PRETECENI := 0
                      00365                 ; if (X <> 0) then PRETECENI := 1
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00366                 ; obsah X zustane nezmenen
                      00367         BANK_1
073E   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
073F   1683               M                 bsf     STATUS,RP0    
0740   01AC           00368         clrf PRETECENI
0741   30FF           00369         movlw h'FF'     
                      00370 
0742   05A0           00371         andwf OPERAND_X1,F
0743   1D03           00372         btfss STATUS,Z
0744   142C           00373                 bsf PRETECENI,0
0745   05A1           00374         andwf OPERAND_X2,F
0746   1D03           00375         btfss STATUS,Z
0747   142C           00376                 bsf PRETECENI,0
0748   05A2           00377         andwf OPERAND_X3,F
0749   1D03           00378         btfss STATUS,Z
074A   142C           00379                 bsf PRETECENI,0
074B   05A3           00380         andwf OPERAND_X4,F
074C   1D03           00381         btfss STATUS,Z
074D   142C           00382                 bsf PRETECENI,0         
                      00383 
                      00384         BANK_0
074E   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
074F   1283               M                 bcf     STATUS,RP0    
0750   0008           00385         return
                      00386 ;**********************************************************
                      00079  
                      00080 
0800                  00081  org 0x0800                                     ; PAGE 1
                      00082         include "vs1001.asm"    ; podprogramy na ovladani mp3 decoderu
                      00001 ;**********************************************************
                      00002 ;**********************************************************
                      00003 ;**********************************************************
                      00004 ; OBSLUZNE PODPROGRAMY PRO MP3 DECODER vs1001g
                      00005 ;**********************************************************
                      00006 ;**********************************************************
                      00007 ;**********************************************************
                      00008 
                      00009 ; MP3_PORT              
                      00010 ; MP3_PORT_TRIS 
                      00011 
                      00012 ; BITY MP3_PORT
                      00013 ; #define MP3_SO                MP3_PORT,0      ; serial output - tady dostavame z dekoderu data
                      00014 ; #define MP3_SI                MP3_PORT,1      ; serial input  - pokud MP3_CS=1, tak posilame mp3 data,
                             pokud =0, tak posilame prikaz
                      00015 ; #define MP3_SCLK              MP3_PORT,2      ; clock - nabezna hrana urcuje platnost dat pri seriovem
                             prenosu
                      00016 ; #define MP3_CS                MP3_PORT,3      ; cable select  - pokud MP3_CS=1, tak po SI posilame mp3
                             data, pokud =0, tak posilame prikaz
                      00017 ; #define MP3_DREQ              MP3_PORT,4      ; data request  - pokud =1, tak dekoder pozaduje dalsi m
                            p3 data (vic jak 32B)
                      00018 ; #define MP3_BSYNC             MP3_PORT,5      ; pro synchronizaci - ma byt nastaven pri prvnim prenase
                            nem bitu kazdeho bytu
                      00019 
                      00020 ;**********************************************************
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00021 ; co nejrychleji vodesle hodnotu ve W smerem k dekoderu (obsluhuje signaly DSYNC, SI, SCLK)
0800                  00022 VS_WR_BYTE
                      00023 #IF SPI_SOFTWARE==1
0800   1507           00024         bsf MP3_BSYNC           ; bude nasledovat prvni bit bytu, proto nastavime BSYNC
0801   0093           00025         movwf SSPBUF            ; dame dato do SPI bufferu
0802   0000           00026         nop
0803   0000           00027         nop
0804   0000           00028         nop
0805   0000           00029         nop
0806   0000           00030         nop
0807   0000           00031         nop
0808   1107           00032         bcf MP3_BSYNC
0809   1D8C           00033         btfss PIR1,SSPIF        ; 3. bit
080A   2809           00034         goto $-1                        ; cekame dokud neni prenos kompletni
080B   118C           00035         bcf PIR1,SSPIF          ; 
080C   0008           00036         return
                      00037 #ELSE
                      00038         ; k praci pouziva TEMPW
                      00039         movwf TEMPW             ; dato co mame odeslat si hodime do tempu...
                      00040 
                      00041         bsf MP3_BSYNC   ; bude nasledovat prvni bit bytu, proto nastavime BSYNC
                      00042 
                      00043         ; 7. bit bytu
                      00044         bcf MP3_SCLK    ; shodime SCLK
                      00045         bcf MP3_SI              ; nevime zda bit bude 0 nebo 1, SI nulujeme
                      00046         rlf TEMPW,f             ; odesilame od nejvyssiho bitu k nejnizsimu
                      00047         btfsc STATUS,C
                      00048         bsf MP3_SI
                      00049         bsf MP3_SCLK
                      00050         bcf MP3_BSYNC
                      00051         
                      00052         ; 6. bit bytu
                      00053         bcf MP3_SCLK    ; shodime SCLK
                      00054         bcf MP3_SI              ; nevime zda bit bude 0 nebo 1, SI nulujeme
                      00055         rlf TEMPW,f             ; odesilame od nejvyssiho bitu k nejnizsimu
                      00056         btfsc STATUS,C
                      00057         bsf MP3_SI
                      00058         bsf MP3_SCLK
                      00059 
                      00060         ; 5. bit bytu
                      00061         bcf MP3_SCLK    ; shodime SCLK
                      00062         bcf MP3_SI              ; nevime zda bit bude 0 nebo 1, SI nulujeme
                      00063         rlf TEMPW,f             ; odesilame od nejvyssiho bitu k nejnizsimu
                      00064         btfsc STATUS,C
                      00065         bsf MP3_SI
                      00066         bsf MP3_SCLK
                      00067 
                      00068         ; 4. bit bytu
                      00069         bcf MP3_SCLK    ; shodime SCLK
                      00070         bcf MP3_SI              ; nevime zda bit bude 0 nebo 1, SI nulujeme
                      00071         rlf TEMPW,f             ; odesilame od nejvyssiho bitu k nejnizsimu
                      00072         btfsc STATUS,C
                      00073         bsf MP3_SI
                      00074         bsf MP3_SCLK
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00075 
                      00076         ; 3. bit bytu
                      00077         bcf MP3_SCLK    ; shodime SCLK
                      00078         bcf MP3_SI              ; nevime zda bit bude 0 nebo 1, SI nulujeme
                      00079         rlf TEMPW,f             ; odesilame od nejvyssiho bitu k nejnizsimu
                      00080         btfsc STATUS,C
                      00081         bsf MP3_SI
                      00082         bsf MP3_SCLK
                      00083 
                      00084         ; 2. bit bytu
                      00085         bcf MP3_SCLK    ; shodime SCLK
                      00086         bcf MP3_SI              ; nevime zda bit bude 0 nebo 1, SI nulujeme
                      00087         rlf TEMPW,f             ; odesilame od nejvyssiho bitu k nejnizsimu
                      00088         btfsc STATUS,C
                      00089         bsf MP3_SI
                      00090         bsf MP3_SCLK
                      00091 
                      00092         ; 1. bit bytu
                      00093         bcf MP3_SCLK    ; shodime SCLK
                      00094         bcf MP3_SI              ; nevime zda bit bude 0 nebo 1, SI nulujeme
                      00095         rlf TEMPW,f             ; odesilame od nejvyssiho bitu k nejnizsimu
                      00096         btfsc STATUS,C
                      00097         bsf MP3_SI
                      00098         bsf MP3_SCLK
                      00099 
                      00100         ; 0. bit bytu
                      00101         bcf MP3_SCLK    ; shodime SCLK
                      00102         bcf MP3_SI              ; nevime zda bit bude 0 nebo 1, SI nulujeme
                      00103         rlf TEMPW,f             ; odesilame od nejvyssiho bitu k nejnizsimu
                      00104         btfsc STATUS,C
                      00105         bsf MP3_SI
                      00106         bsf MP3_SCLK
                      00107 
                      00108         bcf MP3_SCLK
                      00109         return
                      00110 #ENDIF
                      00111 ;**********************************************************
                      00112 ; co nejrychleji prijme dato z vs1001 a umisti jej do W
080D                  00113 VS_RD_BYTE
                      00114 #IF SPI_SOFTWARE==1
080D   1507           00115         bsf MP3_BSYNC           ; bude nasledovat prvni bit bytu, proto nastavime BSYNC
080E   3000           00116         movlw .0
080F   0093           00117         movwf SSPBUF            ; dame dato do SPI bufferu
0810   0000           00118         nop
0811   0000           00119         nop
0812   0000           00120         nop
0813   0000           00121         nop
0814   0000           00122         nop
0815   0000           00123         nop
0816   1107           00124         bcf MP3_BSYNC
0817   1D8C           00125         btfss PIR1,SSPIF
0818   2817           00126         goto $-1                        ; cekame dokud neni prenos kompletni
0819   118C           00127         bcf PIR1,SSPIF
081A   0813           00128         movfw SSPBUF
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

081B   0008           00129         return
                      00130 #ELSE
                      00131         ; k praci pouziva TEMPW
                      00132 
                      00133         clrf TEMPW              ; vymazeme, sem budeme strkat dato co nam prijde...
                      00134         bcf MP3_SCLK    ; shodime SCLK
                      00135         bsf MP3_BSYNC   ; bude nasledovat prvni bit bytu, proto nastavime BSYNC
                      00136         bcf STATUS,C    ; nulujeme priznak CARRY, staci to delat jen na zacatku, protoze TEMW mame prazd
                            ny...
                      00137 
                      00138         ; 7. bit bytu
                      00139         bsf MP3_SCLK    ; nabezna hrana SCLK
                      00140         btfsc MP3_SO
                      00141         bsf STATUS,C    ; pokud je SO v jednice nastavime C...
                      00142         rlf TEMPW,f
                      00143         bcf MP3_SCLK    ; shodime SCLK
                      00144 
                      00145         bcf MP3_BSYNC
                      00146 
                      00147         ; 6. bit bytu
                      00148         bsf MP3_SCLK    ; nabezna hrana SCLK
                      00149         btfsc MP3_SO
                      00150         bsf STATUS,C    ; pokud je SO v jednice nastavime C...
                      00151         rlf TEMPW,f
                      00152         bcf MP3_SCLK    ; shodime SCLK  
                      00153 
                      00154         ; 5. bit bytu
                      00155         bsf MP3_SCLK    ; nabezna hrana SCLK
                      00156         btfsc MP3_SO
                      00157         bsf STATUS,C    ; pokud je SO v jednice nastavime C...
                      00158         rlf TEMPW,f
                      00159         bcf MP3_SCLK    ; shodime SCLK  
                      00160 
                      00161         ; 4. bit bytu
                      00162         bsf MP3_SCLK    ; nabezna hrana SCLK
                      00163         btfsc MP3_SO
                      00164         bsf STATUS,C    ; pokud je SO v jednice nastavime C...
                      00165         rlf TEMPW,f
                      00166         bcf MP3_SCLK    ; shodime SCLK  
                      00167 
                      00168         ; 3. bit bytu
                      00169         bsf MP3_SCLK    ; nabezna hrana SCLK
                      00170         btfsc MP3_SO
                      00171         bsf STATUS,C    ; pokud je SO v jednice nastavime C...
                      00172         rlf TEMPW,f
                      00173         bcf MP3_SCLK    ; shodime SCLK  
                      00174 
                      00175         ; 2. bit bytu
                      00176         bsf MP3_SCLK    ; nabezna hrana SCLK
                      00177         btfsc MP3_SO
                      00178         bsf STATUS,C    ; pokud je SO v jednice nastavime C...
                      00179         rlf TEMPW,f
                      00180         bcf MP3_SCLK    ; shodime SCLK  
                      00181 
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00182         ; 1. bit bytu
                      00183         bsf MP3_SCLK    ; nabezna hrana SCLK
                      00184         btfsc MP3_SO
                      00185         bsf STATUS,C    ; pokud je SO v jednice nastavime C...
                      00186         rlf TEMPW,f
                      00187         bcf MP3_SCLK    ; shodime SCLK  
                      00188 
                      00189         ; 0. bit bytu
                      00190         bsf MP3_SCLK    ; nabezna hrana SCLK
                      00191         btfsc MP3_SO
                      00192         bsf STATUS,C    ; pokud je SO v jednice nastavime C...
                      00193         rlf TEMPW,W
                      00194         bcf MP3_SCLK    ; shodime SCLK  
                      00195 
                      00196         ; movfw TEMPW ; tuto operaci jiz nemusime provadet, protoze jsme posledni rotaci hodily do W (rl
                            f TEMPW,W)
                      00197         return
                      00198 #ENDIF
                      00199 ;**********************************************************
                      00200 ; do TEMP1 dame adresu registru 
                      00201 ; do TEMP2 dame dolni slabiku zapisovaneho slova
                      00202 ; do TEMP3 dame horni slabiku zapisovaneho slova
081C                  00203 VS_WR_REG       ; zapise 16bitove slovo (TEMP2,TEMP3) do registru mp3 dekoderu (TEMP1)
                      00204                         ; 16bit dato se odesila od nejvyssiho bitu (15,14...8,7...1,0)
                      00205                         ; kde TEMP3 = bity 15-8 ; TEMP2 = bity 7-0
                      00206 ; pri praci pouziva TEMP1, TEMP2, TEMP3, TEMPW
081C   1C07           00207         btfss MP3_DREQ
081D   281C           00208         goto $-1
                      00209         ; v datasheetu k VS1001k o tom sice nic nepisou, v diskuzi na ikoras.iglu.cz mi bylo al porazeno
                            , 
                      00210         ; ze necekani na DREQ pri cteni/zapisu registru muze zpusobovat praskani n vystupu...
                      00211 
081E   1087           00212         bcf MP3_CS                      ; po SI posilame prikaz
081F   3002           00213         movlw b'00000010'       ; write
0820   2000           00214         call VS_WR_BYTE 
0821   0836           00215         movfw TEMP1                     ; adresa zapisovaneho registru
0822   2000           00216         call VS_WR_BYTE
0823   0838           00217         movfw TEMP3             ; horni slabika
0824   2000           00218         call VS_WR_BYTE
0825   0837           00219         movfw TEMP2             ; dolni slabika
0826   2000           00220         call VS_WR_BYTE
                      00221 
0827   20D8           00222         call DELAY_5us          ; pozor, prepise TEMP1
0828   1487           00223         bsf MP3_CS
0829   0008           00224         return
                      00225 ;**********************************************************
                      00226 ; do TEMP1 dame adresu registru 
                      00227 ; v TEMP2 nam vrati dolni slabiku precteneho slova
                      00228 ; v TEMP3 nam vrati horni slabiku precteneho slova
082A                  00229 VS_RD_REG       ; precte 16bitove slovo (TEMP3,TEMP2) z registru mp3 dekoderu (TEMP1)
                      00230                         ; kde TEMP3 = bity 15-8 ; TEMP2 = bity 7-0
                      00231 ; pri praci pouziva TEMP1, TEMP2, TEMP3, TEMPW
082A   1C07           00232         btfss MP3_DREQ
082B   282A           00233         goto $-1
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00234         ; v datasheetu k VS1001k o tom sice nic nepisou, v diskuzi na ikoras.iglu.cz mi bylo al porazeno
                            , 
                      00235         ; ze necekani na DREQ pri cteni/zapisu registru muze zpusobovat praskani n vystupu...
                      00236 
082C   1087           00237         bcf MP3_CS                      ; po SI posilame prikaz
082D   3003           00238         movlw b'00000011'       ; read
082E   2000           00239         call VS_WR_BYTE 
082F   0836           00240         movfw TEMP1                     ; adresa cteneho registru
0830   2000           00241         call VS_WR_BYTE
0831   200D           00242         call VS_RD_BYTE
0832   00B8           00243         movwf TEMP3             ; horni slabika
0833   200D           00244         call VS_RD_BYTE
0834   00B7           00245         movwf TEMP2             ; dolni slabika
                      00246 
0835   20D8           00247         call DELAY_5us          ; pozor, prepise TEMP1
0836   1487           00248         bsf MP3_CS
0837   0008           00249         return
                      00250 ;**********************************************************
0838                  00251 VS_SOFT_RESET_NO_PLUG   ; provede softwarovy reset dekoderu bez resetu pluginu
                      00252         PROG_PAGE_0
0838   118A               M                         bcf PCLATH,3
0839   120A               M                         bcf PCLATH,4
083A   22FF           00253         call DELAY_200ms
                      00254         PROG_PAGE_1
083B   158A               M                         bsf PCLATH,3
083C   120A               M                         bcf PCLATH,4
                      00255 
083D   3000           00256         movlw VSADDR_MODE
083E   00B6           00257         movwf TEMP1
083F   154D           00258         bsf VSREG_MODE_L,2      ; soft reset=1
0840   084D           00259         movfw VSREG_MODE_L
0841   00B7           00260         movwf TEMP2
0842   3000           00261         movlw .0                        ; MODE_H
0843   00B8           00262         movwf TEMP3
0844   201C           00263         call VS_WR_REG
                      00264 
                      00265         PROG_PAGE_0
0845   118A               M                         bcf PCLATH,3
0846   120A               M                         bcf PCLATH,4
0847   22F6           00266         call DELAY_2ms
                      00267         PROG_PAGE_1
0848   158A               M                         bsf PCLATH,3
0849   120A               M                         bcf PCLATH,4
084A   2088           00268         call VS_SEND_1024_NULL  
                      00269 
084B   114D           00270         bcf VSREG_MODE_L,2      ; soft reset=0
084C   0008           00271         return
                      00272 ;**********************************************************
084D                  00273 VS_SOFT_RESET   ; provede softwarovy reset dekoderu (pri zapnuti a pote po skonceni kazde mp3)
                      00274         PROG_PAGE_0
084D   118A               M                         bcf PCLATH,3
084E   120A               M                         bcf PCLATH,4
084F   22FF           00275         call DELAY_200ms
                      00276         PROG_PAGE_1
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0850   158A               M                         bsf PCLATH,3
0851   120A               M                         bcf PCLATH,4
                      00277 
0852   3000           00278         movlw VSADDR_MODE
0853   00B6           00279         movwf TEMP1
0854   154D           00280         bsf VSREG_MODE_L,2      ; soft reset=1
0855   084D           00281         movfw VSREG_MODE_L
0856   00B7           00282         movwf TEMP2
0857   3000           00283         movlw .0                        ; MODE_H
0858   00B8           00284         movwf TEMP3
0859   201C           00285         call VS_WR_REG
                      00286 
                      00287         PROG_PAGE_0
085A   118A               M                         bcf PCLATH,3
085B   120A               M                         bcf PCLATH,4
085C   22F6           00288         call DELAY_2ms
                      00289         PROG_PAGE_1
085D   158A               M                         bsf PCLATH,3
085E   120A               M                         bcf PCLATH,4
085F   2088           00290         call VS_SEND_1024_NULL  
                      00291 
0860   114D           00292         bcf VSREG_MODE_L,2      ; soft reset=0
                      00293 
0861   300A           00294         movlw VSADDR_AIADDR
0862   00B6           00295         movwf TEMP1
0863   3000           00296         movlw 0x00
0864   00B7           00297         movwf TEMP2     
0865   3042           00298         movlw 0x42
0866   00B8           00299         movwf TEMP3
0867   201C           00300         call VS_WR_REG                          ; nastavime zacatek uzivatelskeho programu (0x4200)
                      00301 
0868   300D           00302         movlw VSADDR_AICTRL0
0869   00B6           00303         movwf TEMP1
086A   3000           00304         movlw 0x00
086B   00B7           00305         movwf TEMP2     
086C   3000           00306         movlw 0x00
086D   00B8           00307         movwf TEMP3
086E   201C           00308         call VS_WR_REG                          ; resetujeme plugin
                      00309 
086F   300D           00310         movlw VSADDR_AICTRL0
0870   00B6           00311         movwf TEMP1
0871   302F           00312         movlw VS_LOUDNESS
0872   00B7           00313         movwf TEMP2     
0873   3000           00314         movlw 0x00
0874   00B8           00315         movwf TEMP3
0875   201C           00316         call VS_WR_REG                          ; nastavime pouzivany filter
                      00317 
0876   082F           00318         movfw VS_LOUDNESS
0877   39FF           00319         andlw h'FF'
0878   1D03           00320         btfss STATUS,Z
0879   0008           00321         return
                      00322 
087A   300A           00323         movlw VSADDR_AIADDR
087B   00B6           00324         movwf TEMP1
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

087C   01B7           00325         clrf TEMP2      
087D   01B8           00326         clrf TEMP3
087E   201C           00327         call VS_WR_REG                          ; pokud je filter 0, vypneme plugin
087F   0008           00328         return
                      00329 ;**********************************************************
0880                  00330 VS_SEND_32_NULL
0880   2097           00331         call WAIT_FOR_VSDREQ
0881   3020           00332         movlw .32
0882   00B7           00333         movwf TEMP2
                      00334         
0883   3000           00335         movlw .0
0884   2000           00336         call VS_WR_BYTE
0885   0BB7           00337         decfsz TEMP2,F
0886   2883           00338         goto $-3
0887   0008           00339         return
                      00340 ;**********************************************************
0888                  00341 VS_SEND_1024_NULL
0888   1487           00342         bsf MP3_CS                      ; po SI posilam data
0889   3020           00343         movlw .32
088A   00B6           00344         movwf TEMP1
                      00345 
088B   2080           00346         call VS_SEND_32_NULL
088C   0BB6           00347         decfsz TEMP1,F
088D   288B           00348         goto $-2
                      00349          
088E   0008           00350         return
                      00351 ;**********************************************************
088F                  00352 VS_SET_VOLUME
088F   300B           00353         movlw VSADDR_VOL
0890   00B6           00354         movwf TEMP1
                      00355 
0891   084F           00356         movfw VSREG_VOL_L
0892   00B7           00357         movwf TEMP2
0893   0850           00358         movfw VSREG_VOL_H
0894   00B8           00359         movwf TEMP3
0895   201C           00360         call VS_WR_REG
0896   0008           00361         return          
                      00362 ;**********************************************************
0897                  00363 WAIT_FOR_VSDREQ
0897   1C07           00364         btfss MP3_DREQ
0898   2897           00365         goto WAIT_FOR_VSDREQ
0899   0008           00366         return
                      00367 ;**********************************************************
089A                  00368 VS_END_BEEP
089A   2097           00369         call WAIT_FOR_VSDREQ
                      00370 
089B   3045           00371         movlw h'45'
089C   2000           00372         call VS_WR_BYTE
089D   3078           00373         movlw h'78'
089E   2000           00374         call VS_WR_BYTE
089F   3069           00375         movlw h'69'
08A0   2000           00376         call VS_WR_BYTE
08A1   3074           00377         movlw h'74'                     ; odeslanim tohoto kodu sinusovku ukoncime...
08A2   2000           00378         call VS_WR_BYTE
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

08A3   3000           00379         movlw .0
08A4   2000           00380         call VS_WR_BYTE
08A5   3000           00381         movlw .0
08A6   2000           00382         call VS_WR_BYTE
08A7   3000           00383         movlw .0
08A8   2000           00384         call VS_WR_BYTE
08A9   3000           00385         movlw .0
08AA   2000           00386         call VS_WR_BYTE
                      00387 
08AB   0008           00388         return
                      00389 ;**********************************************************
08AC                  00390 VS_BEEP
                      00391 ;       call VS_SOFT_RESET
                      00392 ;       call WAIT_FOR_VSDREQ
                      00393 
08AC   1487           00394         bsf MP3_CS                      ; po SI posilam data
08AD   3053           00395         movlw h'53'
08AE   2000           00396         call VS_WR_BYTE
08AF   30EF           00397         movlw h'EF'
08B0   2000           00398         call VS_WR_BYTE
08B1   306E           00399         movlw h'6E'
08B2   2000           00400         call VS_WR_BYTE
08B3   303E           00401         movlw .62                       ; ctyr bytova testovaci sekvence. Tento posledni byte znamena, 
08B4   2000           00402         call VS_WR_BYTE         ; ze s pouzitim vzorkovaci frekvence 16kHz bude generovan ton 1kHz
08B5   3000           00403         movlw .0
08B6   2000           00404         call VS_WR_BYTE
08B7   3000           00405         movlw .0
08B8   2000           00406         call VS_WR_BYTE
08B9   3000           00407         movlw .0
08BA   2000           00408         call VS_WR_BYTE
08BB   3000           00409         movlw .0                        ; testovaci kod musi byt nasledovan 4 nulamy
08BC   2000           00410         call VS_WR_BYTE
                      00411 
08BD   0008           00412         return
                      00413 ;**********************************************************
08BE                  00414 VS_INIT
08BE   01CD           00415         clrf VSREG_MODE_L
08BF   01CE           00416         clrf VSREG_STATUS_L
                      00417 
08C0   3003           00418         movlw .3
08C1   00BA           00419         movwf TEMP5
08C2   2038           00420         call VS_SOFT_RESET_NO_PLUG              ; resetujeme
08C3   208F           00421         call VS_SET_VOLUME                              ; nastavime hlasitost
08C4   0BBA           00422         decfsz TEMP5,f
08C5   28C2           00423         goto $-3
                      00424         ; pro jistotu jej resetuji 5x za sebou...
                      00425         
08C6   3003           00426         movlw .3
08C7   00BA           00427         movwf TEMP5
08C8                  00428 VS_INIT_BEEP
08C8   20AC           00429         call VS_BEEP
                      00430         PROG_PAGE_0
08C9   118A               M                         bcf PCLATH,3
08CA   120A               M                         bcf PCLATH,4
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

08CB   22FF           00431         call DELAY_200ms
                      00432         PROG_PAGE_1
08CC   158A               M                         bsf PCLATH,3
08CD   120A               M                         bcf PCLATH,4
08CE   209A           00433         call VS_END_BEEP
                      00434         PROG_PAGE_0
08CF   118A               M                         bcf PCLATH,3
08D0   120A               M                         bcf PCLATH,4
08D1   22FF           00435         call DELAY_200ms
                      00436         PROG_PAGE_1
08D2   158A               M                         bsf PCLATH,3
08D3   120A               M                         bcf PCLATH,4
08D4   0BBA           00437         decfsz TEMP5,f
08D5   28C8           00438         goto VS_INIT_BEEP
                      00439         ; pri initu 3x za sebou pipneme (asi pro to ze neposimal uvodni nuly, tak v praxi pipne jenom 2x
                             :)
                      00440 
08D6   2038           00441         call VS_SOFT_RESET_NO_PLUG              ; resetujeme
                      00442 
08D7   0008           00443         return
                      00444 ;**********************************************************
08D8                  00445 DELAY_5us
                      00446         ; pouziva TEMP1
                      00447         ; (Fosc = 20 MHz , instr. cyklus= 0.20 us) 5us / 0.20 us = 25 instrukcnich cyklu
                      00448         ; (Fosc = 16 MHz , instr. cyklus= 0.25 us) 5us / 0.25 us = 20 instrukcnich cyklu
                      00449 ;Variable: TMP0
                      00450 ;Delay 25 cycles
08D8   3008           00451         MOVLW 0x08  ;8 DEC
08D9   00B6           00452         MOVWF TEMP1
08DA   0BB6           00453         DECFSZ TEMP1,F
08DB   28DA           00454         GOTO $-1
                      00455 ;End of Delay
08DC   0008           00456         return
                      00457 ;**********************************************************
                      00083         include "commands.asm"  ; prni cast podprogramu na obsluhu prikazu (od ridiciho procesoru)
                      00001 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
                      00002 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
                      00003 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
                      00004 ; tady jsou procedury resici jednotlive prikazy
                      00005 ; Pokud je v zasobniku prikaz pro nejakou proceduru, musi tato procedura nastavit byt STAV_PRIKAZU do 1 
                            (i kdyz treba nema vsechny parametry)
                      00006 ; Pokud procedura najde svuj prikaz a jsou prijate vsechny parametry, musi odeslat nejakou odpoved po US
                            ARTu a smazat reg. PRIJATYCH_DAT!!!
                      00007 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
                      00008 ; CAST 1
08DD                  00009 CEKEJ_PRIKAZ                                    ; ceka dokud nedostaneme nejaky prikaz
08DD   0873           00010         movfw PRIJATYCH_DAT
08DE   39FF           00011         andlw h'FF'
08DF   1903           00012         btfsc STATUS,Z                          ; koukneme se zda prisel nejaky prikaz...
08E0   28DD           00013         goto CEKEJ_PRIKAZ
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

08E1   0008           00014         return
                      00015 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
08E2                  00016 PRIKAZ_02h                                              ; 02h - vrat oddily se systemem FAT32
08E2   0878           00017         movfw 0x078                                     ; prvni byte zasobniku prikazu
08E3   3C02           00018         sublw h'02'                                     
08E4   1D03           00019         btfss STATUS,Z
08E5   0008           00020         return                                          ; nebyl prijat prikaz 02h
08E6   1475           00021         bsf STAV_PRIKAZU,0                      ; mame tu prikaz 02h, nastavime byt STAV_PRIKAZU
08E7   0873           00022         movfw PRIJATYCH_DAT
08E8   3C01           00023         sublw .1                                        ; pro prikaz 02h museji prijit 2 byty (prikaz + 
                            1 parametr)
08E9   1803           00024         btfsc STATUS,C
08EA   0008           00025         return                                          ; jeste nemame vsechny parametry
                      00026         ; Prisel prikaz 02h s jednim parametrem (vrat oddily se systemem FAT32)
                      00027 
                      00028         PROG_PAGE_2
08EB   118A               M                         bcf PCLATH,3
08EC   160A               M                         bsf PCLATH,4
08ED   2000           00029         call SCAN_MBR                           ; najdeme oddily s FAT32 a jejich seznam dame do bufferu
                             2
                      00030         PROG_PAGE_1     
08EE   158A               M                         bsf PCLATH,3
08EF   120A               M                         bcf PCLATH,4
08F0   0879           00031         movfw 0x079                                     ; parametr prikazu 02h (cislo svazku, jehoz para
                            metry chceme vratit)
08F1   3903           00032         andlw b'00000011'                       ; parametr musi byt v rozsahu 0-3
08F2   00B6           00033         movwf TEMP1
08F3   1003           00034         bcf STATUS,C
08F4   0DB6           00035         rlf TEMP1,F
08F5   0DB6           00036         rlf TEMP1,F
08F6   0DB6           00037         rlf TEMP1,F
08F7   0D36           00038         rlf TEMP1,W                                     ; parametr vynasobime 16
08F8   3E10           00039         addlw 0x10                                      ; buffer 2 je v bance 2 na adrese 0x10
08F9   0084           00040         movwf FSR
                      00041         INDF_BANK_2
08FA   1783               M                         bsf STATUS,IRP    
08FB   3010           00042         movlw .16                                       ; budeme odesilat 16 bytu
08FC   00B6           00043         movwf TEMP1
08FD                  00044 PRIKAZ_02h__ODESILANI_ODDILU
08FD   0800           00045         movfw INDF
                      00046         PROG_PAGE_0
08FE   118A               M                         bcf PCLATH,3
08FF   120A               M                         bcf PCLATH,4
0900   229A           00047         call WR_USART
                      00048         PROG_PAGE_1
0901   158A               M                         bsf PCLATH,3
0902   120A               M                         bcf PCLATH,4
0903   0A84           00049         incf FSR,F
0904   0BB6           00050         decfsz TEMP1,F
0905   28FD           00051         goto PRIKAZ_02h__ODESILANI_ODDILU
0906   01F3           00052         clrf PRIJATYCH_DAT
0907   0008           00053         return
                      00054 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            XXXXXXXXXXXXXXXXXXXXX
0908                  00055 PRIKAZ_04h                                              ; 04h  vrat velikost clusteru
0908   0878           00056         movfw 0x078                                     ; prvni byte zasobniku prikazu
0909   3C04           00057         sublw h'04'                                     
090A   1D03           00058         btfss STATUS,Z
090B   0008           00059         return                                          ; nebyl prijat prikaz 04h
090C   1475           00060         bsf STAV_PRIKAZU,0                      ; mame tu prikaz 04h, nastavime byt STAV_PRIKAZU
                      00061         ; pro prikaz 04h nejsou definovany zadne parametry, proto jiz nic jineho netestujeme
                      00062 
090D   084C           00063         movfw CLUSTER_SIZE
                      00064         PROG_PAGE_0
090E   118A               M                         bcf PCLATH,3
090F   120A               M                         bcf PCLATH,4
0910   229A           00065         call WR_USART
                      00066         PROG_PAGE_1
0911   158A               M                         bsf PCLATH,3
0912   120A               M                         bcf PCLATH,4
0913   01F3           00067         clrf PRIJATYCH_DAT                      ; vyprazdnime zasobnik
0914   0008           00068         return
                      00069 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
0915                  00070 PRIKAZ_05h                                              ; 05h  vrat zaznam v adresari
0915   0878           00071         movfw 0x078                                     ; prvni byte zasobniku prikazu
0916   3C05           00072         sublw h'05'
0917   1D03           00073         btfss STATUS,Z
0918   0008           00074         return                                          ; nebyl prijat prikaz 05h
0919   1475           00075         bsf STAV_PRIKAZU,0                      ; mame tu prikaz 05h, nastavime byt STAV_PRIKAZU
091A   0873           00076         movfw PRIJATYCH_DAT
091B   3C06           00077         sublw .6                                        ; pro prikaz 05h musi prijit 7 bytu (prikaz + 6b
                            ytu parametr)
091C   1803           00078         btfsc STATUS,C
091D   0008           00079         return                                          ; jeste nemame vsechny parametry
                      00080         ; Prisel prikaz 05h s 6bytovym parametrem 
                      00081 
091E   0879           00082         movfw 0x079                                     ; nejnizsi cast clusteru adresare
091F   00BC           00083         movwf CLUSTER1
0920   087A           00084         movfw 0x07A
0921   00BD           00085         movwf CLUSTER2
0922   087B           00086         movfw 0x07B
0923   00BE           00087         movwf CLUSTER3
0924   087C           00088         movfw 0x07C
0925   00BF           00089         movwf CLUSTER4
0926   2327           00090         call PRVNI_CL_ADRESARE
                      00091 
0927   1C3B           00092         btfss POZICE,0
0928   292F           00093         goto PRIKAZ_05h_PAR1_OK
                      00094 
0929                  00095 PRIKAZ_05h_PAR1_NOT_OK
                      00096         INDF_BANK_2
0929   1783               M                         bsf STATUS,IRP    
092A   3010           00097         movlw 0x10                                      ; 1. byte bufferu 2
092B   0084           00098         movwf FSR
092C   3081           00099         movlw h'81'                                     ; jako prvni byte odpovedi dame 81h (Zadany clus
                            ter neobsahuje adresar)
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

092D   0080           00100         movwf INDF
092E   293D           00101         goto PRIKAZ_05h_KONEC
092F                  00102 PRIKAZ_05h_PAR1_OK
                      00103 
092F   087D           00104         movfw 0x07D
0930   00E0           00105         movwf ZAZNAM1
0931   087E           00106         movfw 0x07E
0932   00E1           00107         movwf ZAZNAM2
                      00108 
0933   2361           00109         call SKOC_NA_ZAZNAM
0934   1C3B           00110         btfss POZICE,0
0935   293C           00111         goto PRIKAZ_05h_PAR2_OK
                      00112 
0936                  00113 PRIKAZ_05h_PAR2_NOT_OK
                      00114         INDF_BANK_2
0936   1783               M                         bsf STATUS,IRP    
0937   3010           00115         movlw 0x10                                      ; 1. byte bufferu 2
0938   0084           00116         movwf FSR
0939   3080           00117         movlw h'80'                                     ; jako prvni byte odpovedi dame 80h (Zadany zazn
                            am mimo rozsah)
093A   0080           00118         movwf INDF
093B   293D           00119         goto PRIKAZ_05h_KONEC
093C                  00120 PRIKAZ_05h_PAR2_OK
                      00121 
093C   23E1           00122         call FILE_INFO
                      00123 
093D                  00124 PRIKAZ_05h_KONEC
                      00125         ; At uz bylo v zaznamu cokoli, odesleme 16 bytu z BUFFERU 2
093D   3010           00126         movlw .16
093E   00B6           00127         movwf TEMP1
                      00128         PROG_PAGE_0
093F   118A               M                         bcf PCLATH,3
0940   120A               M                         bcf PCLATH,4
0941   22C5           00129         call ODESLI_BUFFER2                     ; odesleme si zaznam o souboru  
                      00130         PROG_PAGE_1
0942   158A               M                         bsf PCLATH,3
0943   120A               M                         bcf PCLATH,4
                      00131 
0944   01F3           00132         clrf PRIJATYCH_DAT                      ; vyprazdnime zasobnik prikazu
0945   0008           00133         return
                      00134 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
0946                  00135 PRIKAZ_06h                                              ; 06h  vrat cislo dalsiho clusteru v alokacnim 
                            retezu
0946   0878           00136         movfw 0x078                                     ; prvni byte zasobniku prikazu
0947   3C06           00137         sublw h'06'                                     
0948   1D03           00138         btfss STATUS,Z
0949   0008           00139         return                                          ; nebyl prijat prikaz 06h
094A   1475           00140         bsf STAV_PRIKAZU,0                      ; mame tu prikaz 06h, nastavime byt STAV_PRIKAZU
094B   0873           00141         movfw PRIJATYCH_DAT
094C   3C04           00142         sublw .4                                        ; pro prikaz 06h museji prijit 5 bytu (prikaz + 
                            4byty parametr)
094D   1803           00143         btfsc STATUS,C
094E   0008           00144         return                                          ; jeste nemame vsechny parametry
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00145         ; Prisel prikaz 06h s 4bytovym parametrem 
                      00146 
094F   0879           00147         movfw 0x079                                     ; nejnizsi cast clusteru
0950   00BC           00148         movwf CLUSTER1
0951   087A           00149         movfw 0x07A
0952   00BD           00150         movwf CLUSTER2
0953   087B           00151         movfw 0x07B
0954   00BE           00152         movwf CLUSTER3
0955   087C           00153         movfw 0x07C
0956   00BF           00154         movwf CLUSTER4
                      00155         PROG_PAGE_0
0957   118A               M                         bcf PCLATH,3
0958   120A               M                         bcf PCLATH,4
0959   24EB           00156         call NEXT_CLUSTER
095A   083B           00157         movfw POZICE                            ; pokud POZICE = 00h, je vse v poradku (vratime c. dalsi
                            ho clusteru v retezci). 
                      00158                                                                 ; Pokud POZICE = FFh byl predany cluster
                             posledni v retezu, nebo byl prazdny...
095B   229A           00159         call WR_USART
095C   083C           00160         movfw CLUSTER1
095D   229A           00161         call WR_USART
095E   083D           00162         movfw CLUSTER2
095F   229A           00163         call WR_USART
0960   083E           00164         movfw CLUSTER3
0961   229A           00165         call WR_USART
0962   083F           00166         movfw CLUSTER4
0963   229A           00167         call WR_USART
                      00168         PROG_PAGE_1
0964   158A               M                         bsf PCLATH,3
0965   120A               M                         bcf PCLATH,4
                      00169         
0966   01F3           00170         clrf PRIJATYCH_DAT                      ; vyprazdnime zasobnik prikazu
0967   0008           00171         return
                      00172 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
0968                  00173 PRIKAZ_07h                                              ; 07h  cti cluster
0968   0878           00174         movfw 0x078                                     ; prvni byte zasobniku prikazu
0969   3C07           00175         sublw h'07'                                     
096A   1D03           00176         btfss STATUS,Z
096B   0008           00177         return                                          ; nebyl prijat prikaz 07h
096C   1475           00178         bsf STAV_PRIKAZU,0                      ; mame tu prikaz 07h, nastavime byt STAV_PRIKAZU
096D   0873           00179         movfw PRIJATYCH_DAT
096E   3C04           00180         sublw .4                                        ; pro prikaz 07h museji prijit 5 bytu (prikaz + 
                            4byty parametr)
096F   1803           00181         btfsc STATUS,C
0970   0008           00182         return                                          ; jeste nemame vsechny parametry
                      00183         ; Prisel prikaz 07h s 4bytovym parametrem 
                      00184 
0971   0879           00185         movfw 0x079                                     ; nejnizsi cast clusteru
0972   00BC           00186         movwf CLUSTER1
0973   087A           00187         movfw 0x07A
0974   00BD           00188         movwf CLUSTER2
0975   087B           00189         movfw 0x07B
0976   00BE           00190         movwf CLUSTER3
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 80


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0977   087C           00191         movfw 0x07C
0978   00BF           00192         movwf CLUSTER4
0979   01BB           00193         clrf POZICE
                      00194         PROG_PAGE_0
097A   118A               M                         bcf PCLATH,3
097B   120A               M                         bcf PCLATH,4
097C   2488           00195         call CLUSTER_TO_LBA                     ; zjistime si skutecnou polohu pozadovaneho clusteru na 
                            disku...
097D   084C           00196         movfw CLUSTER_SIZE
097E   00A6           00197         movwf SECTOR_C                          ; tentokrat cteme cely cluster a ne sector
097F   23E1           00198         call READ_SECTOR;S
                      00199         PROG_PAGE_1
0980   158A               M                         bsf PCLATH,3
0981   120A               M                         bcf PCLATH,4
                      00200 
0982   084C           00201         movfw CLUSTER_SIZE
0983   00B7           00202         movwf TEMP2                                     ; kolik sektoru budeme odesilat
                      00203 
0984                  00204 PRIKAZ_07h__ODESLI_SECTOR
0984   3000           00205         movlw .0                                        ; budeme odesilat cely sector (256slov = 512bytu
                            )
0985   00B6           00206         movwf TEMP1
                      00207         PROG_PAGE_0
0986   118A               M                         bcf PCLATH,3
0987   120A               M                         bcf PCLATH,4
0988   22A2           00208         call ODESLI_DATA
                      00209         PROG_PAGE_1
0989   158A               M                         bsf PCLATH,3
098A   120A               M                         bcf PCLATH,4
098B   0BB7           00210         decfsz TEMP2,F                          ; a to tolikrat, kolik ma cluster sektroru
098C   2984           00211         goto PRIKAZ_07h__ODESLI_SECTOR
                      00212         
098D   01F3           00213         clrf PRIJATYCH_DAT                      ; vyprazdnime zasobnik prikazu
098E   0008           00214         return
                      00215 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
098F                  00216 PRIKAZ_08h                                              ; 08h  zjisti velikost souboru
098F   0878           00217         movfw 0x078                                     ; prvni byte zasobniku prikazu
0990   3C08           00218         sublw h'08'
0991   1D03           00219         btfss STATUS,Z
0992   0008           00220         return                                          ; nebyl prijat prikaz 08h
0993   1475           00221         bsf STAV_PRIKAZU,0                      ; mame tu prikaz 08h, nastavime byt STAV_PRIKAZU
0994   0873           00222         movfw PRIJATYCH_DAT
0995   3C06           00223         sublw .6                                        ; pro prikaz 08h musi prijit 7 bytu (prikaz + 6b
                            ytu parametr)
0996   1803           00224         btfsc STATUS,C
0997   0008           00225         return                                          ; jeste nemame vsechny parametry
                      00226         ; Prisel prikaz 08h s 6bytovym parametrem 
                      00227 
0998   0879           00228         movfw 0x079                                     ; nejnizsi cast clusteru adresare
0999   00BC           00229         movwf CLUSTER1
099A   087A           00230         movfw 0x07A
099B   00BD           00231         movwf CLUSTER2
099C   087B           00232         movfw 0x07B
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 81


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

099D   00BE           00233         movwf CLUSTER3
099E   087C           00234         movfw 0x07C
099F   00BF           00235         movwf CLUSTER4
09A0   2327           00236         call PRVNI_CL_ADRESARE
                      00237 
09A1   1C3B           00238         btfss POZICE,0
09A2   29A6           00239         goto PRIKAZ_08h_PAR1_OK
                      00240 
09A3                  00241 PRIKAZ_08h_PAR1_NOT_OK
09A3   3081           00242         movlw h'81'                                     ; jako prvni byte odpovedi dame 81h (Zadany clus
                            ter neobsahuje adresar)
09A4   00B6           00243         movwf TEMP1
09A5   29B2           00244         goto PRIKAZ_08h_KONEC
09A6                  00245 PRIKAZ_08h_PAR1_OK
                      00246 
09A6   087D           00247         movfw 0x07D
09A7   00E0           00248         movwf ZAZNAM1
09A8   087E           00249         movfw 0x07E
09A9   00E1           00250         movwf ZAZNAM2
                      00251 
09AA   2361           00252         call SKOC_NA_ZAZNAM
09AB   1C3B           00253         btfss POZICE,0
09AC   29B0           00254         goto PRIKAZ_08h_PAR2_OK
                      00255 
09AD                  00256 PRIKAZ_08h_PAR2_NOT_OK
09AD   3080           00257         movlw h'80'                                     ; jako prvni byte odpovedi dame 80h (Zadany zazn
                            am mimo rozsah)
09AE   00B6           00258         movwf TEMP1
09AF   29B2           00259         goto PRIKAZ_08h_KONEC
09B0                  00260 PRIKAZ_08h_PAR2_OK
                      00261 
09B0   245C           00262         call FILE_SIZE
09B1   01B6           00263         clrf TEMP1
                      00264 
09B2                  00265 PRIKAZ_08h_KONEC
                      00266         ; At uz bylo v zaznamu cokoli, odesleme 4 byty z BUFFERU 2
09B2   0836           00267         movfw TEMP1
                      00268         PROG_PAGE_0
09B3   118A               M                         bcf PCLATH,3
09B4   120A               M                         bcf PCLATH,4
09B5   229A           00269         call WR_USART
09B6   3004           00270         movlw .4
09B7   00B6           00271         movwf TEMP1
09B8   22C5           00272         call ODESLI_BUFFER2                     ; odesleme si zaznam o souboru  
                      00273         PROG_PAGE_1
09B9   158A               M                         bsf PCLATH,3
09BA   120A               M                         bcf PCLATH,4
                      00274 
09BB   01F3           00275         clrf PRIJATYCH_DAT                      ; vyprazdnime zasobnik prikazu
09BC   0008           00276         return
                      00277 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
09BD                  00278 PRIKAZ_09h                                              ; 09h  hledej zaznam
09BD   0878           00279         movfw 0x078                                     ; prvni byte zasobniku prikazu
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 82


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

09BE   3C09           00280         sublw h'09'
09BF   1D03           00281         btfss STATUS,Z
09C0   0008           00282         return                                          ; nebyl prijat prikaz 09h
09C1   1475           00283         bsf STAV_PRIKAZU,0                      ; mame tu prikaz 09h, nastavime byt STAV_PRIKAZU
09C2   0873           00284         movfw PRIJATYCH_DAT
09C3   3C07           00285         sublw .7                                        ; pro prikaz 09h musi prijit 8 bytu (prikaz + 7b
                            ytu parametr)
09C4   1803           00286         btfsc STATUS,C
09C5   0008           00287         return                                          ; jeste nemame vsechny parametry
                      00288         ; Prisel prikaz 09h s 5bytovym parametrem 
                      00289 
09C6   0879           00290         movfw 0x079                                     ; nejnizsi cast clusteru adresare
09C7   00BC           00291         movwf CLUSTER1
09C8   087A           00292         movfw 0x07A
09C9   00BD           00293         movwf CLUSTER2
09CA   087B           00294         movfw 0x07B
09CB   00BE           00295         movwf CLUSTER3
09CC   087C           00296         movfw 0x07C
09CD   00BF           00297         movwf CLUSTER4
09CE   2327           00298         call PRVNI_CL_ADRESARE
                      00299 
09CF   183B           00300         btfsc POZICE,0
09D0   29E1           00301         goto PRIKAZ_09h_SPATNY_PAR
                      00302 
09D1   0879           00303         movfw 0x079                                     ; nejnizsi cast clusteru adresare
09D2   00DA           00304         movwf HL_ADR_CL1
09D3   087A           00305         movfw 0x07A
09D4   00DB           00306         movwf HL_ADR_CL2
09D5   087B           00307         movfw 0x07B
09D6   00DC           00308         movwf HL_ADR_CL3
09D7   087C           00309         movfw 0x07C
09D8   00DD           00310         movwf HL_ADR_CL4
                      00311 
09D9   087D           00312         movfw 0x07D
09DA   00E0           00313         movwf ZAZNAM1
09DB   087E           00314         movfw 0x07E
09DC   00E1           00315         movwf ZAZNAM2
                      00316 
09DD   087F           00317         movfw 0x07F
09DE   00D9           00318         movwf HL_PARAMETRY
                      00319 
09DF   2479           00320         call HLEDEJ             ; mocna procedura, ktera man podle zadanych parametru vyhleda pozadovany
                             zaznam 
                      00321                                         ; a umisti jej do bufferu2 na offset 32 (od zacatku bufferu)
09E0   29E7           00322         goto PRIKAZ_09h_KONEC
09E1                  00323 PRIKAZ_09h_SPATNY_PAR
                      00324         BANK_2
09E1   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
09E2   1283               M                 bcf     STATUS,RP0    
09E3   3081           00325         movlw h'81'
09E4   00B0           00326         movwf 0x130
                      00327         BANK_0
09E5   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
09E6   1283               M                 bcf     STATUS,RP0    
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 83


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

09E7                  00328 PRIKAZ_09h_KONEC
09E7   3012           00329         movlw .18
09E8   00B6           00330         movwf TEMP1     
                      00331 
                      00332         PROG_PAGE_0
09E9   118A               M                         bcf PCLATH,3
09EA   120A               M                         bcf PCLATH,4
09EB   22BB           00333         call ODESLI_BUFF2_HIGH
                      00334         PROG_PAGE_1
09EC   158A               M                         bsf PCLATH,3
09ED   120A               M                         bcf PCLATH,4
                      00335 
09EE   01F3           00336         clrf PRIJATYCH_DAT                      ; vyprazdnime zasobnik prikazu
09EF   0008           00337         return
                      00338 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
09F0                  00339 PRIKAZ_0Ah                                              ; 0Ah  precti dlouhe jmeno
09F0   0878           00340         movfw 0x078                                     ; prvni byte zasobniku prikazu
09F1   3C0A           00341         sublw h'0A'
09F2   1D03           00342         btfss STATUS,Z
09F3   0008           00343         return                                          ; nebyl prijat prikaz 0Ah
09F4   1475           00344         bsf STAV_PRIKAZU,0                      ; mame tu prikaz 0Ah, nastavime byt STAV_PRIKAZU
09F5   0873           00345         movfw PRIJATYCH_DAT
09F6   3C06           00346         sublw .6                                        ; pro prikaz 0Ah musi prijit 7 bytu (prikaz + 6b
                            ytu parametr)
09F7   1803           00347         btfsc STATUS,C
09F8   0008           00348         return                                          ; jeste nemame vsechny parametry
                      00349         ; Prisel prikaz 0Ah s 6bytovym parametrem 
                      00350 
09F9   0879           00351         movfw 0x079                                     ; nejnizsi cast clusteru adresare
09FA   00DA           00352         movwf HL_ADR_CL1
09FB   00BC           00353         movwf CLUSTER1
09FC   087A           00354         movfw 0x07A
09FD   00DB           00355         movwf HL_ADR_CL2
09FE   00BD           00356         movwf CLUSTER2
09FF   087B           00357         movfw 0x07B
0A00   00DC           00358         movwf HL_ADR_CL3
0A01   00BE           00359         movwf CLUSTER3
0A02   087C           00360         movfw 0x07C
0A03   00DD           00361         movwf HL_ADR_CL4
0A04   00BF           00362         movwf CLUSTER4
0A05   2327           00363         call PRVNI_CL_ADRESARE
                      00364 
0A06   1C3B           00365         btfss POZICE,0
0A07   2A0E           00366         goto PRIKAZ_0Ah_PAR1_OK
                      00367 
0A08                  00368 PRIKAZ_0Ah_PAR1_NOT_OK
                      00369         INDF_BANK_2
0A08   1783               M                         bsf STATUS,IRP    
0A09   3010           00370         movlw 0x10                                      ; 1. byte bufferu 2
0A0A   0084           00371         movwf FSR
0A0B   3081           00372         movlw h'81'                                     ; jako prvni byte odpovedi dame 81h (Zadany clus
                            ter neobsahuje adresar)
0A0C   00BB           00373         movwf POZICE
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 84


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A0D   2A13           00374         goto PRIKAZ_0Ah_KONEC
0A0E                  00375 PRIKAZ_0Ah_PAR1_OK
0A0E   087D           00376         movfw 0x07D
0A0F   00E0           00377         movwf ZAZNAM1
0A10   087E           00378         movfw 0x07E
0A11   00E1           00379         movwf ZAZNAM2
                      00380 
0A12   2659           00381         call LONG_NAME
0A13                  00382 PRIKAZ_0Ah_KONEC
                      00383         PROG_PAGE_0
0A13   118A               M                         bcf PCLATH,3
0A14   120A               M                         bcf PCLATH,4
0A15   083B           00384         movfw POZICE
0A16   229A           00385         call WR_USART   
                      00386         ; At uz bylo v zaznamu cokoli, odesleme 65 bytu z BUFFERU 2
0A17   3041           00387         movlw .65
0A18   00B6           00388         movwf TEMP1
0A19   22C5           00389         call ODESLI_BUFFER2                     ; odesleme si zaznam o souboru  
                      00390         PROG_PAGE_1
0A1A   158A               M                         bsf PCLATH,3
0A1B   120A               M                         bcf PCLATH,4
                      00391 
0A1C   01F3           00392         clrf PRIJATYCH_DAT                      ; vyprazdnime zasobnik prikazu
0A1D   0008           00393         return
                      00394 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
0A1E                  00395 PRIKAZ_80h                                              ; 80h  hraj mp3 soubor
0A1E   0878           00396         movfw 0x078                                     ; prvni byte zasobniku prikazu
0A1F   3C80           00397         sublw h'80'
0A20   1D03           00398         btfss STATUS,Z
0A21   0008           00399         return                                          ; nebyl prijat prikaz 80h
0A22   1475           00400         bsf STAV_PRIKAZU,0                      ; mame tu prikaz 80h, nastavime byt STAV_PRIKAZU
0A23   0873           00401         movfw PRIJATYCH_DAT
0A24   3C06           00402         sublw .6                                        ; pro prikaz 80h musi prijit 7 bytu (prikaz + 6b
                            ytu parametr)
0A25   1803           00403         btfsc STATUS,C
0A26   0008           00404         return                                          ; jeste nemame vsechny parametry
                      00405         ; Prisel prikaz 80h s 6bytovym parametrem 
                      00406 
0A27   0879           00407         movfw 0x079                                     ; nejnizsi cast clusteru adresare
0A28   00BC           00408         movwf CLUSTER1
0A29   087A           00409         movfw 0x07A
0A2A   00BD           00410         movwf CLUSTER2
0A2B   087B           00411         movfw 0x07B
0A2C   00BE           00412         movwf CLUSTER3
0A2D   087C           00413         movfw 0x07C
0A2E   00BF           00414         movwf CLUSTER4
0A2F   2327           00415         call PRVNI_CL_ADRESARE
                      00416 
0A30   1C3B           00417         btfss POZICE,0
0A31   2A38           00418         goto PRIKAZ_80h_PAR1_OK
                      00419 
0A32                  00420 PRIKAZ_80h_PAR1_NOT_OK
                      00421         INDF_BANK_2
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 85


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A32   1783               M                         bsf STATUS,IRP    
0A33   3010           00422         movlw 0x10                                      ; 1. byte bufferu 2
0A34   0084           00423         movwf FSR
0A35   3081           00424         movlw h'81'                                     ; jako prvni byte odpovedi dame 81h (Zadany clus
                            ter neobsahuje adresar)
0A36   0080           00425         movwf INDF
0A37   2A7F           00426         goto PRIKAZ_80h_KONEC
0A38                  00427 PRIKAZ_80h_PAR1_OK
                      00428 
0A38   087D           00429         movfw 0x07D
0A39   00E0           00430         movwf ZAZNAM1
0A3A   087E           00431         movfw 0x07E
0A3B   00E1           00432         movwf ZAZNAM2
                      00433 
0A3C   2361           00434         call SKOC_NA_ZAZNAM
0A3D   1C3B           00435         btfss POZICE,0
0A3E   2A45           00436         goto PRIKAZ_80h_PAR2_OK
                      00437 
0A3F                  00438 PRIKAZ_80h_PAR2_NOT_OK
                      00439         INDF_BANK_2
0A3F   1783               M                         bsf STATUS,IRP    
0A40   3010           00440         movlw 0x10                                      ; 1. byte bufferu 2
0A41   0084           00441         movwf FSR
0A42   3080           00442         movlw h'80'                                     ; jako prvni byte odpovedi dame 80h (Zadany zazn
                            am mimo rozsah)
0A43   0080           00443         movwf INDF
0A44   2A7F           00444         goto PRIKAZ_80h_KONEC
0A45                  00445 PRIKAZ_80h_PAR2_OK
                      00446 
0A45   23E1           00447         call FILE_INFO
                      00448 
                      00449         INDF_BANK_2
0A46   1783               M                         bsf STATUS,IRP    
0A47   3010           00450         movlw 0x10                                      ; 1. byte bufferu 2
0A48   0084           00451         movwf FSR
0A49   0800           00452         movfw INDF
0A4A   3C06           00453         sublw h'06'                                     ; pokud na zadanem miste se nachazi soubor s pri
                            ponou mp3...
0A4B   1D03           00454         btfss STATUS,Z
0A4C   2A7F           00455         goto PRIKAZ_80h_KONEC
                      00456                         
                      00457         ; ...nastavime jej jako prehravany soubor.
0A4D   301C           00458         movlw 0x1C                                      ; 13. byte bufferu 2
0A4E   0084           00459         movwf FSR
0A4F   0800           00460         movfw INDF
0A50   00E9           00461         movwf PREH_DATA_CL1
0A51   00BC           00462         movwf CLUSTER1
0A52   0A84           00463         incf FSR,f
0A53   0800           00464         movfw INDF
0A54   00EA           00465         movwf PREH_DATA_CL2
0A55   00BD           00466         movwf CLUSTER2
0A56   0A84           00467         incf FSR,f
0A57   0800           00468         movfw INDF
0A58   00EB           00469         movwf PREH_DATA_CL3
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 86


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A59   00BE           00470         movwf CLUSTER3
0A5A   0A84           00471         incf FSR,f
0A5B   0800           00472         movfw INDF
0A5C   00EC           00473         movwf PREH_DATA_CL4
0A5D   00BF           00474         movwf CLUSTER4
                      00475 
                      00476         PROG_PAGE_0
0A5E   118A               M                         bcf PCLATH,3
0A5F   120A               M                         bcf PCLATH,4
0A60   2573           00477         call ZJISTI_FRAGMENT
                      00478         PROG_PAGE_1
0A61   158A               M                         bsf PCLATH,3
0A62   120A               M                         bcf PCLATH,4
                      00479 ; v CLUSTER[1-4] prijme cislo clusteru a do FRAGMENT[1-2] umisti kolik clusteru 
                      00480 ; po tomto clusteru nasledujich (vcetne) tvori jeden fragment
                      00481 
                      00482 ; Pokud soucasny cluster je prazdny (coz by se stat nemelo) vrati v POZICE FFh
                      00483 ; Jinak, pokud s vse povede, dame do POZICE 0
                      00484 
                      00485 ; ! PODPROGRAM NENI POUZITELNY PRO CLUSTER 0 (prvni cluster ROOT adresare)
                      00486 ; ! PODPROGRAM NETESTUJE ZDA NEBYLO ZADANO VETSI CISLO NEZ JE POCET CLUSTERU !!!
0A63   0851           00487         movfw FRAGMENT1
0A64   00D3           00488         movwf PREH_D_FRAGMENT1
0A65   0852           00489         movfw FRAGMENT2
0A66   00D4           00490         movwf PREH_D_FRAGMENT2
                      00491         
0A67   087D           00492         movfw 0x07D
0A68   00E6           00493         movwf PREH_ZAZNAM1
0A69   087E           00494         movfw 0x07E
0A6A   00E7           00495         movwf PREH_ZAZNAM2
                      00496 
0A6B   0879           00497         movfw 0x079                                     ; nejnizsi cast clusteru adresare
0A6C   00E2           00498         movwf PREH_ADR_CL1
0A6D   087A           00499         movfw 0x07A
0A6E   00E3           00500         movwf PREH_ADR_CL2
0A6F   087B           00501         movfw 0x07B
0A70   00E4           00502         movwf PREH_ADR_CL3
0A71   087C           00503         movfw 0x07C
0A72   00E5           00504         movwf PREH_ADR_CL4
                      00505         ; aktualni prehravany soubor i prehravana slozka byly nastaveny...
                      00506 
0A73   01ED           00507         clrf PREH_DATA_POZICE
0A74   146E           00508         bsf PREH_STAV0,0
0A75   14EE           00509         bsf PREH_STAV0,1                        ; nastavime si vlastosti prehravani: (PREH_STAV[0-1])
                      00510 
0A76   10CD           00511         bcf VSREG_MODE_L,1                      ; prehravame normalni rychlosti 
0A77   106F           00512         bcf PREH_STAV1,0                        ; prehravame normalni rychlosti 
                      00513         
0A78   204D           00514         call VS_SOFT_RESET
                      00515 
0A79   3000           00516         movlw VSADDR_MODE
0A7A   00B6           00517         movwf TEMP1
0A7B   084D           00518         movfw VSREG_MODE_L
0A7C   00B7           00519         movwf TEMP2
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 87


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A7D   01B8           00520         clrf TEMP3
0A7E   201C           00521         call VS_WR_REG
                      00522 
0A7F                  00523 PRIKAZ_80h_KONEC
                      00524         ; At uz bylo v zaznamu cokoli, odesleme 1 byt z BUFFERU 2
                      00525         INDF_BANK_2
0A7F   1783               M                         bsf STATUS,IRP    
0A80   3010           00526         movlw 0x10                                      ; 1. byte bufferu 2
0A81   0084           00527         movwf FSR
0A82   0800           00528         movfw INDF
                      00529         PROG_PAGE_0
0A83   118A               M                         bcf PCLATH,3
0A84   120A               M                         bcf PCLATH,4
0A85   229A           00530         call WR_USART   
                      00531         PROG_PAGE_1
0A86   158A               M                         bsf PCLATH,3
0A87   120A               M                         bcf PCLATH,4
                      00532         
0A88   01F3           00533         clrf PRIJATYCH_DAT                      ; vyprazdnime zasobnik prikazu
0A89   0008           00534         return
                      00535 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
0A8A                  00536 PRIKAZ_81h                                              ; 81h  vrat stav prehravaneho souboru
0A8A   0878           00537         movfw 0x078                                     ; prvni byte zasobniku prikazu
0A8B   3C81           00538         sublw h'81'
0A8C   1D03           00539         btfss STATUS,Z
0A8D   0008           00540         return                                          ; nebyl prijat prikaz 81h
0A8E   1475           00541         bsf STAV_PRIKAZU,0                      ; mame tu prikaz 81h, nastavime byt STAV_PRIKAZU
                      00542         ; pro prikaz 81h nejsou definovany zadne parametry, proto jiz nic jineho netestujeme
                      00543 
0A8F   086E           00544         movfw PREH_STAV0
                      00545         PROG_PAGE_0
0A90   118A               M                         bcf PCLATH,3
0A91   120A               M                         bcf PCLATH,4
0A92   229A           00546         call WR_USART
                      00547         PROG_PAGE_1
0A93   158A               M                         bsf PCLATH,3
0A94   120A               M                         bcf PCLATH,4
                      00548 
0A95   086F           00549         movfw PREH_STAV1
                      00550         PROG_PAGE_0
0A96   118A               M                         bcf PCLATH,3
0A97   120A               M                         bcf PCLATH,4
0A98   229A           00551         call WR_USART
                      00552         PROG_PAGE_1
0A99   158A               M                         bsf PCLATH,3
0A9A   120A               M                         bcf PCLATH,4
                      00553 
0A9B   116E           00554         bcf PREH_STAV0,2                        ; 2. bit je nastaven, kdyz se zmeni prehravany soubor (b
                            ez volani prikazu) do doby, nez prijde prikaz na dotaz STAVU... (81h)
                      00555 
0A9C   3004           00556         movlw VSADDR_DECODE_TIME
0A9D   00B6           00557         movwf TEMP1
0A9E   202A           00558         call VS_RD_REG                          ; zjistime si aktualni pozici v souboru v sekundach
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 88


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0A9F   0837           00559         movfw TEMP2
                      00560         PROG_PAGE_0
0AA0   118A               M                         bcf PCLATH,3
0AA1   120A               M                         bcf PCLATH,4
0AA2   229A           00561         call WR_USART
0AA3   0838           00562         movfw TEMP3
0AA4   229A           00563         call WR_USART
                      00564         PROG_PAGE_1
0AA5   158A               M                         bsf PCLATH,3
0AA6   120A               M                         bcf PCLATH,4
                      00565 
0AA7   01F3           00566         clrf PRIJATYCH_DAT                      ; vyprazdnime zasobnik
0AA8   0008           00567         return
                      00568 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
0AA9                  00569 PRIKAZ_82h                                              ; 82h  nastav hlasitost
0AA9   0878           00570         movfw 0x078                                     ; prvni byte zasobniku prikazu
0AAA   3C82           00571         sublw h'82'
0AAB   1D03           00572         btfss STATUS,Z
0AAC   0008           00573         return                                          ; nebyl prijat prikaz 82h
0AAD   1475           00574         bsf STAV_PRIKAZU,0                      ; mame tu prikaz 82h, nastavime byt STAV_PRIKAZU
0AAE   0873           00575         movfw PRIJATYCH_DAT
0AAF   3C02           00576         sublw .2                                        ; pro prikaz 82h museji prijit 3 byty (prikaz + 
                            2byty parametr)
0AB0   1803           00577         btfsc STATUS,C
0AB1   0008           00578         return                                          ; jeste nemame vsechny parametry
                      00579         ; Prisel prikaz 82h s 2bytovym parametrem 
                      00580 
0AB2   0879           00581         movfw 0x079                                     ; hlasitost pro levy kanal
0AB3   00D0           00582         movwf VSREG_VOL_H
0AB4   087A           00583         movfw 0x07A                                     ; hlasitost pro pravy kanal
0AB5   00CF           00584         movwf VSREG_VOL_L
0AB6   208F           00585         call VS_SET_VOLUME                      ; nastavime hlasitost   
                      00586 
0AB7   30FF           00587         movlw h'FF'
                      00588         PROG_PAGE_0
0AB8   118A               M                         bcf PCLATH,3
0AB9   120A               M                         bcf PCLATH,4
0ABA   229A           00589         call WR_USART
                      00590         PROG_PAGE_1
0ABB   158A               M                         bsf PCLATH,3
0ABC   120A               M                         bcf PCLATH,4
0ABD   01F3           00591         clrf PRIJATYCH_DAT                      ; vyprazdnime zasobnik
0ABE   0008           00592         return
                      00593 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
0ABF                  00594 PRIKAZ_83h                                              ; 83h  vrat informace o prehravanem souboru
0ABF   0878           00595         movfw 0x078                                     ; prvni byte zasobniku prikazu
0AC0   3C83           00596         sublw h'83'
0AC1   1D03           00597         btfss STATUS,Z
0AC2   0008           00598         return                                          ; nebyl prijat prikaz 83h
0AC3   1475           00599         bsf STAV_PRIKAZU,0                      ; mame tu prikaz 83h, nastavime byt STAV_PRIKAZU
                      00600         ; pro prikaz 83h nejsou definovane zadne parametry, proto jiz nic jineho netestujeme
                      00601 
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 89


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0AC4   3005           00602         movlw VSADDR_AUDATA
0AC5   00B6           00603         movwf TEMP1
0AC6   202A           00604         call VS_RD_REG
0AC7   0837           00605         movfw TEMP2
                      00606         PROG_PAGE_0
0AC8   118A               M                         bcf PCLATH,3
0AC9   120A               M                         bcf PCLATH,4
0ACA   229A           00607         call WR_USART
0ACB   0838           00608         movfw TEMP3
0ACC   229A           00609         call WR_USART   
                      00610         PROG_PAGE_1
0ACD   158A               M                         bsf PCLATH,3
0ACE   120A               M                         bcf PCLATH,4
                      00611         ; odeslali jsme AUDATA
                      00612 
0ACF   3008           00613         movlw VSADDR_HDAT0
0AD0   00B6           00614         movwf TEMP1
0AD1   202A           00615         call VS_RD_REG
0AD2   0837           00616         movfw TEMP2
                      00617         PROG_PAGE_0
0AD3   118A               M                         bcf PCLATH,3
0AD4   120A               M                         bcf PCLATH,4
0AD5   229A           00618         call WR_USART
0AD6   0838           00619         movfw TEMP3
0AD7   229A           00620         call WR_USART   
                      00621         PROG_PAGE_1
0AD8   158A               M                         bsf PCLATH,3
0AD9   120A               M                         bcf PCLATH,4
                      00622         ; odeslali jsme HDAT0
                      00623 
0ADA   3009           00624         movlw VSADDR_HDAT1
0ADB   00B6           00625         movwf TEMP1
0ADC   202A           00626         call VS_RD_REG
0ADD   0837           00627         movfw TEMP2
                      00628         PROG_PAGE_0
0ADE   118A               M                         bcf PCLATH,3
0ADF   120A               M                         bcf PCLATH,4
0AE0   229A           00629         call WR_USART
0AE1   0838           00630         movfw TEMP3
0AE2   229A           00631         call WR_USART   
                      00632         ; odeslali jsme HDAT1
                      00633 
0AE3   0862           00634         movfw PREH_ADR_CL1
0AE4   229A           00635         call WR_USART
0AE5   0863           00636         movfw PREH_ADR_CL2
0AE6   229A           00637         call WR_USART
0AE7   0864           00638         movfw PREH_ADR_CL3
0AE8   229A           00639         call WR_USART
0AE9   0865           00640         movfw PREH_ADR_CL4
0AEA   229A           00641         call WR_USART
                      00642 
0AEB   0866           00643         movfw PREH_ZAZNAM1
0AEC   229A           00644         call WR_USART
0AED   0867           00645         movfw PREH_ZAZNAM2
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 90


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0AEE   229A           00646         call WR_USART
                      00647         PROG_PAGE_1
0AEF   158A               M                         bsf PCLATH,3
0AF0   120A               M                         bcf PCLATH,4
                      00648 
0AF1   01F3           00649         clrf PRIJATYCH_DAT                      ; vyprazdnime zasobnik
0AF2   0008           00650         return
                      00651 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
0AF3                  00652 PRIKAZ_84h                                              ; 84h  nastav stav prehravani
0AF3   0878           00653         movfw 0x078                                     ; prvni byte zasobniku prikazu
0AF4   3C84           00654         sublw h'84'
0AF5   1D03           00655         btfss STATUS,Z
0AF6   0008           00656         return                                          ; nebyl prijat prikaz 84h
0AF7   1475           00657         bsf STAV_PRIKAZU,0                      ; mame tu prikaz 84h, nastavime byt STAV_PRIKAZU
0AF8   0873           00658         movfw PRIJATYCH_DAT
0AF9   3C02           00659         sublw .2                                        ; pro prikaz 8h museji prijit 3 byty (prikaz + 2
                            byty parametr)
0AFA   1803           00660         btfsc STATUS,C
0AFB   0008           00661         return                                          ; jeste nemame vsechny parametry
                      00662         ; Prisel prikaz 84h s 2bytovym parametrem 
                      00663 
0AFC   086E           00664         movfw PREH_STAV0
0AFD   3906           00665         andlw b'00000110'
0AFE   00EE           00666         movwf PREH_STAV0
0AFF   0879           00667         movfw 0x079                                     ; parametr 1
0B00   39F9           00668         andlw b'11111001'                       ; nektere bity vymaskujeme (vsechny nelze ovladat prikaz
                            em)
0B01   046E           00669         iorwf PREH_STAV0,w      
0B02   00EE           00670         movwf PREH_STAV0
                      00671 
0B03   087A           00672         movfw 0x07A                                     ; parametr 2
0B04   00EF           00673         movwf PREH_STAV1
                      00674 
0B05   10CD           00675         bcf VSREG_MODE_L,1                      ; prehravame normalni rychlosti (zda se mp3 prevyji je r
                            eseno v hlavni smycce podle stavu registru PREH_STAV1)
0B06   13CD           00676         bcf VSREG_MODE_L,7                      ;bass/treble enhancer
0B07   19EF           00677         btfsc PREH_STAV1,3                      ; 3. bit =      1 => zvyrazneni basu a vysek (moznost de
                            koderu vs1001 "bass/treble enhancer")
0B08   17CD           00678         bsf VSREG_MODE_L,7                      ;bass/treble enhancer
                      00679         
0B09   3000           00680         movlw VSADDR_MODE
0B0A   00B6           00681         movwf TEMP1
0B0B   084D           00682         movfw VSREG_MODE_L
0B0C   00B7           00683         movwf TEMP2
0B0D   01B8           00684         clrf TEMP3
0B0E   201C           00685         call VS_WR_REG
                      00686         
0B0F   3001           00687         movlw VSADDR_STATUS
0B10   202A           00688         call VS_RD_REG
0B11   0837           00689         movfw TEMP2
0B12   00CE           00690         movwf VSREG_STATUS_L
                      00691 
0B13   114E           00692         bcf VSREG_STATUS_L,2            ; Bit 2 is analog powerdown bit.
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 91


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B14   1A6F           00693         btfsc PREH_STAV1,4                      ; 4. bit = 1 => MUTE
0B15   154E           00694         bsf VSREG_STATUS_L,2            ; Bit 2 is analog powerdown bit.
                      00695         
0B16   3001           00696         movlw VSADDR_STATUS
0B17   00B6           00697         movwf TEMP1
0B18   084E           00698         movfw VSREG_STATUS_L
0B19   00B7           00699         movwf TEMP2
0B1A   01B8           00700         clrf TEMP3
0B1B   201C           00701         call VS_WR_REG
                      00702 
0B1C   1E6F           00703         btfss PREH_STAV1,4                      ; 4. bit = 1 => MUTE
0B1D   208F           00704         call VS_SET_VOLUME                      ; nastavime hlasitost
                      00705                                                                 ; nevim sice proc, ale kdyz prepisu VS r
                            eg. STATUS, zmeni se hlasitost
                      00706 
                      00707         PROG_PAGE_0
0B1E   118A               M                         bcf PCLATH,3
0B1F   120A               M                         bcf PCLATH,4
0B20   30FF           00708         movlw h'FF'
0B21   229A           00709         call WR_USART
                      00710         PROG_PAGE_1
0B22   158A               M                         bsf PCLATH,3
0B23   120A               M                         bcf PCLATH,4
0B24   01E8           00711         clrf PREH_CITAC_PREV
0B25   01F3           00712         clrf PRIJATYCH_DAT                      ; vyprazdnime zasobnik
0B26   0008           00713         return
                      00714 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
                      00084         include "filesystem.asm"; podprogramy pro praci s adresari a setrideni obsahu adresaru
                      00001 ;**********************************************************
                      00002 ;**********************************************************
                      00003 ;**********************************************************
                      00004 ; podprogramy pro praci s adresari a setrideni obsahu adresaru
                      00005 ;**********************************************************
                      00006 ;**********************************************************
                      00007 ;**********************************************************
                      00008 
                      00009 ;**************************************************************************
0B27                  00010 PRVNI_CL_ADRESARE
                      00011         ; V CLUSTER[1-4] prijme cislo clusteru. Zkontroluje, zda zadany sluster obsahuje zacatek adresar
                            e
                      00012         ; V POZICE vrati 00h, pokud cluster je prvni cluster nejakeho adresare, FFh, pokud neobsahuje ad
                            resar
0B27   01BB           00013         clrf POZICE
                      00014 
0B28   083C           00015         movfw CLUSTER1
0B29   043D           00016         iorwf CLUSTER2,W
0B2A   043E           00017         iorwf CLUSTER3,W
0B2B   043F           00018         iorwf CLUSTER4,W
0B2C   1903           00019         btfsc STATUS,Z
0B2D   0008           00020         return                          ; pokud CLUSTER[1-4]=0, tak se jedna o 1. cluster ROOT adr., pro
                            to nemusime dale resit co tam je...
                      00021         
                      00022         PROG_PAGE_0
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 92


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B2E   118A               M                         bcf PCLATH,3
0B2F   120A               M                         bcf PCLATH,4
0B30   2488           00023         call CLUSTER_TO_LBA
0B31   3001           00024         movlw .1
0B32   00A6           00025         movwf SECTOR_C
0B33   23E1           00026         call READ_SECTOR        ; precteme udajny prvni sektor z prvniho clusteru adresare      
                      00027         PROG_PAGE_1
0B34   158A               M                         bsf PCLATH,3
0B35   120A               M                         bcf PCLATH,4
                      00028 
                      00029         ; Tady vychazime z toho, ze kazdy adresar krome ROOTu ma jako prvni zaznam ukazatel na sebe (jak
                            o jmeno je jedna tecka)
                      00030         ; Mohlo by se sice stat, ze bychom narazili na soubor, ktery zacina retezcem ".          " to by
                            ch ale neresil...
0B36   30FF           00031         movlw h'FF'
0B37   00BB           00032         movwf POZICE
                      00033 
                      00034         PROG_PAGE_0
0B38   118A               M                         bcf PCLATH,3
0B39   120A               M                         bcf PCLATH,4
0B3A   2382           00035         call READ_DATA
                      00036         PROG_PAGE_1
0B3B   158A               M                         bsf PCLATH,3
0B3C   120A               M                         bcf PCLATH,4
0B3D   0820           00037         movfw DATA_L
0B3E   3C2E           00038         sublw '.'               ; 1. znak
0B3F   1D03           00039         btfss STATUS,Z
0B40   2B60           00040         goto PRVNI_CL_ADRESARE_KONEC
0B41   0821           00041         movfw DATA_H
0B42   3C20           00042         sublw h'20'             ; 2. znak
0B43   1D03           00043         btfss STATUS,Z
0B44   2B60           00044         goto PRVNI_CL_ADRESARE_KONEC
                      00045 
0B45   3004           00046         movlw .4                ; dalsich 8 znaku maji byt mezery
0B46   00B6           00047         movwf TEMP1
                      00048         
0B47                  00049 PRVNI_CL_ADRESARE_MEZERY
                      00050         PROG_PAGE_0
0B47   118A               M                         bcf PCLATH,3
0B48   120A               M                         bcf PCLATH,4
0B49   2382           00051         call READ_DATA
                      00052         PROG_PAGE_1
0B4A   158A               M                         bsf PCLATH,3
0B4B   120A               M                         bcf PCLATH,4
0B4C   0820           00053         movfw DATA_L
0B4D   3C20           00054         sublw h'20'
0B4E   1D03           00055         btfss STATUS,Z
0B4F   2B60           00056         goto PRVNI_CL_ADRESARE_KONEC
0B50   0821           00057         movfw DATA_H
0B51   3C20           00058         sublw h'20'
0B52   1D03           00059         btfss STATUS,Z
0B53   2B60           00060         goto PRVNI_CL_ADRESARE_KONEC
0B54   0BB6           00061         decfsz TEMP1,f
0B55   2B47           00062         goto PRVNI_CL_ADRESARE_MEZERY
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 93


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00063 
                      00064         PROG_PAGE_0
0B56   118A               M                         bcf PCLATH,3
0B57   120A               M                         bcf PCLATH,4
0B58   2382           00065         call READ_DATA
                      00066         PROG_PAGE_1
0B59   158A               M                         bsf PCLATH,3
0B5A   120A               M                         bcf PCLATH,4
0B5B   0820           00067         movfw DATA_L
0B5C   3C20           00068         sublw h'20'
0B5D   1D03           00069         btfss STATUS,Z
0B5E   2B60           00070         goto PRVNI_CL_ADRESARE_KONEC
                      00071 
0B5F   01BB           00072         clrf POZICE     
0B60                  00073 PRVNI_CL_ADRESARE_KONEC
0B60   0008           00074         return
                      00075 ;**************************************************************************
0B61                  00076 SKOC_NA_ZAZNAM
                      00077         ; !!!! pozor, tato procedura potrebuje min. 5 mist ve STACKu (vcetne sama sebe)
                      00078 
                      00079         ; V CLUSTER[1-4] prijme cislo clusteru na kterem se nachazi zacatek adresare
                      00080         ; V ZAZNAM[1-2] prijme cislo zaznamu 
                      00081         ; - pokud ZAZNAM[1-2] ukazuji mimo adresar, vrati v POZICE FFh (jinak 00h)
                      00082         ; - pokud byl zaznam nalezen,
                      00083         ;       da disku prikaz k jeho precteni a skoci az k zaznamu...
                      00084         ;       ...v bufferu disku budeme mit teda 32bytu dat ktere prezentuji jeden zaznam ve slozce
0B61   0860           00085         movfw ZAZNAM1
                      00086         BANK_1
0B62   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
0B63   1683               M                 bsf     STATUS,RP0    
0B64   00A0           00087         movwf OPERAND_X1
                      00088         BANK_0
0B65   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0B66   1283               M                 bcf     STATUS,RP0    
0B67   0861           00089         movfw ZAZNAM2
                      00090         BANK_1
0B68   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
0B69   1683               M                 bsf     STATUS,RP0    
0B6A   00A1           00091         movwf OPERAND_X2
0B6B   01A2           00092         clrf OPERAND_X3
0B6C   01A3           00093         clrf OPERAND_X4
                      00094         BANK_0                                  ; OPERAND_X := ZAZNAM
0B6D   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0B6E   1283               M                 bcf     STATUS,RP0    
                      00095         
                      00096         PROG_PAGE_0
0B6F   118A               M                         bcf PCLATH,3
0B70   120A               M                         bcf PCLATH,4
0B71   2708           00097         call POSUNDOPRAVA_4             ; OPERAND_X := OPERAND_X div 16
                      00098         ; tady mame v PRETECENI kolikaty zaznam v sektoru chceme
                      00099         BANK_1
0B72   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
0B73   1683               M                 bsf     STATUS,RP0    
0B74   082C           00100         movfw PRETECENI
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 94


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00101         BANK_0
0B75   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0B76   1283               M                 bcf     STATUS,RP0    
0B77   00BA           00102         movwf TEMP5
                      00103         BANK_1
0B78   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
0B79   1683               M                 bsf     STATUS,RP0    
0B7A   01AC           00104         clrf PRETECENI                          ; pokud CLUSTER_SIZE = 1 tak preteceni := 0 a X zustane 
                            stejne
                      00105         BANK_0
0B7B   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0B7C   1283               M                 bcf     STATUS,RP0    
                      00106 
0B7D   18CC           00107         btfsc CLUSTER_SIZE,1            ; 2
0B7E   26EA           00108         call POSUNDOPRAVA_1                     ; X := X div 2
0B7F   194C           00109         btfsc CLUSTER_SIZE,2            ; 4
0B80   26F3           00110         call POSUNDOPRAVA_2                     ; X := X div 4
0B81   19CC           00111         btfsc CLUSTER_SIZE,3            ; 8
0B82   26FD           00112         call POSUNDOPRAVA_3                     ; X := X div 8
0B83   1A4C           00113         btfsc CLUSTER_SIZE,4            ; 16
0B84   2708           00114         call POSUNDOPRAVA_4                     ; X := X div 4
0B85   1ACC           00115         btfsc CLUSTER_SIZE,5            ; 32
0B86   2714           00116         call POSUNDOPRAVA_5                     ; X := X div 32
0B87   1B4C           00117         btfsc CLUSTER_SIZE,6            ; 64
0B88   2721           00118         call POSUNDOPRAVA_6                     ; X := X div 64
0B89   1BCC           00119         btfsc CLUSTER_SIZE,7            ; 128
0B8A   272F           00120         call POSUNDOPRAVA_7                     ; X := X div 128
                      00121         ; tady mame v PRETECENI na kolikatem sektoru v clusteru je hledany zaznam
                      00122         BANK_1
0B8B   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
0B8C   1683               M                 bsf     STATUS,RP0    
0B8D   082C           00123         movfw PRETECENI
                      00124         BANK_0
0B8E   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0B8F   1283               M                 bcf     STATUS,RP0    
0B90   00B9           00125         movwf TEMP4
                      00126 
                      00127         ; OPERAND_X := (ZAZNAM div 16) div CLUSTER_SIZE
                      00128         ; ted v OPERAND_X mame hodnotu kolik clusteru mame od zacatku adresare preskocit...
0B91                  00129 SKOC_NA_ZAZNAM_PRESKOC_CL
                      00130         PROG_PAGE_0
0B91   118A               M                         bcf PCLATH,3
0B92   120A               M                         bcf PCLATH,4
0B93   273E           00131         call NULA
                      00132         PROG_PAGE_1
0B94   158A               M                         bsf PCLATH,3
0B95   120A               M                         bcf PCLATH,4
                      00133         BANK_1
0B96   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
0B97   1683               M                 bsf     STATUS,RP0    
0B98   1C2C           00134         btfss PRETECENI,0
0B99   2BBF           00135         goto SKOC_NA_ZAZNAM_MAME_CL     
                      00136         BANK_0
0B9A   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 95


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0B9B   1283               M                 bcf     STATUS,RP0    
                      00137 
                      00138         INDF_BANK_1
0B9C   1383               M                         bcf STATUS,IRP    
0B9D   30A0           00139         movlw 0xA0
0B9E   0084           00140         movwf FSR
0B9F   0800           00141         movfw INDF
0BA0   00B7           00142         movwf TEMP2
0BA1   0A84           00143         incf FSR,F
0BA2   0800           00144         movfw INDF
0BA3   00B8           00145         movwf TEMP3
                      00146 
                      00147         PROG_PAGE_0
0BA4   118A               M                         bcf PCLATH,3
0BA5   120A               M                         bcf PCLATH,4
0BA6   24EB           00148         call NEXT_CLUSTER
                      00149         PROG_PAGE_1
0BA7   158A               M                         bsf PCLATH,3
0BA8   120A               M                         bcf PCLATH,4
0BA9   183B           00150         btfsc POZICE,0          ; pokud s vse povedlo, mame v POZICE 0
0BAA   2BDE           00151         goto SKOC_NA_ZAZNAM_MIMO_ROZSAH
                      00152 
                      00153         INDF_BANK_1
0BAB   1383               M                         bcf STATUS,IRP    
0BAC   30A0           00154         movlw 0xA0
0BAD   0084           00155         movwf FSR
0BAE   0837           00156         movfw TEMP2
0BAF   0080           00157         movwf INDF
0BB0   0A84           00158         incf FSR,F
0BB1   0838           00159         movfw TEMP3
0BB2   0080           00160         movwf INDF
                      00161         BANK_1
0BB3   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
0BB4   1683               M                 bsf     STATUS,RP0    
0BB5   01A2           00162         clrf OPERAND_X3
0BB6   01A3           00163         clrf OPERAND_X4
                      00164         BANK_0  
0BB7   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0BB8   1283               M                 bcf     STATUS,RP0    
                      00165 
                      00166         PROG_PAGE_0
0BB9   118A               M                         bcf PCLATH,3
0BBA   120A               M                         bcf PCLATH,4
0BBB   2681           00167         call DEKREMENTUJ        ; X := X - 1
                      00168         PROG_PAGE_1
0BBC   158A               M                         bsf PCLATH,3
0BBD   120A               M                         bcf PCLATH,4
                      00169 
0BBE   2B91           00170         goto SKOC_NA_ZAZNAM_PRESKOC_CL
                      00171 
0BBF                  00172 SKOC_NA_ZAZNAM_MAME_CL
                      00173         BANK_0
0BBF   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0BC0   1283               M                 bcf     STATUS,RP0    
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 96


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00174 
0BC1   0839           00175         movfw TEMP4                                     ; v kolikatem sektoru v clusteru je hledany zazn
                            am
0BC2   00BB           00176         movwf POZICE 
                      00177         PROG_PAGE_0
0BC3   118A               M                         bcf PCLATH,3
0BC4   120A               M                         bcf PCLATH,4
0BC5   2488           00178         call CLUSTER_TO_LBA                     ; zjistime si skutecnou polohu zaznamu na disku
0BC6   3001           00179         movlw .1
0BC7   00A6           00180         movwf SECTOR_C
0BC8   23E1           00181         call READ_SECTOR                        ; dame prikaz precist sektor
                      00182         PROG_PAGE_1
0BC9   158A               M                         bsf PCLATH,3
0BCA   120A               M                         bcf PCLATH,4
                      00183 
0BCB   3010           00184         movlw .16
0BCC   00DE           00185         movwf ZAZNAMU_vBUFFERU_DISKU
0BCD   083A           00186         movfw TEMP5
0BCE   02DE           00187         subwf ZAZNAMU_vBUFFERU_DISKU,f          ; ZAZNAMU_vBUFFERU_DISKU := 16 - TEMP5
                      00188 
0BCF   083A           00189         movfw TEMP5                                     ; kolikaty zaznam v casti adersare (sektoru) mam
                            e precist [0..15]
0BD0   390F           00190         andlw b'00001111'
0BD1   00B6           00191         movwf TEMP1                                     ; rozsah by mel byt spravne, pro jistotu jej ale
                             orizneme [0..15]
0BD2   39FF           00192         andlw h'FF'
0BD3   1903           00193         btfsc STATUS,Z                          ; pokud chceme prvni zaznam ze sektoru...
0BD4   2BDB           00194         goto SKOC_NA_ZAZNAM_MAME_ZAZNAM         ; ...koncime
                      00195 
0BD5   0EB6           00196         swapf TEMP1,F                           ; protoze kazdy zaznam o souboru ma 32B=16slov, tak musi
                            me TEMP1 vynasobit 16...
                      00197         PROG_PAGE_0
0BD6   118A               M                         bcf PCLATH,3
0BD7   120A               M                         bcf PCLATH,4
0BD8   23A4           00198         call PRESKOC                            ; a tolik slov preskocit (tolik slov je pro nas nepotreb
                            nych)
                      00199         PROG_PAGE_1
0BD9   158A               M                         bsf PCLATH,3
0BDA   120A               M                         bcf PCLATH,4
                      00200 
0BDB                  00201 SKOC_NA_ZAZNAM_MAME_ZAZNAM
0BDB   3000           00202         movlw h'00'
0BDC   00BB           00203         movwf POZICE 
0BDD   2BE0           00204         goto SKOC_NA_ZAZNAM_KONEC
0BDE                  00205 SKOC_NA_ZAZNAM_MIMO_ROZSAH
0BDE   30FF           00206         movlw h'FF'
0BDF   00BB           00207         movwf POZICE 
0BE0                  00208 SKOC_NA_ZAZNAM_KONEC
0BE0   0008           00209         return
                      00210 ;**************************************************************************
0BE1                  00211 FILE_INFO
                      00212         ; z disku nam ted ma prijit 32bytu dat, ktere reprezentuji jeden zaznam ve slozce
                      00213         ; tato procedura zaznam precte, analyzuje, a do bufferu 2 da nasledujici informace:
                      00214         ;               1.     byte ->  = 00h -> zaznam je prazdny; 
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 97


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00215         ;                                               = 01h -> zaznam je adresar; 
                      00216         ;                                               = 02h -> zaznam je soubor; 
                      00217         ;                                               = 06h -> zaznam je soubor s priponou MP3
                      00218         ;               2..9   byte -> 8 znaku dlouhe jmeno ("DOSovsky" tvar - napr. slouzka "dokumenty"
                             = "DOKUME~1" )
                      00219         ;               10..12 byte -> u souboru tri znaky pripony (u adresaru vetsinou mezery - 20h 20h
                             20h)
                      00220         ;               13..16 byte -> 1. cluster souboru
                      00221         ; Pokud se jedna o adresar, a zaznam o pripone se nerovna 0x202020 (tri mezery), tak skutecne jm
                            eno adresare je : ADRESAR.PRI
                      00222         INDF_BANK_2
0BE1   1783               M                         bsf STATUS,IRP    
0BE2   3010           00223         movlw 0x10                                      ; 1. byte bufferu 2
0BE3   0084           00224         movwf FSR
0BE4   3000           00225         movlw .0                                        ; zatim nevime co zaznam obsahuje, tak ho oznaci
                            me jako prazdny
0BE5   0080           00226         movwf INDF
0BE6   0A84           00227         incf FSR,F      
                      00228 
0BE7   3005           00229         movlw .5                                        ; 5 slov = 10 bytu -> 8 znaku jmena souboru/sloz
                            ky + 2 znaky pripony
0BE8   00B6           00230         movwf TEMP1
0BE9                  00231 FILE_INFO__READ_NAME
                      00232         PROG_PAGE_0
0BE9   118A               M                         bcf PCLATH,3
0BEA   120A               M                         bcf PCLATH,4
0BEB   2382           00233         call READ_DATA                          ; 2 znaky jmena souboru/slozky, nebo pripony souboru
                      00234         PROG_PAGE_1
0BEC   158A               M                         bsf PCLATH,3
0BED   120A               M                         bcf PCLATH,4
0BEE   0820           00235         movfw DATA_L
0BEF   0080           00236         movwf INDF
0BF0   0A84           00237         incf FSR,F
0BF1   0821           00238         movfw DATA_H
0BF2   0080           00239         movwf INDF
0BF3   0A84           00240         incf FSR,F
0BF4   03B6           00241         decf TEMP1,F
0BF5   1D03           00242         btfss STATUS,Z
0BF6   2BE9           00243         goto FILE_INFO__READ_NAME       
                      00244 
                      00245         PROG_PAGE_0
0BF7   118A               M                         bcf PCLATH,3
0BF8   120A               M                         bcf PCLATH,4
0BF9   2382           00246         call READ_DATA                          ; posledni znak pripony a byt s atributy souboru
                      00247         PROG_PAGE_1
0BFA   158A               M                         bsf PCLATH,3
0BFB   120A               M                         bcf PCLATH,4
0BFC   0820           00248         movfw DATA_L
0BFD   0080           00249         movwf INDF
                      00250 
0BFE   3011           00251         movlw 0x11                                      ; 2. byte bufferu 2 -> 1. znak jmena souboru
0BFF   0084           00252         movwf FSR
0C00   0800           00253         movfw INDF                                      ; ted ve W mame 1. znak jmena souboru/slozky
0C01   39FF           00254         andlw h'FF'
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 98


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0C02   1903           00255         btfsc STATUS,Z
0C03   2C54           00256         goto FILE_INFO__CTI20_KONEC             ; pokud 1. znak jmena souboru = 00h, je zaznam prazdny
0C04   3CE5           00257         sublw h'E5'
0C05   1903           00258         btfsc STATUS,Z
0C06   2C54           00259         goto FILE_INFO__CTI20_KONEC             ; pokud 1. znak jmena souboru = E5h, je zaznam prazdny
                      00260         
                      00261         ; pokud jsme tady, tak zaznam obsahuje soubor, adresar, dlouhe jmeno souboru, nebo jmenovku disk
                            u 
                      00262         ; (jsou dva zpusoby jak zapsat jmenovku svazku, bud do spousteciho zaznamu, nebo jako polozku RO
                            OT adresare)
0C07   0821           00263         movfw DATA_H                            ; byt s atributy souboru
0C08   390F           00264         andlw h'0F'
0C09   3C0F           00265         sublw h'0F'                                     ; if (atributy and 0Fh) = 0Fh -> zaznam s dlouhy
                            m nazvem souboru
0C0A   1903           00266         btfsc STATUS,Z
0C0B   2C54           00267         goto FILE_INFO__CTI20_KONEC             ; pokud zaznam je dlouhy nazav souboru, koncime
0C0C   19A1           00268         btfsc DATA_H,3
0C0D   2C54           00269         goto FILE_INFO__CTI20_KONEC             ; if (atributy and 08h) = 08h -> jmenovka disku
0C0E   1A21           00270         btfsc DATA_H,4                          ; if (atributy and 10h) = 10h -> adresar
0C0F   2C25           00271         goto FILE_INFO__DIR
                      00272 
0C10   3002           00273         movlw h'02'                                     ; zaznam je soubor
0C11   00B6           00274         movwf TEMP1
                      00275         ; tady vime, ze zaznam je soubor, tak se podivame, zda to neni mp3
0C12   3019           00276         movlw 0x19                                      ; 10. byt bufferu 2 -> 1. znak pripony souboru
0C13   0084           00277         movwf FSR
                      00278 
0C14   0800           00279         movfw INDF
0C15   3C4D           00280         sublw 'M'                                       ; (jmena souboru v "DOSovskem" tvaru maji vzdy v
                            elka pismena)
0C16   1D03           00281         btfss STATUS,Z
0C17   2C27           00282         goto FILE_INFO__FILE
0C18   0A84           00283         incf FSR,F
0C19   0800           00284         movfw INDF
0C1A   3C50           00285         sublw 'P'
0C1B   1D03           00286         btfss STATUS,Z
0C1C   2C27           00287         goto FILE_INFO__FILE
0C1D   0A84           00288         incf FSR,F
0C1E   0800           00289         movfw INDF
0C1F   3C33           00290         sublw '3'
0C20   1D03           00291         btfss STATUS,Z
0C21   2C27           00292         goto FILE_INFO__FILE
                      00293 
0C22   3006           00294         movlw h'06'                                     ; ted je jasne, ze soubor je mp3
0C23   00B6           00295         movwf TEMP1
0C24   2C27           00296         goto FILE_INFO__FILE
                      00297 
0C25                  00298 FILE_INFO__DIR
0C25   3001           00299         movlw h'01'                                     ; zaznam je adresar
0C26   00B6           00300         movwf TEMP1
                      00301 
0C27                  00302 FILE_INFO__FILE
                      00303         ; tady mame v TEMP 1 jednu z nasledujicich hodnot:
                      00304         ; 01h -> zaznam je adresar; 02h -> zaznam je soubor; 06h -> zaznam je soubor s priponou MP3
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 99


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0C27   3010           00305         movlw 0x10                                      ; 1. byt bufferu 2 -> identifikace zaznamu
0C28   0084           00306         movwf FSR
0C29   0836           00307         movfw TEMP1
0C2A   0080           00308         movwf INDF
                      00309 
0C2B   3004           00310         movlw .4
0C2C   00B6           00311         movwf TEMP1
                      00312         PROG_PAGE_0
0C2D   118A               M                         bcf PCLATH,3
0C2E   120A               M                         bcf PCLATH,4
0C2F   23A4           00313         call PRESKOC                            ; nasledujicich 8 bytu ze zaznamu je pro nas k nicemu (o
                            bsahuji cas posledni upravy, otevreni a buh vi co jeste...)
                      00314         PROG_PAGE_1
0C30   158A               M                         bsf PCLATH,3
0C31   120A               M                         bcf PCLATH,4
                      00315 
0C32   301E           00316         movlw 0x1E                                      ; 15. byt bufferu 2 -> 2. byt prvniho clusteru
0C33   0084           00317         movwf FSR
                      00318         PROG_PAGE_0
0C34   118A               M                         bcf PCLATH,3
0C35   120A               M                         bcf PCLATH,4
0C36   2382           00319         call READ_DATA                          ; jedno slovo -> horni cast cisla prvniho clusteru
                      00320         PROG_PAGE_1
0C37   158A               M                         bsf PCLATH,3
0C38   120A               M                         bcf PCLATH,4
0C39   0820           00321         movfw DATA_L
0C3A   0080           00322         movwf INDF
0C3B   0A84           00323         incf FSR,F
0C3C   0821           00324         movfw DATA_H
0C3D   0080           00325         movwf INDF
                      00326 
                      00327         PROG_PAGE_0
0C3E   118A               M                         bcf PCLATH,3
0C3F   120A               M                         bcf PCLATH,4
0C40   2382           00328         call READ_DATA                          ; cas vytvoreni   (1 word)
0C41   2382           00329         call READ_DATA                          ; datum vytvoreni (1 word)
                      00330 
0C42   301C           00331         movlw 0x1C                                      ; 13. byt bufferu 2 -> 0. byt prvniho clusteru
0C43   0084           00332         movwf FSR
0C44   2382           00333         call READ_DATA                          ; jedno slovo -> dolni cast cisla prvniho clusteru
                      00334         PROG_PAGE_1
0C45   158A               M                         bsf PCLATH,3
0C46   120A               M                         bcf PCLATH,4
0C47   0820           00335         movfw DATA_L
0C48   0080           00336         movwf INDF
0C49   0A84           00337         incf FSR,F
0C4A   0821           00338         movfw DATA_H
0C4B   0080           00339         movwf INDF
                      00340         
                      00341         ; Pak jsou v zaznamu jeste 4 byty, ktere obsahuji velikost souboru. Ty mi sice nepotrebujeme,
                      00342         ; musime je ale precist, aby jsme precetli vsech 32 bytu zaznamu
0C4C   3002           00343         movlw .2
0C4D   00B6           00344         movwf TEMP1
                      00345         PROG_PAGE_0
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 100


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0C4E   118A               M                         bcf PCLATH,3
0C4F   120A               M                         bcf PCLATH,4
0C50   23A4           00346         call PRESKOC
                      00347         PROG_PAGE_1
0C51   158A               M                         bsf PCLATH,3
0C52   120A               M                         bcf PCLATH,4
0C53   0008           00348         return
0C54                  00349 FILE_INFO__CTI20_KONEC
0C54   300A           00350         movlw .10
0C55   00B6           00351         movwf TEMP1
                      00352         PROG_PAGE_0
0C56   118A               M                         bcf PCLATH,3
0C57   120A               M                         bcf PCLATH,4
0C58   23A4           00353         call PRESKOC
                      00354         PROG_PAGE_1
0C59   158A               M                         bsf PCLATH,3
0C5A   120A               M                         bcf PCLATH,4
0C5B   0008           00355         return
                      00356 ;**************************************************************************
0C5C                  00357 FILE_SIZE
                      00358         ; z disku nam ted ma prijit 32bytu dat, ktere reprezentuji jeden zaznam ve slozce
                      00359         ; Zaznam by mel byt soubor, podprogram toto nekontroluje (zda zaznam neni adresar)
                      00360         ; Na zacatek bufferu 1 da 4 byty obsahujici velikost zaznamu
0C5C   300E           00361         movlw .14                                       ; my ted potrebujeme jen posledni 4 byty ze zazn
                            amu, tam se nachazi velikost souboru
0C5D   00B6           00362         movwf TEMP1
                      00363         PROG_PAGE_0
0C5E   118A               M                         bcf PCLATH,3
0C5F   120A               M                         bcf PCLATH,4
0C60   23A4           00364         call PRESKOC
                      00365         PROG_PAGE_1
0C61   158A               M                         bsf PCLATH,3
0C62   120A               M                         bcf PCLATH,4
                      00366 
                      00367         INDF_BANK_2
0C63   1783               M                         bsf STATUS,IRP    
0C64   3010           00368         movlw 0x10                                      ; 1. byte bufferu 1
0C65   0084           00369         movwf FSR
                      00370 
                      00371         PROG_PAGE_0
0C66   118A               M                         bcf PCLATH,3
0C67   120A               M                         bcf PCLATH,4
0C68   2382           00372         call READ_DATA
0C69   0820           00373         movfw DATA_L
0C6A   0080           00374         movwf INDF
0C6B   0A84           00375         incf FSR,F
0C6C   0821           00376         movfw DATA_H
0C6D   0080           00377         movwf INDF
0C6E   0A84           00378         incf FSR,F
                      00379 
0C6F   2382           00380         call READ_DATA
                      00381         PROG_PAGE_1
0C70   158A               M                         bsf PCLATH,3
0C71   120A               M                         bcf PCLATH,4
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 101


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0C72   0820           00382         movfw DATA_L
0C73   0080           00383         movwf INDF
0C74   0A84           00384         incf FSR,F
0C75   0821           00385         movfw DATA_H
0C76   0080           00386         movwf INDF
0C77   0A84           00387         incf FSR,F
                      00388 
0C78   0008           00389         return
                      00390 ;**************************************************************************
0C79                  00391 HLEDEJ
                      00392 ; !!!! pozor, tato procedura potrebuje min. 6 mist ve STACKu (vcetne sama sebe)
                      00393 
                      00394 ; mocna procedura, ktera nam podle zadanych parametru vyhleda pozadovany zaznam 
                      00395 ; a umisti jej do bufferu2 na offset 32 (do horni poloviny bufferu)
                      00396 
                      00397 ; ZAZNAM V DRUHE POLOVINE BUFFERU2 MA NASLEDUJICI STRUKTURU:
                      00398 ;       1. byte:        = 00h -> zadny vyhovujici zaznam nebyl nalezen
                      00399 ;                               = 01h -> zaznam je adresar
                      00400 ;                               = 02h -> zaznam je soubor; 
                      00401 ;                               = 06h -> zaznam je soubor s priponou MP3
                      00402 ;       2..9   byte -> 8 znaku dlouhe jmeno ("DOSovsky" tvar - napr. slouzka "dokumenty" = "DOKUME~1" )
                      00403 ;       10..12 byte -> u souboru tri znaky pripony (u adresaru vetsinou mezery - 20h 20h 20h)
                      00404 ;       13..16 byte -> 1. cluster souboru / adresare
                      00405 ;       17..18 byte -> cislo zaznamu v adresari
                      00406 
                      00407 ;       HL_PARAMETRY    -- parametry hledani
                      00408 ;       HL_ADR_CL[1-4]  -- prnvi cluster prohledavaneho adresare
                      00409 ;       ZAZNAM[1-2]             -- zaznam od ktereho hledame
                      00410 
                      00411 ; Filozofie je takova, ze v bufferu 1 mame ulozen zaznam vuci kteremu vyhledavame (ZAZ_REF),
                      00412 ; v dolni polovine bufferu 2 mame ulozen zaznam, ktery jsme prave precetli (ZAZ_A)
                      00413 ; a v hodni polovine bufferu 2 zaznam, ktery zatim byl nejblize k pozadovanemu zaznamu (ZAZ_N).
                      00414 
                      00415 ; Hruby vyvojak by pak mohl vypadat takto:
                      00416 ;******************************************************************************************************
                      00417 ; if ((HL_PARAMETRY = [prvni]):
                      00418 ;       if (CLUSTER = ROOT):
                      00419 ;               HL_PARAMETRY := [dalsi]
                      00420 ;               ZAZ_REF := 0x0000000.....
                      00421 ;               goto hledej_hledani
                      00422 ;       elseif (HL_PARAMETRY != [vracet '..']):
                      00423 ;               ZAZ_REF := zaznam 1
                      00424 ;               HL_PARAMETRY := [dalsi]
                      00425 ;       else
                      00426 ;               ZAZ_N naplnit daty ze zaznamu 1 // prvni polozkou vsech adresaru krome ROOTu jsou ".."
                      00427 ;               goto hledej_konec
                      00428 ;       endif;
                      00429 ; endif;
                      00430 
                      00431 ; if ((CLUSTER != ROOT) and (ZAZNAM<2)):
                      00432 ;               if (HL_PARAMETRY = [dalsi]):
                      00433 ;                       ZAZ_REF := 0x0000000.....
                      00434 ;                       goto hledej_hledani
                      00435 ;               else:
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 102


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00436 ;                       goto hledej_konec
                      00437 ;               endif;
                      00438 ; endif;
                      00439 ;
                      00440 ; ZAZ_REF naplnit daty ze zaznamu ZAZNAM
                      00441 ; ZAZNAM := 0
                      00442 ; if (CLUSTER != ROOT):
                      00443 ;               ZAZNAM :=2
                      00444 ; end;
                      00445 ;
                      00446 ; repeat
                      00447 ;       nacti_zaznam
                      00448 ;       IF     (hledame dalsi zaznam)     AND (ZAZ_A > ZAZ_REF) AND ((ZAZ_A < ZAZ_N) OR (ZAZ_N is empty)
                            ):
                      00449 ;                       ZAZ_N := ZAZ_A
                      00450 ;       ELSEIF (hledame predchozi zaznam) AND (ZAZ_A < ZAZ_REF) AND (ZAZ_A > ZAZ_N):
                      00451 ;                       ZAZ_N := ZAZ_A
                      00452 ;       ENDIF
                      00453 ;       zaznam++
                      00454 ; until (byl zaznam posledni)
                      00455 ;
                      00456 ; if (HL_PARAMETRY = [predchozi]) and (ZAZ_N = 00000) and (!ROOT) and (HL_PARAMETRY = [vracet '..']):
                      00457 ;       ZAZ_N naplnit daty ze zaznamu 1
                      00458 ; endif;
                      00459 ; KONEC
                      00460 ;******************************************************************************************************
                      00461         PROG_PAGE_0
0C79   118A               M                         bcf PCLATH,3
0C7A   120A               M                         bcf PCLATH,4
0C7B   23BA           00462         call CLEAR_BUFFER2              ; vymazeme si buffer2, abychom tam nemeli bordel
                      00463         PROG_PAGE_1
0C7C   158A               M                         bsf PCLATH,3
0C7D   120A               M                         bcf PCLATH,4
0C7E   25E6           00464         call CLEAR_BUFFER1              ; vymazeme si buffer1, abychom tam nemeli bordel
                      00465 
0C7F   085A           00466         movfw HL_ADR_CL1
0C80   00BC           00467         movwf CLUSTER1
0C81   085B           00468         movfw HL_ADR_CL2
0C82   00BD           00469         movwf CLUSTER2
0C83   085C           00470         movfw HL_ADR_CL3
0C84   00BE           00471         movwf CLUSTER3
0C85   085D           00472         movfw HL_ADR_CL4
0C86   00BF           00473         movwf CLUSTER4
                      00474 
                      00475         ; protoze to budeme v nasledujicim kodu potrebova, nastavime si 7. bit HL_PARAMETRY podle toho, 
                      00476         ; zda predany adresar je ROOT ci nikoliv
                      00477         ;               7. bit - tento bit nelze nastavit uzivatelem
                      00478         ;                       = 0 > adresar je ROOT
                      00479         ;                       = 1 > adresar neni ROOT
0C87   13D9           00480         bcf HL_PARAMETRY,7
0C88   30FF           00481         movlw h'FF'     
0C89   05BC           00482         andwf CLUSTER1,F
0C8A   1D03           00483         btfss STATUS,Z
0C8B   17D9           00484                 bsf HL_PARAMETRY,7
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 103


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0C8C   05BD           00485         andwf CLUSTER2,F
0C8D   1D03           00486         btfss STATUS,Z
0C8E   17D9           00487                 bsf HL_PARAMETRY,7
0C8F   05BE           00488         andwf CLUSTER3,F
0C90   1D03           00489         btfss STATUS,Z
0C91   17D9           00490                 bsf HL_PARAMETRY,7
0C92   05BF           00491         andwf CLUSTER4,F
0C93   1D03           00492         btfss STATUS,Z
0C94   17D9           00493                 bsf HL_PARAMETRY,7
                      00494 
                      00495 ; if ((HL_PARAMETRY = [prvni]):
                      00496 ;       if (CLUSTER = ROOT):
                      00497 ;               HL_PARAMETRY := [dalsi]
                      00498 ;               ZAZ_REF := 0x0000000.....
                      00499 ;               goto hledej_hledani
                      00500 ;       elseif (HL_PARAMETRY != [vracet '..']):
                      00501 ;               ZAZ_REF := zaznam 1
                      00502 ;               HL_PARAMETRY := [dalsi]
                      00503 ;       else
                      00504 ;               ZAZ_N naplnit daty ze zaznamu 1 // prvni polozkou vsech adresaru krome ROOTu jsou ".."
                      00505 ;               goto hledej_konec
                      00506 ;       endif;
                      00507 ; endif;
                      00508 
0C95   1DD9           00509         btfss HL_PARAMETRY,3                    ; if ((HL_PARAMETRY = [prvni]):
0C96   2CAA           00510         goto HLEDEJ_NEHLEDAME_PRVNI
0C97   1BD9           00511         btfsc HL_PARAMETRY,7                    ;               IF (CLUSTER = ROOT):
0C98   2C9B           00512         goto HLEDEJ_ELSEIF1
0C99   1259           00513         bcf HL_PARAMETRY,4
0C9A   2CC0           00514         goto HLEDEJ_HLEDANI
0C9B                  00515 HLEDEJ_ELSEIF1                                          ;               elseif (HL_PARAMETRY = [vracet '
                            ..']):
0C9B   1ED9           00516         btfss HL_PARAMETRY,5
0C9C   2CA2           00517         goto HLEDEJ_ELSE1
0C9D   3001           00518         movlw .1
0C9E   00E0           00519         movwf ZAZNAM1
0C9F   01E1           00520         clrf ZAZNAM2                                    ;                       ZAZ_REF := zaznam 1
0CA0   1259           00521         bcf HL_PARAMETRY,4
0CA1   2CAA           00522         goto HLEDEJ_NEHLEDAME_PRVNI
0CA2                  00523 HLEDEJ_ELSE1
0CA2   3001           00524         movlw .1
0CA3   00E0           00525         movwf ZAZNAM1
0CA4   01E1           00526         clrf ZAZNAM2
0CA5   2361           00527         call SKOC_NA_ZAZNAM     
0CA6   23E1           00528         call FILE_INFO
0CA7   2514           00529         call ZAPIS_C_ZAZNAMU
0CA8   2630           00530         call BUF2_LOW_TO_HIGH
0CA9   2D13           00531         goto HLEDEJ_KONEC                               ;               ENDIF;
0CAA                  00532 HLEDEJ_NEHLEDAME_PRVNI                          ; ENDIF 
                      00533 
0CAA   1FD9           00534         btfss HL_PARAMETRY,7
0CAB   2CBA           00535         goto HLEDEJ_IF2_ENDIF
0CAC   0861           00536         movfw ZAZNAM2 
0CAD   39FF           00537         andlw h'FF'
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 104


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0CAE   1D03           00538         btfss STATUS,Z
0CAF   2CBA           00539         goto HLEDEJ_IF2_ENDIF
0CB0   0860           00540         movfw ZAZNAM1
0CB1   39FF           00541         andlw h'FF'
0CB2   1903           00542         btfsc STATUS,Z
0CB3   2CB7           00543         goto IF2
0CB4   3C01           00544         sublw .1
0CB5   1D03           00545         btfss STATUS,Z
0CB6   2CBA           00546         goto HLEDEJ_IF2_ENDIF                   ; if ((CLUSTER != ROOT) and (ZAZNAM < 2)):
0CB7                  00547 IF2
0CB7   1A59           00548         btfsc HL_PARAMETRY,4                    ;               if (HL_PARAMETRY = [predchozi]):
0CB8   2D13           00549         goto HLEDEJ_KONEC                               ;               ... else:
0CB9   2CC0           00550         goto HLEDEJ_HLEDANI                             ;               ... endif;
0CBA                  00551 HLEDEJ_IF2_ENDIF                                        ; endif
                      00552 
0CBA   2361           00553         call SKOC_NA_ZAZNAM             ; - pokud ZAZNAM[1-2] ukazuji mimo adresar, vrati v POZICE FFh (
                            jinak 00h)
0CBB   183B           00554         btfsc POZICE,0
0CBC   2D13           00555         goto HLEDEJ_KONEC       
0CBD   23E1           00556         call FILE_INFO
0CBE   2514           00557         call ZAPIS_C_ZAZNAMU    
0CBF   25F2           00558         call BUF2_TO_BUF1
                      00559 
0CC0                  00560 HLEDEJ_HLEDANI  
0CC0   01E0           00561         clrf ZAZNAM1
0CC1   01E1           00562         clrf ZAZNAM2
0CC2   1BD9           00563         btfsc HL_PARAMETRY,7
0CC3   14E0           00564         bsf ZAZNAM1,1                   ; if (!ROOT): ZAZNAM = 2; endif;
0CC4   01DE           00565         clrf ZAZNAMU_vBUFFERU_DISKU
0CC5                  00566 HLEDEJ_REPEAT
0CC5   085A           00567         movfw HL_ADR_CL1
0CC6   00BC           00568         movwf CLUSTER1
0CC7   085B           00569         movfw HL_ADR_CL2
0CC8   00BD           00570         movwf CLUSTER2
0CC9   085C           00571         movfw HL_ADR_CL3
0CCA   00BE           00572         movwf CLUSTER3
0CCB   085D           00573         movfw HL_ADR_CL4
0CCC   00BF           00574         movwf CLUSTER4
                      00575 
                      00576 
0CCD   01BB           00577         clrf POZICE
0CCE   085E           00578         movfw ZAZNAMU_vBUFFERU_DISKU
0CCF   39FF           00579         andlw h'FF'
0CD0   1903           00580         btfsc STATUS,Z                  ; pokud jeste nejake po sobe jdouci zaznamy jsou pripraveny v bu
                            fferu disku, tak nemusime volat SKOC_NA_ZAZNAM
0CD1   2361           00581         call SKOC_NA_ZAZNAM             ; - pokud ZAZNAM[1-2] ukazuji mimo adresar, vrati v POZICE FFh (
                            jinak 00h)
0CD2   183B           00582         btfsc POZICE,0
0CD3   2CF6           00583         goto HLEDEJ_END_REPEAT
                      00584 
0CD4   03DE           00585         decf ZAZNAMU_vBUFFERU_DISKU,f   ; ted jeden zaznam precteme, proto jich bude v bufferu disku o j
                            eden min
0CD5   23E1           00586         call FILE_INFO
0CD6   2514           00587         call ZAPIS_C_ZAZNAMU
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 105


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00588 
0CD7   0AE0           00589         incf ZAZNAM1,f
0CD8   1903           00590         btfsc STATUS,Z
0CD9   0AE1           00591         incf ZAZNAM2,f
                      00592 
0CDA   2521           00593         call VYHOVUJE_ZAZNAM
0CDB   1C36           00594         btfss TEMP1,0
0CDC   2CC5           00595         goto HLEDEJ_REPEAT
                      00596         
                      00597 ;       movlw .16
                      00598 ;       movwf TEMP1
                      00599 ;       PROG_PAGE_0
                      00600 ;       call ODESLI_BUFFER2                     ; odesleme si zaznam o souboru  
                      00601 ;       call DELAY_500ms    
                      00602 ;       PROG_PAGE_1
                      00603 
                      00604 ;       IF     (hledame dalsi zaznam)
                      00605 ;               IF (ZAZ_A > ZAZ_REF) AND ((ZAZ_A < ZAZ_N) OR (ZAZ_N is empty)):
                      00606 ;                       ZAZ_N := ZAZ_A
                      00607 ;               ENDIF
                      00608 ;       ELSEIF (hledame predchozi zaznam)
                      00609 ;               IF (ZAZ_A < ZAZ_REF) AND (ZAZ_A > ZAZ_N):
                      00610 ;                       ZAZ_N := ZAZ_A
                      00611 ;               ENDIF
                      00612 ;       ENDIF
0CDD   2556           00613         call COMPARE_BUFF1_BUFF2
                      00614         ; porovna nazvy souboru na zacatku bufferu1 s bufferem2
                      00615         ; pokud v abecede je driv nazev v bufferu1 da to TEMP1 0x01
                      00616         ; pokud v abecede je driv nazev v bufferu2 da to TEMP1 0x02
                      00617         ; pokud se nazvy shoduji da do TEMP1 0x00
0CDE   1A59           00618         btfsc HL_PARAMETRY,4            ;       IF     (hledame dalsi zaznam)
0CDF   2CEF           00619         goto HLEDEJ_ELSE3
0CE0   1C36           00620         btfss TEMP1,0                           ;               IF (ZAZ_A > ZAZ_REF)
0CE1   2CF5           00621         goto HLEDEJ_ENDIF3
                      00622 
                      00623         BANK_2
0CE2   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0CE3   1283               M                 bcf     STATUS,RP0    
0CE4   0830           00624         movfw 0x30
                      00625         BANK_0
0CE5   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0CE6   1283               M                 bcf     STATUS,RP0    
0CE7   39FF           00626         andlw h'FF'
0CE8   1903           00627         btfsc STATUS,Z
0CE9   2CED           00628         goto HLEDEJ_IF4
                      00629 
0CEA   2543           00630         call COMPARE_BUFF2_L_H
                      00631         ; porovna nazvy souboru na zacatku bufferu2 a na konci bufferu2
                      00632         ; pokud v abecede je driv nazev v horni polovine buff2 da to TEMP1 0x01
                      00633         ; pokud v abecede je driv nazev v dolni polovine buff2 da to TEMP1 0x02
                      00634         ; pokud se nazvy shoduji da do TEMP1 0x00
0CEB   1CB6           00635         btfss TEMP1,1
0CEC   2CF5           00636         goto HLEDEJ_ENDIF3
0CED                  00637 HLEDEJ_IF4                                              ;               AND ((ZAZ_A < ZAZ_N) OR (ZAZ_N i
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 106


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            s empty)):
0CED   2630           00638         call BUF2_LOW_TO_HIGH           ;                               ZAZ_N := ZAZ_A
0CEE   2CF5           00639         goto HLEDEJ_ENDIF3                      ;               ENDIF
0CEF                  00640 HLEDEJ_ELSE3                                    ;       ELSEIF (hledame predchozi zaznam)
0CEF   1CB6           00641         btfss TEMP1,1                           ;               IF (ZAZ_A < ZAZ_REF)
0CF0   2CF5           00642         goto HLEDEJ_ENDIF3
0CF1   2543           00643         call COMPARE_BUFF2_L_H
0CF2   1C36           00644         btfss TEMP1,0                           ;               AND (ZAZ_A > ZAZ_N):
0CF3   2CF5           00645         goto HLEDEJ_ENDIF3
0CF4   2630           00646         call BUF2_LOW_TO_HIGH           ;                               ZAZ_N := ZAZ_A
0CF5                  00647 HLEDEJ_ENDIF3                                   ;       ENDIF
                      00648         
0CF5   2CC5           00649         goto HLEDEJ_REPEAT
0CF6                  00650 HLEDEJ_END_REPEAT
                      00651 
                      00652 ; if (HL_PARAMETRY = [predchozi]) and (ZAZ_N = 00000) and (!ROOT) and (HL_PARAMETRY = [vracet '..']):
                      00653 ;       ZAZ_N naplnit daty ze zaznamu 1
                      00654 ; endif;
0CF6   1E59           00655         btfss HL_PARAMETRY,4            ; if (HL_PARAMETRY = [predchozi])
0CF7   2D13           00656         goto HLEDEJ_KONEC
0CF8   1FD9           00657         btfss HL_PARAMETRY,7            ;       and (!ROOT)
0CF9   2D13           00658         goto HLEDEJ_KONEC
                      00659         BANK_2
0CFA   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0CFB   1283               M                 bcf     STATUS,RP0    
0CFC   0830           00660         movfw 0x30
                      00661         BANK_0
0CFD   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0CFE   1283               M                 bcf     STATUS,RP0    
0CFF   39FF           00662         andlw h'FF'
0D00   1D03           00663         btfss STATUS,Z                          ;       and (ZAZ_N is empty):
0D01   2D13           00664         goto HLEDEJ_KONEC
0D02   1AD9           00665         btfsc HL_PARAMETRY,5            ; and (HL_PARAMETRY = [vracet '..'])
0D03   2D13           00666         goto HLEDEJ_KONEC
                      00667 
0D04   085A           00668         movfw HL_ADR_CL1
0D05   00BC           00669         movwf CLUSTER1
0D06   085B           00670         movfw HL_ADR_CL2
0D07   00BD           00671         movwf CLUSTER2
0D08   085C           00672         movfw HL_ADR_CL3
0D09   00BE           00673         movwf CLUSTER3
0D0A   085D           00674         movfw HL_ADR_CL4
0D0B   00BF           00675         movwf CLUSTER4
0D0C   3001           00676         movlw .1
0D0D   00E0           00677         movwf ZAZNAM1
0D0E   01E1           00678         clrf ZAZNAM2
0D0F   2361           00679         call SKOC_NA_ZAZNAM     
0D10   23E1           00680         call FILE_INFO
0D11   2514           00681         call ZAPIS_C_ZAZNAMU
0D12   2630           00682         call BUF2_LOW_TO_HIGH
                      00683 
0D13                  00684 HLEDEJ_KONEC                                    ; endif;
                      00685 
0D13   0008           00686         return
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 107


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00687 ;**************************************************************************
0D14                  00688 ZAPIS_C_ZAZNAMU
                      00689         ; podprogram FILE_INFO nam dava vsechny mozny informace o souboru, krome cisla zaznamu, 
                      00690         ; proto si toto cislo musime zapsat sami do bufferu2
0D14   0860           00691         movfw ZAZNAM1
                      00692         BANK_2
0D15   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0D16   1283               M                 bcf     STATUS,RP0    
0D17   00A0           00693         movwf 0x120
                      00694         BANK_0
0D18   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0D19   1283               M                 bcf     STATUS,RP0    
0D1A   0861           00695         movfw ZAZNAM2
                      00696         BANK_2
0D1B   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0D1C   1283               M                 bcf     STATUS,RP0    
0D1D   00A1           00697         movwf 0x121
                      00698         BANK_0
0D1E   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0D1F   1283               M                 bcf     STATUS,RP0    
0D20   0008           00699         return
                      00700 ;**************************************************************************
0D21                  00701 VYHOVUJE_ZAZNAM
                      00702         ; pokud zaznam ZAZ_A v bufferu2 vyhovuje hledani, nastavi bit TEMP1,0
0D21   01B6           00703         clrf TEMP1
                      00704         BANK_2
0D22   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0D23   1283               M                 bcf     STATUS,RP0    
0D24   0810           00705         movfw 0x110
                      00706         BANK_0
0D25   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0D26   1283               M                 bcf     STATUS,RP0    
                      00707         ;               1.     byte ->  = 00h -> zaznam je prazdny; 
                      00708         ;                                               = 01h -> zaznam je adresar; 
                      00709         ;                                               = 02h -> zaznam je soubor; 
                      00710         ;                                               = 06h -> zaznam je soubor s priponou MP3
0D27   00B7           00711         movwf TEMP2
0D28   39FF           00712         andlw h'FF'
0D29   1903           00713         btfsc STATUS,Z
0D2A   0008           00714         return                          ; pokud je zaznam prazdny, tak jej proste neberem
                      00715 ;HL_PARAMETRY   equ 0x059
                      00716 ;               0. bit = 0 > pokud hledáme soubory, tak pouze MP3
                      00717 ;                                1 > pokud hledáme soubory, vrací vechny soubory
                      00718 ;               1. bit = 0 > hledáme klasicky (nejdøíve adresáøe, poté soubory
                      00719 ;                                1 > hledáme pouze adresáøe, nebo soubory
                      00720 ;               2. bit = 0 > je-li nastaven 1. bit, hledáme pouze adresáøe
                      00721 ;                                1 > je-li nastaven 1. bit, hledáme pouze soubory
0D2B   1CD9           00722         btfss HL_PARAMETRY,1
0D2C   2D3A           00723         goto VYHOV_ZAZ_SOUBiADR
0D2D   1D59           00724         btfss HL_PARAMETRY,2
0D2E   2D37           00725         goto VYHOV_ZAZ_ONLY_ADR
0D2F   1C59           00726         btfss HL_PARAMETRY,0
0D30   2D34           00727         goto VYHOV_ZAZ_ONLY_MP3
0D31                  00728 VYHOV_ZAZ_ALL_FILES
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 108


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0D31   1C37           00729         btfss TEMP2,0
0D32   1436           00730         bsf TEMP1,0
0D33   0008           00731         return          
0D34                  00732 VYHOV_ZAZ_ONLY_MP3
0D34   1937           00733         btfsc TEMP2,2
0D35   1436           00734         bsf TEMP1,0
0D36   0008           00735         return
0D37                  00736 VYHOV_ZAZ_ONLY_ADR
0D37   1837           00737         btfsc TEMP2,0
0D38   1436           00738         bsf TEMP1,0
0D39   0008           00739         return
0D3A                  00740 VYHOV_ZAZ_SOUBiADR
0D3A   1C59           00741         btfss HL_PARAMETRY,0
0D3B   2D3E           00742         goto VYHOV_ZAZ_SOUBiADR_MP3
0D3C   1436           00743         bsf TEMP1,0
0D3D   0008           00744         return
0D3E                  00745 VYHOV_ZAZ_SOUBiADR_MP3
0D3E   1837           00746         btfsc TEMP2,0
0D3F   1436           00747         bsf TEMP1,0
0D40   1937           00748         btfsc TEMP2,2
0D41   1436           00749         bsf TEMP1,0
0D42   0008           00750         return
                      00751 ;**************************************************************************
0D43                  00752 COMPARE_BUFF2_L_H
                      00753 ; porovna nazvy souboru na zacatku bufferu2 a na konci bufferu2
                      00754 ; pokud v abecede je driv nazev v horni polovine buff2 da to TEMP1 0x01
                      00755 ; pokud v abecede je driv nazev v dolni polovine buff2 da to TEMP1 0x02
                      00756 ; pokud se nazvy shoduji da do TEMP1 0x00
0D43   01B6           00757         clrf TEMP1
                      00758         INDF_BANK_2                     ; stejne jako INDF_BANK_2
0D44   1783               M                         bsf STATUS,IRP    
                      00759         BANK_0
0D45   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0D46   1283               M                 bcf     STATUS,RP0    
0D47   3010           00760         movlw 0x10
0D48   0084           00761         movwf FSR
0D49   0800           00762         movfw INDF
0D4A   3903           00763         andlw h'03'                     ; ted nerozlisuji mezi souborem mp3 a ostatnimi soubory
0D4B   00B7           00764         movwf TEMP2
                      00765 
0D4C   3030           00766         movlw 0x30
0D4D   0084           00767         movwf FSR
0D4E   0800           00768         movfw INDF
0D4F   3903           00769         andlw h'03'                     ; ted nerozlisuji mezi souborem mp3 a ostatnimi soubory 
0D50   0237           00770         subwf TEMP2,W           ; prni byte z bufferu 2 - prvni byte z bufferu 1
                      00771 
0D51   1903           00772         btfsc STATUS,Z
0D52   2D69           00773         goto COMPARE_B1_B2_BYT2         ; prvni byt signalizujici typ byl shodny, pokracujeme bytem druh
                            ym (prvni byt nazvu)
0D53   1C03           00774         btfss STATUS,C
0D54   2DE1           00775         goto COMPARE_B1_B2_BUFF2        ; hodnota v bufferu 1 byla vetsi, proto je v abecede dal...
0D55   2DDC           00776         goto COMPARE_B1_B2_BUFF1
                      00777 ; tato procedura je temer shodna s tou nasledujici, proto jen zadame jinou hodnotu do FSR
                      00778 ; (misto pro buffer1 na horni pulku bufferu2) a nechame probehnout stejny kus kodu...
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 109


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00779 ;**************************************************************************
0D56                  00780 COMPARE_BUFF1_BUFF2
                      00781 ; porovna nazvy souboru na zacatku bufferu1 s bufferem2
                      00782 ; pokud v abecede je driv nazev v bufferu1 da to TEMP1 0x01
                      00783 ; pokud v abecede je driv nazev v bufferu2 da to TEMP1 0x02
                      00784 ; pokud se nazvy shoduji da do TEMP1 0x00
                      00785 
                      00786 ; zaznamy v obou bufferech vypadaji nasledovne:
                      00787 ;               1.     byte ->  = 00h -> zaznam je prazdny; 
                      00788 ;                                               = 01h -> zaznam je adresar; 
                      00789 ;                                               = 02h -> zaznam je soubor; 
                      00790 ;                                               = 06h -> zaznam je soubor s priponou MP3
                      00791 ;               2..9   byte -> 8 znaku dlouhe jmeno ("DOSovsky" tvar - napr. slouzka "dokumenty" = "DOKU
                            ME~1" )
                      00792 ;               10..12 byte -> u souboru tri znaky pripony (u adresaru vetsinou mezery - 20h 20h 20h)
                      00793 ;               13..16 byte -> 1. cluster souboru
0D56   01B6           00794         clrf TEMP1
                      00795         INDF_BANK_3                     ; stejne jako INDF_BANK_2
0D57   1783               M                         bsf STATUS,IRP    
                      00796         BANK_0
0D58   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0D59   1283               M                 bcf     STATUS,RP0    
0D5A   3010           00797         movlw 0x10
0D5B   0084           00798         movwf FSR
0D5C   0800           00799         movfw INDF
0D5D   3903           00800         andlw h'03'                     ; ted nerozlisuji mezi souborem mp3 a ostatnimi soubory
0D5E   00B7           00801         movwf TEMP2
                      00802 
0D5F   3090           00803         movlw 0x90
0D60   0084           00804         movwf FSR
0D61   0800           00805         movfw INDF
0D62   3903           00806         andlw h'03'                     ; ted nerozlisuji mezi souborem mp3 a ostatnimi soubory 
0D63   0237           00807         subwf TEMP2,W           ; prni byte z bufferu 2 - prvni byte z bufferu 1
                      00808 
0D64   1903           00809         btfsc STATUS,Z
0D65   2D69           00810         goto COMPARE_B1_B2_BYT2 ; prvni byt signalizujici typ byl shodny, pokracujeme bytem druhym (prvn
                            i byt nazvu)
0D66   1C03           00811         btfss STATUS,C
0D67   2DE1           00812         goto COMPARE_B1_B2_BUFF2        ; hodnota v bufferu 1 byla vetsi, proto je v abecede dal...
0D68   2DDC           00813         goto COMPARE_B1_B2_BUFF1
                      00814 
0D69                  00815 COMPARE_B1_B2_BYT2
                      00816         BANK_2
0D69   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0D6A   1283               M                 bcf     STATUS,RP0    
0D6B   0A84           00817         incf FSR,F
0D6C   0800           00818         movfw INDF
0D6D   0211           00819         subwf 0x111,W                           ; 2. byte z bufferu 2 - 2. byte z bufferu 1
0D6E   1903           00820         btfsc STATUS,Z
0D6F   2D73           00821         goto COMPARE_B1_B2_BYT3
0D70   1C03           00822         btfss STATUS,C
0D71   2DE1           00823         goto COMPARE_B1_B2_BUFF2        ; hodnota v bufferu 1 byla vetsi, proto je v abecede dal...
0D72   2DDC           00824         goto COMPARE_B1_B2_BUFF1
                      00825 
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 110


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0D73                  00826 COMPARE_B1_B2_BYT3
                      00827         BANK_2
0D73   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0D74   1283               M                 bcf     STATUS,RP0    
0D75   0A84           00828         incf FSR,F
0D76   0800           00829         movfw INDF
0D77   0212           00830         subwf 0x112,W                           ; 3. byte z bufferu 2 - 3. byte z bufferu 1
0D78   1903           00831         btfsc STATUS,Z
0D79   2D7D           00832         goto COMPARE_B1_B2_BYT4
0D7A   1C03           00833         btfss STATUS,C
0D7B   2DE1           00834         goto COMPARE_B1_B2_BUFF2        ; hodnota v bufferu 1 byla vetsi, proto je v abecede dal...
0D7C   2DDC           00835         goto COMPARE_B1_B2_BUFF1
                      00836 
0D7D                  00837 COMPARE_B1_B2_BYT4
                      00838         BANK_2
0D7D   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0D7E   1283               M                 bcf     STATUS,RP0    
0D7F   0A84           00839         incf FSR,F
0D80   0800           00840         movfw INDF
0D81   0213           00841         subwf 0x113,W                           ; 4. byte z bufferu 2 - 4. byte z bufferu 1
0D82   1903           00842         btfsc STATUS,Z
0D83   2D87           00843         goto COMPARE_B1_B2_BYT5
0D84   1C03           00844         btfss STATUS,C
0D85   2DE1           00845         goto COMPARE_B1_B2_BUFF2        ; hodnota v bufferu 1 byla vetsi, proto je v abecede dal...
0D86   2DDC           00846         goto COMPARE_B1_B2_BUFF1
                      00847 
0D87                  00848 COMPARE_B1_B2_BYT5
                      00849         BANK_2
0D87   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0D88   1283               M                 bcf     STATUS,RP0    
0D89   0A84           00850         incf FSR,F
0D8A   0800           00851         movfw INDF
0D8B   0214           00852         subwf 0x114,W                           ; 5. byte z bufferu 2 - 5. byte z bufferu 1
0D8C   1903           00853         btfsc STATUS,Z
0D8D   2D91           00854         goto COMPARE_B1_B2_BYT6
0D8E   1C03           00855         btfss STATUS,C
0D8F   2DE1           00856         goto COMPARE_B1_B2_BUFF2        ; hodnota v bufferu 1 byla vetsi, proto je v abecede dal...
0D90   2DDC           00857         goto COMPARE_B1_B2_BUFF1
                      00858 
0D91                  00859 COMPARE_B1_B2_BYT6
                      00860         BANK_2
0D91   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0D92   1283               M                 bcf     STATUS,RP0    
0D93   0A84           00861         incf FSR,F
0D94   0800           00862         movfw INDF
0D95   0215           00863         subwf 0x115,W                           ; 6. byte z bufferu 2 - 6. byte z bufferu 1
0D96   1903           00864         btfsc STATUS,Z
0D97   2D9B           00865         goto COMPARE_B1_B2_BYT7
0D98   1C03           00866         btfss STATUS,C
0D99   2DE1           00867         goto COMPARE_B1_B2_BUFF2        ; hodnota v bufferu 1 byla vetsi, proto je v abecede dal...
0D9A   2DDC           00868         goto COMPARE_B1_B2_BUFF1
                      00869 
0D9B                  00870 COMPARE_B1_B2_BYT7
                      00871         BANK_2
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 111


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0D9B   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0D9C   1283               M                 bcf     STATUS,RP0    
0D9D   0A84           00872         incf FSR,F
0D9E   0800           00873         movfw INDF
0D9F   0216           00874         subwf 0x116,W                           ; 7. byte z bufferu 2 - 7. byte z bufferu 1
0DA0   1903           00875         btfsc STATUS,Z
0DA1   2DA5           00876         goto COMPARE_B1_B2_BYT8
0DA2   1C03           00877         btfss STATUS,C
0DA3   2DE1           00878         goto COMPARE_B1_B2_BUFF2        ; hodnota v bufferu 1 byla vetsi, proto je v abecede dal...
0DA4   2DDC           00879         goto COMPARE_B1_B2_BUFF1
                      00880 
0DA5                  00881 COMPARE_B1_B2_BYT8
                      00882         BANK_2
0DA5   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0DA6   1283               M                 bcf     STATUS,RP0    
0DA7   0A84           00883         incf FSR,F
0DA8   0800           00884         movfw INDF
0DA9   0217           00885         subwf 0x117,W                           ; 8. byte z bufferu 2 - 8. byte z bufferu 1
0DAA   1903           00886         btfsc STATUS,Z
0DAB   2DAF           00887         goto COMPARE_B1_B2_BYT9
0DAC   1C03           00888         btfss STATUS,C
0DAD   2DE1           00889         goto COMPARE_B1_B2_BUFF2        ; hodnota v bufferu 1 byla vetsi, proto je v abecede dal...
0DAE   2DDC           00890         goto COMPARE_B1_B2_BUFF1
                      00891 
0DAF                  00892 COMPARE_B1_B2_BYT9
                      00893         BANK_2
0DAF   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0DB0   1283               M                 bcf     STATUS,RP0    
0DB1   0A84           00894         incf FSR,F
0DB2   0800           00895         movfw INDF
0DB3   0218           00896         subwf 0x118,W                           ; 9. byte z bufferu 2 - 9. byte z bufferu 1
0DB4   1903           00897         btfsc STATUS,Z
0DB5   2DB9           00898         goto COMPARE_B1_B2_BYT10
0DB6   1C03           00899         btfss STATUS,C
0DB7   2DE1           00900         goto COMPARE_B1_B2_BUFF2        ; hodnota v bufferu 1 byla vetsi, proto je v abecede dal...
0DB8   2DDC           00901         goto COMPARE_B1_B2_BUFF1
                      00902 
0DB9                  00903 COMPARE_B1_B2_BYT10
                      00904         BANK_2
0DB9   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0DBA   1283               M                 bcf     STATUS,RP0    
0DBB   0A84           00905         incf FSR,F
0DBC   0800           00906         movfw INDF
0DBD   0219           00907         subwf 0x119,W                           ; 10. byte z bufferu 2 - 10. byte z bufferu 1
0DBE   1903           00908         btfsc STATUS,Z
0DBF   2DC3           00909         goto COMPARE_B1_B2_BYT11
0DC0   1C03           00910         btfss STATUS,C
0DC1   2DE1           00911         goto COMPARE_B1_B2_BUFF2        ; hodnota v bufferu 1 byla vetsi, proto je v abecede dal...
0DC2   2DDC           00912         goto COMPARE_B1_B2_BUFF1
                      00913 
0DC3                  00914 COMPARE_B1_B2_BYT11
                      00915         BANK_2
0DC3   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0DC4   1283               M                 bcf     STATUS,RP0    
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 112


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0DC5   0A84           00916         incf FSR,F
0DC6   0800           00917         movfw INDF
0DC7   021A           00918         subwf 0x11A,W                           ; 11. byte z bufferu 2 - 11. byte z bufferu 1
0DC8   1903           00919         btfsc STATUS,Z
0DC9   2DCD           00920         goto COMPARE_B1_B2_BYT12
0DCA   1C03           00921         btfss STATUS,C
0DCB   2DE1           00922         goto COMPARE_B1_B2_BUFF2        ; hodnota v bufferu 1 byla vetsi, proto je v abecede dal...
0DCC   2DDC           00923         goto COMPARE_B1_B2_BUFF1
                      00924 
0DCD                  00925 COMPARE_B1_B2_BYT12
                      00926         BANK_2
0DCD   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0DCE   1283               M                 bcf     STATUS,RP0    
0DCF   0A84           00927         incf FSR,F
0DD0   0800           00928         movfw INDF
0DD1   021B           00929         subwf 0x11B,W                           ; 12. byte z bufferu 2 - 12. byte z bufferu 1
0DD2   1903           00930         btfsc STATUS,Z
0DD3   2DD7           00931         goto COMPARE_B1_B2_SHODNE
0DD4   1C03           00932         btfss STATUS,C
0DD5   2DE1           00933         goto COMPARE_B1_B2_BUFF2        ; hodnota v bufferu 1 byla vetsi, proto je v abecede dal...
0DD6   2DDC           00934         goto COMPARE_B1_B2_BUFF1
                      00935 
0DD7                  00936 COMPARE_B1_B2_SHODNE
                      00937         BANK_0
0DD7   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0DD8   1283               M                 bcf     STATUS,RP0    
0DD9   3000           00938         movlw h'00'
0DDA   00B6           00939         movwf TEMP1     
0DDB   0008           00940         return
0DDC                  00941 COMPARE_B1_B2_BUFF1
                      00942         BANK_0
0DDC   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0DDD   1283               M                 bcf     STATUS,RP0    
0DDE   3001           00943         movlw h'01'
0DDF   00B6           00944         movwf TEMP1     
0DE0   0008           00945         return
0DE1                  00946 COMPARE_B1_B2_BUFF2
                      00947         BANK_0
0DE1   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0DE2   1283               M                 bcf     STATUS,RP0    
0DE3   3002           00948         movlw h'02'
0DE4   00B6           00949         movwf TEMP1
0DE5   0008           00950         return
                      00951 ;**************************************************************************
0DE6                  00952 CLEAR_BUFFER1           ; BUFFER1 je 64bytu dat v bance 3 na adrese 0x190 - 0x1CF
                      00953                                         ; pouziva TEMP1
0DE6   3040           00954         movlw .64
0DE7   00B6           00955         movwf TEMP1
                      00956         INDF_BANK_3             ; neprime adresovani na banku 3
0DE8   1783               M                         bsf STATUS,IRP    
0DE9   3090           00957         movlw 0x90
0DEA   0084           00958         movwf FSR
0DEB   3000           00959         movlw .0
                      00960 
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 113


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0DEC                  00961 CLEAR_BEFFER1__CLEAR
0DEC   0080           00962         movwf INDF
0DED   0A84           00963         incf FSR,F
0DEE   0BB6           00964         decfsz TEMP1,F
0DEF   2DEC           00965         goto CLEAR_BEFFER1__CLEAR
                      00966 
                      00967         INDF_BANK_0             ; neprime adresovani na banku 0
0DF0   1383               M                         bcf STATUS,IRP    
0DF1   0008           00968         return
                      00969 ;**************************************************************************
0DF2                  00970 BUF2_TO_BUF1
                      00971         ; hodi 18 dat z dolni pulky bufferu 2 do dolni pulky bufferu 1
                      00972         ; 0x110 -> 0x190
                      00973         INDF_BANK_3
0DF2   1783               M                         bsf STATUS,IRP    
                      00974         BANK_2
0DF3   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0DF4   1283               M                 bcf     STATUS,RP0    
0DF5   3090           00975         movlw 0x90
0DF6   0084           00976         movwf FSR
                      00977 
0DF7   0810           00978         movfw 0x110
0DF8   0080           00979         movwf INDF
0DF9   0A84           00980         incf FSR,F
0DFA   0811           00981         movfw 0x111
0DFB   0080           00982         movwf INDF
0DFC   0A84           00983         incf FSR,F
0DFD   0812           00984         movfw 0x112
0DFE   0080           00985         movwf INDF
0DFF   0A84           00986         incf FSR,F
0E00   0813           00987         movfw 0x113
0E01   0080           00988         movwf INDF
0E02   0A84           00989         incf FSR,F
0E03   0814           00990         movfw 0x114
0E04   0080           00991         movwf INDF
0E05   0A84           00992         incf FSR,F
0E06   0815           00993         movfw 0x115
0E07   0080           00994         movwf INDF
0E08   0A84           00995         incf FSR,F
0E09   0816           00996         movfw 0x116
0E0A   0080           00997         movwf INDF
0E0B   0A84           00998         incf FSR,F
0E0C   0817           00999         movfw 0x117
0E0D   0080           01000         movwf INDF
0E0E   0A84           01001         incf FSR,F
0E0F   0818           01002         movfw 0x118
0E10   0080           01003         movwf INDF
0E11   0A84           01004         incf FSR,F
0E12   0819           01005         movfw 0x119
0E13   0080           01006         movwf INDF
0E14   0A84           01007         incf FSR,F
0E15   081A           01008         movfw 0x11A
0E16   0080           01009         movwf INDF
0E17   0A84           01010         incf FSR,F
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 114


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0E18   081B           01011         movfw 0x11B
0E19   0080           01012         movwf INDF
0E1A   0A84           01013         incf FSR,F
0E1B   081C           01014         movfw 0x11C
0E1C   0080           01015         movwf INDF
0E1D   0A84           01016         incf FSR,F
0E1E   081D           01017         movfw 0x11D
0E1F   0080           01018         movwf INDF
0E20   0A84           01019         incf FSR,F
0E21   081E           01020         movfw 0x11E
0E22   0080           01021         movwf INDF
0E23   0A84           01022         incf FSR,F
0E24   081F           01023         movfw 0x11F
0E25   0080           01024         movwf INDF
0E26   0A84           01025         incf FSR,F
                      01026 
0E27   0820           01027         movfw 0x120
0E28   0080           01028         movwf INDF
0E29   0A84           01029         incf FSR,F
0E2A   0821           01030         movfw 0x121
0E2B   0080           01031         movwf INDF
0E2C   0A84           01032         incf FSR,F
                      01033         BANK_0
0E2D   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0E2E   1283               M                 bcf     STATUS,RP0    
0E2F   0008           01034         return
                      01035 ;**************************************************************************
0E30                  01036 BUF2_LOW_TO_HIGH
                      01037         ; hodi 18 dat z dolni pulky bufferu 2 do horni pulky bufferu 2
                      01038         ; 0x110 - 0x121 -> 0x130 - 0x141
                      01039         BANK_2
0E30   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
0E31   1283               M                 bcf     STATUS,RP0    
0E32   0810           01040         movfw 0x110
0E33   00B0           01041         movwf 0x130
0E34   0811           01042         movfw 0x111
0E35   00B1           01043         movwf 0x131
0E36   0812           01044         movfw 0x112
0E37   00B2           01045         movwf 0x132
0E38   0813           01046         movfw 0x113
0E39   00B3           01047         movwf 0x133
0E3A   0814           01048         movfw 0x114
0E3B   00B4           01049         movwf 0x134
0E3C   0815           01050         movfw 0x115
0E3D   00B5           01051         movwf 0x135
0E3E   0816           01052         movfw 0x116
0E3F   00B6           01053         movwf 0x136
0E40   0817           01054         movfw 0x117
0E41   00B7           01055         movwf 0x137
0E42   0818           01056         movfw 0x118
0E43   00B8           01057         movwf 0x138
0E44   0819           01058         movfw 0x119
0E45   00B9           01059         movwf 0x139
0E46   081A           01060         movfw 0x11A
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 115


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0E47   00BA           01061         movwf 0x13A
0E48   081B           01062         movfw 0x11B
0E49   00BB           01063         movwf 0x13B
0E4A   081C           01064         movfw 0x11C
0E4B   00BC           01065         movwf 0x13C
0E4C   081D           01066         movfw 0x11D
0E4D   00BD           01067         movwf 0x13D
0E4E   081E           01068         movfw 0x11E
0E4F   00BE           01069         movwf 0x13E
0E50   081F           01070         movfw 0x11F
0E51   00BF           01071         movwf 0x13F
                      01072 
0E52   0820           01073         movfw 0x120
0E53   00C0           01074         movwf 0x140
0E54   0821           01075         movfw 0x121
0E55   00C1           01076         movwf 0x141
                      01077         BANK_0
0E56   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0E57   1283               M                 bcf     STATUS,RP0    
0E58   0008           01078         return
                      01079 ;**************************************************************************
0E59                  01080 LONG_NAME
                      01081 ; Tato procedura prevezme v HL_ADR_CL[1-4] cislo prvniho clusteru adresare a v ZAZNAM[1-2] cislo zaznamu
                             
                      01082 ; od kteremu se pokusi najit dlouhe jmeno. Toto dlouhe jmeno umisti do bufferu 2
                      01083 ; Dlouhe jmeno je ukonceno nulovym bytem. Pokud v bufferu 2 se nulovy byt nevyskytuje, je delka dlouheho
                      01084 ; jmena delsi ci rovna 65.
                      01085 ; V POZICE vraci 00h pri nenalezeni dlouheho jmena a 01h pri pravdepodobnem nalezeni dlouheho jmena.
                      01086 
                      01087 ; 65 znaku neni moc, neco se tam ale vejde "1-3. G & D - Purify (Gabriel & Dresden Remix) featuring Ball
                            igom"   (ingo.mp3)
                      01088 ; vyvojak:
                      01089 ;
                      01090 ; CLEAR_BUFFER2
                      01091 ;
                      01092 ; ZAZNAMU_vBUFFERU_DISKU := 0
                      01093 ; IF (ZAZNAM < 5):                                      // zaznamy cislujeme od 0, 
                      01094 ;       HL_PARAMETRY := ZAZNAM;
                      01095 ;       ZAZNAM := 0
                      01096 ; else:
                      01097 ;       ZAZNAM := ZAZNAM - 5                    // protoze chceme prohledat 5 predchozich
                      01098 ;       HL_PARAMETRY := 5
                      01099 ; endif
                      01100 ;
                      01101 ; while (HL_PARAMETRY <> 0)
                      01102 ;       if (ZAZNAMU_vBUFFERU_DISKU = 0):
                      01103 ;               SKOC_NA_ZAZNAM
                      01104 ;       endif;
                      01105 
                      01106 ;////////////////////
                      01107 ; if (BUFF1[0] != 0) and (BUFF1[0] != E5h) and (BUFF1[11] = 0Fh):
                      01108 ;               // v bufferu1 mame zaznam obsahujici dlouhe jmeno 
                      01109 ;               FSR := (HL_PARAMETRY * 13) + 3
                      01110 ;               INDF := BUFF1[1]
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 116


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01111 ;               inc FSR
                      01112 ;               INDF := BUFF1[3]
                      01113 ;               inc FSR
                      01114 ;               ...
                      01115 ; else:
                      01116 ;               CLEAR_BUFFER2   // zaznam neobsahuje dlouhe jmeno, proto jsou vsechny predchozi zaznamy 
                            k nicemu
                      01117 ; endif;
                      01118 ;////////////////////
                      01119 
                      01120 ;       HL_PARAMETRY --
                      01121 ;       ZAZNAM ++
                      01122 ;       ZAZNAMU_vBUFFERU_DISKU --
                      01123 ; endwhile
                      01124         PROG_PAGE_0
0E59   118A               M                         bcf PCLATH,3
0E5A   120A               M                         bcf PCLATH,4
0E5B   23BA           01125         call CLEAR_BUFFER2                              ;               CLEAR_BUFFER2   // zaznam neobsa
                            huje dlouhe jmeno, proto jsou vsechny predchozi zaznamy k nicemu
                      01126         PROG_PAGE_1
0E5C   158A               M                         bsf PCLATH,3
0E5D   120A               M                         bcf PCLATH,4
                      01127 
0E5E   01DE           01128         clrf ZAZNAMU_vBUFFERU_DISKU             ; ZAZNAMU_vBUFFERU_DISKU := 0
0E5F   01BB           01129         clrf POZICE
0E60   0860           01130         movfw ZAZNAM1
0E61   3C04           01131         sublw .4
0E62   1C03           01132         btfss STATUS,C
0E63   2E6C           01133         goto LONG_NAME_ELSE1
0E64   0861           01134         movfw ZAZNAM2
0E65   39FF           01135         andlw h'FF'
0E66   1D03           01136         btfss STATUS,Z                                  ; IF (ZAZNAM < 5):                              
                                    // zaznamy cislujeme od 0, 
0E67   2E6C           01137         goto LONG_NAME_ELSE1
                      01138 
0E68   0860           01139         movfw ZAZNAM1
0E69   00D9           01140         movwf HL_PARAMETRY                              ;       HL_PARAMETRY := ZAZNAM;
0E6A   01E0           01141         clrf ZAZNAM1                                    ;       ZAZNAM := 0
0E6B   2E72           01142         goto LONG_NAME_ENDIF1
0E6C                  01143 LONG_NAME_ELSE1                                         ; else:
0E6C   3005           01144         movlw .5
0E6D   02E0           01145         subwf ZAZNAM1,F                                 ;       ZAZNAM := ZAZNAM - 5                    
                            // protoze chceme prohledat 5 predchozich
0E6E   1C03           01146         btfss STATUS,C
0E6F   03E1           01147         decf ZAZNAM2,F
0E70   3005           01148         movlw .5
0E71   00D9           01149         movwf HL_PARAMETRY                              ;       HL_PARAMETRY := 5
0E72                  01150 LONG_NAME_ENDIF1                                        ; endif
                      01151 
0E72                  01152 LONG_NAME_WHILE                                         ; while (HL_PARAMETRY <> 0)
0E72   0859           01153         movfw HL_PARAMETRY
0E73   39FF           01154         andlw h'FF'
0E74   1903           01155         btfsc STATUS,Z
0E75   2EDD           01156         goto LONG_NAME_ENDWHILE
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 117


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01157         
0E76   085A           01158         movfw HL_ADR_CL1
0E77   00BC           01159         movwf CLUSTER1
0E78   085B           01160         movfw HL_ADR_CL2
0E79   00BD           01161         movwf CLUSTER2
0E7A   085C           01162         movfw HL_ADR_CL3
0E7B   00BE           01163         movwf CLUSTER3
0E7C   085D           01164         movfw HL_ADR_CL4
0E7D   00BF           01165         movwf CLUSTER4
                      01166 
0E7E   085E           01167         movfw ZAZNAMU_vBUFFERU_DISKU
0E7F   39FF           01168         andlw h'FF'
0E80   1903           01169         btfsc STATUS,Z                                  ;       if (ZAZNAMU_vBUFFERU_DISKU = 0):
0E81   2361           01170         call SKOC_NA_ZAZNAM                     ;               SKOC_NA_ZAZNAM  endif;
                      01171         
0E82   183B           01172         btfsc POZICE,0          ; SKOC_NA_ZAZNAM - pokud ZAZNAM[1-2] ukazuji mimo adresar, vrati v POZIC
                            E FFh (jinak 00h)
0E83   2EE0           01173         goto LONG_NAME_MIMO_ROZSAH
                      01174 
                      01175 ;////////////////////////////////
                      01176 ;       //tady probehne cteni zaznamu, zjisteni, zda jde o dlouhe jmeno a jeho cteni;   
0E84   3010           01177         movlw .16
0E85   00B6           01178         movwf TEMP1
                      01179         PROG_PAGE_0
0E86   118A               M                         bcf PCLATH,3
0E87   120A               M                         bcf PCLATH,4
0E88   23AC           01180         call ZAPIS_DO_BUFFERU_1                 ; kazdy zaznam v adresari ma 32 bytu
                      01181         PROG_PAGE_1
0E89   158A               M                         bsf PCLATH,3
0E8A   120A               M                         bcf PCLATH,4
                      01182 
                      01183         BANK_3
0E8B   1703               M                 bsf     STATUS,RP1              ; BANK3  RP1:RP0 = 11
0E8C   1683               M                 bsf     STATUS,RP0    
0E8D   0810           01184         movfw 0x190
0E8E   39FF           01185         andlw h'FF'
0E8F   1903           01186         btfsc STATUS,Z
0E90   2ED0           01187         goto LONG_NAME_ELSE2
0E91   3CE5           01188         sublw h'E5'
0E92   1903           01189         btfsc STATUS,Z
0E93   2ED0           01190         goto LONG_NAME_ELSE2
0E94   081B           01191         movfw 0x19B
0E95   3C0F           01192         sublw h'0F'
0E96   1D03           01193         btfss STATUS,Z
0E97   2ED0           01194         goto LONG_NAME_ELSE2
0E98                  01195 LONG_NAME_IF2                                           ; if (BUFF1[0] != 0) and (BUFF1[0] != E5h) and (
                            BUFF1[11] = 0Fh):
                      01196         BANK_0                                                  ;               // v bufferu1 mame zazna
                            m obsahujici dlouhe jmeno 
0E98   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0E99   1283               M                 bcf     STATUS,RP0    
0E9A   0859           01197         movfw HL_PARAMETRY
0E9B   00B6           01198         movwf TEMP1
0E9C   3000           01199         movlw .0
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 118


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0E9D                  01200 LONG_NAME_NASOBENI
0E9D   3E0D           01201         addlw .13
0E9E   0BB6           01202         decfsz TEMP1,f
0E9F   2E9D           01203         goto LONG_NAME_NASOBENI
0EA0   3E03           01204         addlw .3        
0EA1   0084           01205         movwf FSR                                               ;               FSR := (HL_PARAMETRY * 1
                            3) + 3
                      01206 
                      01207         BANK_3
0EA2   1703               M                 bsf     STATUS,RP1              ; BANK3  RP1:RP0 = 11
0EA3   1683               M                 bsf     STATUS,RP0    
                      01208         INDF_BANK_2
0EA4   1783               M                         bsf STATUS,IRP    
0EA5   0811           01209         movfw 0x190+.1
0EA6   0080           01210         movwf INDF
0EA7   0A84           01211         incf FSR,F
0EA8   0813           01212         movfw 0x190+.3
0EA9   0080           01213         movwf INDF
0EAA   0A84           01214         incf FSR,F
0EAB   0815           01215         movfw 0x190+.5
0EAC   0080           01216         movwf INDF
0EAD   0A84           01217         incf FSR,F
0EAE   0817           01218         movfw 0x190+.7
0EAF   0080           01219         movwf INDF
0EB0   0A84           01220         incf FSR,F
0EB1   0819           01221         movfw 0x190+.9
0EB2   0080           01222         movwf INDF
0EB3   0A84           01223         incf FSR,F
0EB4   081E           01224         movfw 0x190+.14
0EB5   0080           01225         movwf INDF
0EB6   0A84           01226         incf FSR,F
0EB7   0820           01227         movfw 0x190+.16
0EB8   0080           01228         movwf INDF
0EB9   0A84           01229         incf FSR,F
0EBA   0822           01230         movfw 0x190+.18
0EBB   0080           01231         movwf INDF
0EBC   0A84           01232         incf FSR,F
0EBD   0824           01233         movfw 0x190+.20
0EBE   0080           01234         movwf INDF
0EBF   0A84           01235         incf FSR,F
0EC0   0826           01236         movfw 0x190+.22
0EC1   0080           01237         movwf INDF
0EC2   0A84           01238         incf FSR,F
0EC3   0828           01239         movfw 0x190+.24
0EC4   0080           01240         movwf INDF
0EC5   0A84           01241         incf FSR,F
0EC6   082C           01242         movfw 0x190+.28
0EC7   0080           01243         movwf INDF
0EC8   0A84           01244         incf FSR,F
0EC9   082E           01245         movfw 0x190+.30
0ECA   0080           01246         movwf INDF
0ECB   0A84           01247         incf FSR,F
                      01248         INDF_BANK_0
0ECC   1383               M                         bcf STATUS,IRP    
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 119


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01249         BANK_0
0ECD   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0ECE   1283               M                 bcf     STATUS,RP0    
0ECF   2ED7           01250         goto LONG_NAME_ENDIF2
0ED0                  01251 LONG_NAME_ELSE2                                         ; else:
                      01252         BANK_0
0ED0   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
0ED1   1283               M                 bcf     STATUS,RP0    
                      01253         PROG_PAGE_0
0ED2   118A               M                         bcf PCLATH,3
0ED3   120A               M                         bcf PCLATH,4
0ED4   23BA           01254         call CLEAR_BUFFER2                              ;               CLEAR_BUFFER2   // zaznam neobsa
                            huje dlouhe jmeno, proto jsou vsechny predchozi zaznamy k nicemu
                      01255         PROG_PAGE_1
0ED5   158A               M                         bsf PCLATH,3
0ED6   120A               M                         bcf PCLATH,4
0ED7                  01256 LONG_NAME_ENDIF2                                        ; endif;
                      01257 ;////////////////////////////////
                      01258 
0ED7   0AE0           01259         incf ZAZNAM1,F
0ED8   1903           01260         btfsc STATUS,Z
0ED9   0AE1           01261         incf ZAZNAM2,F                                  ;       ZAZNAM ++
0EDA   03D9           01262         decf HL_PARAMETRY,F                             ;       HL_PARAMETRY --
0EDB   03DE           01263         decf ZAZNAMU_vBUFFERU_DISKU,F   ;       ZAZNAMU_vBUFFERU_DISKU --
0EDC   2E72           01264         goto LONG_NAME_WHILE
0EDD                  01265 LONG_NAME_ENDWHILE                                      ; endwhile
0EDD   3001           01266         movlw .1
0EDE   00BB           01267         movwf POZICE
0EDF   0008           01268         return
0EE0                  01269 LONG_NAME_MIMO_ROZSAH
0EE0   3000           01270         movlw .0
0EE1   00BB           01271         movwf POZICE
0EE2   0008           01272         return
                      01273 ;**************************************************************************
0EE3                  01274 HLEDEJ_V_NADRAZENEM
                      01275 ; v CLUSTER prijme prvni cluster adresare
                      01276 
                      01277 ; v nadrazenem adresari se pokusi najit zaznam odkazujici na tento adresar
                      01278 ; na zacatek BUFFERU 1 da cislo clusteru se zacatkem nadrazeneho adresare, 
                      01279 ; do HL_ADR_CL da prvni cluster predaneho adresare a v ZAZNAM vratime cislo 
                      01280 ; zaznamu odkazujici na HL_ADR_CL
0EE3   083C           01281         movfw CLUSTER1
0EE4   00DA           01282         movwf HL_ADR_CL1
0EE5   083D           01283         movfw CLUSTER2
0EE6   00DB           01284         movwf HL_ADR_CL2
0EE7   083E           01285         movfw CLUSTER3
0EE8   00DC           01286         movwf HL_ADR_CL3
0EE9   083F           01287         movfw CLUSTER4
0EEA   00DD           01288         movwf HL_ADR_CL4
                      01289 
0EEB   01BB           01290         clrf POZICE
                      01291         PROG_PAGE_0
0EEC   118A               M                         bcf PCLATH,3
0EED   120A               M                         bcf PCLATH,4
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 120


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0EEE   2488           01292         call CLUSTER_TO_LBA
0EEF   3001           01293         movlw .1
0EF0   00A6           01294         movwf SECTOR_C
0EF1   23E1           01295         call READ_SECTOR        ; precteme prvni sektor z prvniho clusteru adresare     
0EF2   301A           01296         movlw .26                       ; prvnich 26 slov je ted nepotrebnych
0EF3   00B6           01297         movwf TEMP1
0EF4   23A4           01298         call PRESKOC
                      01299 
0EF5   2382           01300         call READ_DATA
0EF6   0820           01301         movfw DATA_L
0EF7   00BE           01302         movwf CLUSTER3
0EF8   0821           01303         movfw DATA_H
0EF9   00BF           01304         movwf CLUSTER4
                      01305 
0EFA   3002           01306         movlw .2                        ; dalsi 4 byty jsou ted nepotrebne
0EFB   00B6           01307         movwf TEMP1
0EFC   23A4           01308         call PRESKOC
                      01309 
0EFD   2382           01310         call READ_DATA
0EFE   0820           01311         movfw DATA_L
0EFF   00BC           01312         movwf CLUSTER1
0F00   0821           01313         movfw DATA_H
0F01   00BD           01314         movwf CLUSTER2
                      01315         PROG_PAGE_1
0F02   158A               M                         bsf PCLATH,3
0F03   120A               M                         bcf PCLATH,4
                      01316 
                      01317         ; v CLUSTER ted mame cislo prvniho clusteru nadrazeneho adresare. Umistime jej na zacatek BUFFER
                            U 1
                      01318         INDF_BANK_3
0F04   1783               M                         bsf STATUS,IRP    
0F05   3090           01319         movlw h'90'
0F06   0084           01320         movwf FSR
0F07   083C           01321         movfw CLUSTER1
0F08   0080           01322         movwf INDF
0F09   0A84           01323         incf FSR,f
0F0A   083D           01324         movfw CLUSTER2
0F0B   0080           01325         movwf INDF
0F0C   0A84           01326         incf FSR,f
0F0D   083E           01327         movfw CLUSTER3
0F0E   0080           01328         movwf INDF
0F0F   0A84           01329         incf FSR,f
0F10   083F           01330         movfw CLUSTER4
0F11   0080           01331         movwf INDF
0F12   0A84           01332         incf FSR,f
                      01333         
0F13   01E0           01334         clrf ZAZNAM1
0F14   01E1           01335         clrf ZAZNAM2
0F15                  01336 HLEDEJVNAD_CLUSTER
0F15   01BB           01337         clrf POZICE
0F16                  01338 HLEDEJVNAD_SECTOR
                      01339         PROG_PAGE_0
0F16   118A               M                         bcf PCLATH,3
0F17   120A               M                         bcf PCLATH,4
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 121


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0F18   2488           01340         call CLUSTER_TO_LBA
0F19   3001           01341         movlw .1
0F1A   00A6           01342         movwf SECTOR_C
0F1B   23E1           01343         call READ_SECTOR
                      01344         PROG_PAGE_1
0F1C   158A               M                         bsf PCLATH,3
0F1D   120A               M                         bcf PCLATH,4
                      01345 
0F1E   3010           01346         movlw .16
0F1F   00B7           01347         movwf TEMP2
0F20                  01348 HLEDEJVNAD_ZAZNAM
0F20   01B8           01349         clrf TEMP3                                      ; pokud bude zaznam vyhovovat, bude TEMP3 0
                      01350         PROG_PAGE_0
0F21   118A               M                         bcf PCLATH,3
0F22   120A               M                         bcf PCLATH,4
0F23   2382           01351         call READ_DATA
0F24   0820           01352         movfw DATA_L
0F25   39FF           01353         andlw h'FF'
0F26   1903           01354         btfsc STATUS,Z                          ; pokud 1. znak jmena souboru = 00h, je zaznam prazdny
0F27   1438           01355         bsf TEMP3,0
                      01356 
0F28   0820           01357         movfw DATA_L
0F29   3CE5           01358         sublw h'E5'
0F2A   1903           01359         btfsc STATUS,Z                          ; pokud 1. znak jmena souboru = E5h, je zaznam prazdny
0F2B   1438           01360         bsf TEMP3,0
                      01361 
0F2C   3004           01362         movlw .4
0F2D   00B6           01363         movwf TEMP1
0F2E   23A4           01364         call PRESKOC                            ; jmeno (8) a priponu (3) ted nepotrebujeme
                      01365 
0F2F   2382           01366         call READ_DATA
0F30   0821           01367         movfw DATA_H
0F31   3910           01368         andlw h'10'
0F32   3C10           01369         sublw h'10'
0F33   1D03           01370         btfss STATUS,Z                          ; if (atributy and 10h) = 10h -> adresar
0F34   1438           01371         bsf TEMP3,0
                      01372 
0F35   3004           01373         movlw .4
0F36   00B6           01374         movwf TEMP1
0F37   23A4           01375         call PRESKOC                            ; dalsich 8 bytu je nam k nicemu
                      01376 
0F38   2382           01377         call READ_DATA
0F39   0820           01378         movfw DATA_L
0F3A   025C           01379         subwf HL_ADR_CL3,w
0F3B   1D03           01380         btfss STATUS,Z
0F3C   1438           01381         bsf TEMP3,0
0F3D   0821           01382         movfw DATA_H
0F3E   025D           01383         subwf HL_ADR_CL4,w
0F3F   1D03           01384         btfss STATUS,Z
0F40   1438           01385         bsf TEMP3,0
                      01386 
0F41   3002           01387         movlw .2                                        ; dalsi 4 byty jsou ted nepotrebne
0F42   00B6           01388         movwf TEMP1
0F43   23A4           01389         call PRESKOC
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 122


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01390 
0F44   2382           01391         call READ_DATA
0F45   0820           01392         movfw DATA_L
0F46   025A           01393         subwf HL_ADR_CL1,w
0F47   1D03           01394         btfss STATUS,Z
0F48   1438           01395         bsf TEMP3,0
0F49   0821           01396         movfw DATA_H
0F4A   025B           01397         subwf HL_ADR_CL2,w
0F4B   1D03           01398         btfss STATUS,Z
0F4C   1438           01399         bsf TEMP3,0
                      01400 
0F4D   3002           01401         movlw .2                                        ; musime precist i posledni 4 byty ze zaznamu
0F4E   00B6           01402         movwf TEMP1
0F4F   23A4           01403         call PRESKOC
                      01404         PROG_PAGE_1
0F50   158A               M                         bsf PCLATH,3
0F51   120A               M                         bcf PCLATH,4
                      01405         
0F52   0838           01406         movfw TEMP3
0F53   39FF           01407         andlw h'FF'
0F54   1903           01408         btfsc STATUS,Z
0F55   2F69           01409         goto HLEDEJVNAD_KONEC           ; pokud se cluster shodoval, koncime
                      01410 
0F56   0AE0           01411         incf ZAZNAM1,f
0F57   1903           01412         btfsc STATUS,Z
0F58   0AE1           01413         incf ZAZNAM2,f                          ; ZAZNAM ++
                      01414 
0F59   0BB7           01415         decfsz TEMP2,f
0F5A   2F20           01416         goto HLEDEJVNAD_ZAZNAM
                      01417 
0F5B   0ABB           01418         incf POZICE,f
0F5C   083B           01419         movfw POZICE
0F5D   024C           01420         subwf CLUSTER_SIZE,w
0F5E   1D03           01421         btfss STATUS,Z
0F5F   2F16           01422         goto HLEDEJVNAD_SECTOR
                      01423 
                      01424         PROG_PAGE_0
0F60   118A               M                         bcf PCLATH,3
0F61   120A               M                         bcf PCLATH,4
0F62   24EB           01425         call NEXT_CLUSTER
                      01426         PROG_PAGE_1
0F63   158A               M                         bsf PCLATH,3
0F64   120A               M                         bcf PCLATH,4
0F65   083B           01427         movfw POZICE
0F66   39FF           01428         andlw h'FF'
0F67   1903           01429         btfsc STATUS,Z
0F68   2F15           01430         goto HLEDEJVNAD_CLUSTER
                      01431 
0F69                  01432 HLEDEJVNAD_KONEC
0F69   0008           01433         return
                      01434 ;**************************************************************************
                      00085 
                      00086 
1000                  00087  org 0x1000                                     ; PAGE 2
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 123


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00088         include "particions.asm"; podprogramy pro analyzu MBR, nacteni a kontrolu FAT oddilu
                      00001 ;**********************************************************
                      00002 ;**********************************************************
                      00003 ;**********************************************************
                      00004 ; podprogramy pro analyzu MBR, nacteni a kontrolu FAT oddilu
                      00005 ;**********************************************************
                      00006 ;**********************************************************
                      00007 ;**********************************************************
                      00008 
                      00009 ;**************************************************************************
1000                  00010 SCAN_MBR
                      00011         ; Tato procedura ma na prvni pohled jednoduchy ukol, podiva se do MBR a do BUFFERU 2 hodi nasled
                            ujici data:
                      00012         ; 4 x 16 bytovy zaznam, kde kazdy zaznam reprezentuje jeden oddil se systemem FAT32
                      00013         ; struktura zaznamu je nasledujici:             1  byt (pokud = 0 tak v zaznamu neni zaznam o od
                            dilu, pokud = FFh , je zaznam o oddilu)
                      00014         ;                                                                               4  byty = adresa
                             kde se nachazi spousteci zaznam oddilu
                      00015         ;                                                                               11 bytu = jmenov
                            ka oddilu s FAT32 (neni dulezita, jen aby bylo co vypsat na display :-)
                      00016         PROG_PAGE_0
1000   118A               M                         bcf PCLATH,3
1001   120A               M                         bcf PCLATH,4
1002   23BA           00017         call CLEAR_BUFFER2
                      00018         PROG_PAGE_2
1003   118A               M                         bcf PCLATH,3
1004   160A               M                         bsf PCLATH,4
                      00019 
1005   01A7           00020         clrf LBA1
1006   01A8           00021         clrf LBA2
1007   01A9           00022         clrf LBA3
1008   01AA           00023         clrf LBA4                               ; jako prvni cteme MBR
                      00024 
1009   01BB           00025         clrf POZICE                             ; kolik zaznamu o oddilech uz bylo zapsano do bufferu2
100A                  00026 SCAN_BR                                         
                      00027         ; tady na tom navesti mame zadanou adresu MBR nebo BR nejakeho rozsireneho oddilu
100A   3001           00028         movlw .1
100B   00A6           00029         movwf SECTOR_C
                      00030         PROG_PAGE_0
100C   118A               M                         bcf PCLATH,3
100D   120A               M                         bcf PCLATH,4
100E   23E1           00031         call READ_SECTOR                ; cteme MBR nebo BR rozsireneho oddilu
                      00032 
100F   30DF           00033         movlw .223                              ; 223 slov = 446 bytu
1010   00B6           00034         movwf TEMP1
1011   23A4           00035         call PRESKOC                    ; na prvnich 446 bytech MBR je zavadeci program systemu (samozre
                            jme, pokud na disku system je)
1012   3020           00036         movlw .32
1013   00B6           00037         movwf TEMP1
1014   23AC           00038         call ZAPIS_DO_BUFFERU_1 ; do bufferu si dame vsechny zaznamy BR (16*4=64bytu / 32slov)
1015   3001           00039         movlw .1
1016   00B6           00040         movwf TEMP1
1017   23A4           00041         call PRESKOC
                      00042         PROG_PAGE_2
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 124


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1018   118A               M                         bcf PCLATH,3
1019   160A               M                         bsf PCLATH,4
                      00043         ; tak ted jsme precetli cely MBR/BR a zaznamy o jeho oddilech mame v BEFFERU 1, tak se jdem na n
                            e podivat...
                      00044         
                      00045         ; Nejdriv si ale hodime aktualni LBA adresu do operandu Y pro aritmeticke operace
                      00046         INDF_BANK_1                             ; neprime adresovani na banku 1 (aritmeticke operace)
101A   1383               M                         bcf STATUS,IRP    
101B   30A4           00047         movlw 0xA4                              ; FSR na OPERAND_Y
101C   0084           00048         movwf FSR       
101D   0827           00049         movfw LBA1
101E   0080           00050         movwf INDF
101F   0A84           00051         incf FSR,F
1020   0828           00052         movfw LBA2
1021   0080           00053         movwf INDF
1022   0A84           00054         incf FSR,F
1023   0829           00055         movfw LBA3
1024   0080           00056         movwf INDF
1025   0A84           00057         incf FSR,F
1026   082A           00058         movfw LBA4
1027   0080           00059         movwf INDF
1028   0A84           00060         incf FSR,F
                      00061 
                      00062         INDF_BANK_3                             ; neprime adresovani na banku 3 (buffer 1)      
1029   1783               M                         bsf STATUS,IRP    
102A   3094           00063         movlw 0x94                              ; 90h (buffer1) + 4 (pozice kde je ulozen identifikator 
                            souboroveho systemu prvniho zaznamu BR)
102B   0084           00064         movwf FSR
102C   0800           00065         movfw INDF
102D   3C0C           00066         sublw h'0C'                             ; Pokud se FileSystem <> 0Ch...
102E   1D03           00067         btfss STATUS,Z
102F   3C01           00068         sublw .1                                ; ...ani 0Bh...
1030   1D03           00069         btfss STATUS,Z
1031   285B           00070         goto SCAN_MBR__HLEDEJ_ROZSIRENY_ODDIL   ; ...tak hledej rozsireny oddil.
                      00071 
                      00072         ; pokud jsme v teto casti programu, tak prvni zaznam MBR/BR obsahuje oddil FAT32, s reprezentaci
                             adres stylem LBA
                      00073         ; Tady pozor, v MBR/BR neni zapsana LBA adresa oddilu, ale relativni vzdalenost (offset) od MBR/
                            BR.
                      00074         ; To znamena, ze k adrese v (M)BR musime pricist offset oddilu.
                      00075         BANK_1
1032   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
1033   1683               M                 bsf     STATUS,RP0    
1034   3098           00076         movlw 0x98                              ; offset prvniho zaznamu 
1035   0084           00077         movwf FSR
1036   0800           00078         movfw INDF
1037   00A0           00079         movwf OPERAND_X1
1038   0A84           00080         incf FSR,F
1039   0800           00081         movfw INDF
103A   00A1           00082         movwf OPERAND_X2
103B   0A84           00083         incf FSR,F
103C   0800           00084         movfw INDF
103D   00A2           00085         movwf OPERAND_X3
103E   0A84           00086         incf FSR,F
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 125


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

103F   0800           00087         movfw INDF
1040   00A3           00088         movwf OPERAND_X4
                      00089         BANK_0
1041   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
1042   1283               M                 bcf     STATUS,RP0    
                      00090 
                      00091         PROG_PAGE_0
1043   118A               M                         bcf PCLATH,3
1044   120A               M                         bcf PCLATH,4
1045   2629           00092         call SOUCET
                      00093         PROG_PAGE_2
1046   118A               M                         bcf PCLATH,3
1047   160A               M                         bsf PCLATH,4
                      00094 
                      00095         INDF_BANK_1                             ; neprime adresovani na banku 1 (aritmeticke operace)
1048   1383               M                         bcf STATUS,IRP    
1049   30A8           00096         movlw 0xA8                              ; FSR na VYSLEDEK
104A   0084           00097         movwf FSR       
104B   0800           00098         movfw INDF
104C   00A7           00099         movwf LBA1
104D   0A84           00100         incf FSR,F
104E   0800           00101         movfw INDF
104F   00A8           00102         movwf LBA2
1050   0A84           00103         incf FSR,F
1051   0800           00104         movfw INDF
1052   00A9           00105         movwf LBA3
1053   0A84           00106         incf FSR,F
1054   0800           00107         movfw INDF
1055   00AA           00108         movwf LBA4
1056   0A84           00109         incf FSR,F
                      00110 
1057   208A           00111         call ZKONTROLUJ_ODDIL_FAT32     ; pokud skutecne adresa v LBA1-4 ukazuje na zacatek oddilu s FAT
                            32, tak da do bufferu2 jmenovku a adresu oddilu
                      00112         INDF_BANK_3
1058   1783               M                         bsf STATUS,IRP    
1059   30A4           00113         movlw 0xA4                                      ; 90h (buffer 1) + 16 (velikost 1. zaznamu) + 4 
                            (identifikator souboroveho systemu 2. zaznamu)
105A   0084           00114         movwf FSR
105B                  00115 SCAN_MBR__HLEDEJ_ROZSIRENY_ODDIL                ; jdem v zaznamech MBR/BR hledat rozsireny oddil
                      00116         ; pokud byl v prvnim zaznamu oddil typu FAT32, tak nam  tad FSR ukazuje na FileSystem 2. zaznamu
                            ...
                      00117         ; ...pokud 1. zaznam nebyl typu FAT32, tak nam FSR ukazuje na FileSystem 1. zaznamu.
                      00118         ; Kazdopadne se ted podivame na dalsi zaznam a pokud obsahuje rozsireny oddil, skocime na jeho a
                            dresu a dame goto SCAN_BR ...
105B   0800           00119         movfw INDF
105C   3C05           00120         sublw h'05'                             ; Pokud se FileSystem <> 05h (rozsireny oddil CHS)...
105D   1D03           00121         btfss STATUS,Z
105E   3C0A           00122         sublw h'0A'                             ; ...ani se <> 0Fh (5+A=F) (rozsireny oddil LBA)...
105F   1D03           00123         btfss STATUS,Z
1060   2889           00124         goto SCAN_MBR__KONEC    ; ...tak koncime...
                      00125 
1061   0804           00126         movfw FSR                               ; ...pokud tu ale mame rozsireny oddil,...
1062   3E04           00127         addlw .4                                ; ...tak se jdem podivat na jeho adresu.
1063   0084           00128         movwf FSR
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 126


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00129 
                      00130         BANK_1
1064   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
1065   1683               M                 bsf     STATUS,RP0    
                      00131         INDF_BANK_3
1066   1783               M                         bsf STATUS,IRP    
1067   0800           00132         movfw INDF
1068   00A0           00133         movwf OPERAND_X1
1069   0A84           00134         incf FSR,F
106A   0800           00135         movfw INDF
106B   00A1           00136         movwf OPERAND_X2
106C   0A84           00137         incf FSR,F
106D   0800           00138         movfw INDF
106E   00A2           00139         movwf OPERAND_X3
106F   0A84           00140         incf FSR,F
1070   0800           00141         movfw INDF
1071   00A3           00142         movwf OPERAND_X4
                      00143         BANK_0
1072   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
1073   1283               M                 bcf     STATUS,RP0    
                      00144 
                      00145         PROG_PAGE_0
1074   118A               M                         bcf PCLATH,3
1075   120A               M                         bcf PCLATH,4
1076   2629           00146         call SOUCET
                      00147         PROG_PAGE_2
1077   118A               M                         bcf PCLATH,3
1078   160A               M                         bsf PCLATH,4
                      00148 
                      00149         INDF_BANK_1                             ; neprime adresovani na banku 1 (aritmeticke operace)
1079   1383               M                         bcf STATUS,IRP    
107A   30A8           00150         movlw 0xA8                              ; FSR na VYSLEDEK
107B   0084           00151         movwf FSR       
107C   0800           00152         movfw INDF
107D   00A7           00153         movwf LBA1
107E   0A84           00154         incf FSR,F
107F   0800           00155         movfw INDF
1080   00A8           00156         movwf LBA2
1081   0A84           00157         incf FSR,F
1082   0800           00158         movfw INDF
1083   00A9           00159         movwf LBA3
1084   0A84           00160         incf FSR,F
1085   0800           00161         movfw INDF
1086   00AA           00162         movwf LBA4
1087   0A84           00163         incf FSR,F
                      00164         
1088   280A           00165         goto SCAN_BR                    ; S rozirenym oddilem provedeme totez co s MBR
1089                  00166 SCAN_MBR__KONEC
1089   0008           00167         return
                      00168 ;**************************************************************************
108A                  00169 ZKONTROLUJ_ODDIL_FAT32
                      00170         ; tak ted bychom mely mit v LBA 1-4 adresu spousteciho zaznamu oddilu s FAT32, tak to jdem overi
                            t...
                      00171         ; ...a pokud tam doopravdy spousteci zaznam je, tak dame jmenovku a informace do bufferu 2 na po
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 127


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            zici jaka je v rag. POZICE
                      00172         INDF_BANK_2
108A   1783               M                         bsf STATUS,IRP    
108B   083B           00173         movfw POZICE
108C   00B6           00174         movwf TEMP1
108D   1003           00175         bcf STATUS,C
108E   0DB6           00176         rlf TEMP1,F
108F   0DB6           00177         rlf TEMP1,F
1090   0DB6           00178         rlf TEMP1,F
1091   0DB6           00179         rlf TEMP1,F                             ; TEMP1 := POZICE *16
1092   0836           00180         movfw TEMP1
1093   3E11           00181         addlw 0x11                              ; TEMP1 + pozice bufferu 2 + 1 (pozice kam budeme do buf
                            feru 2 davat adresu oddilu)
1094   0084           00182         movwf FSR
                      00183 
1095   0827           00184         movfw LBA1
1096   0080           00185         movwf INDF
1097   0A84           00186         incf FSR,F
1098   0828           00187         movfw LBA2
1099   0080           00188         movwf INDF
109A   0A84           00189         incf FSR,F
109B   0829           00190         movfw LBA3
109C   0080           00191         movwf INDF
109D   0A84           00192         incf FSR,F
109E   082A           00193         movfw LBA4
109F   0080           00194         movwf INDF
10A0   0A84           00195         incf FSR,F                              ; adresa oddilu je ulozena do bufferu 2, ted tam jdem da
                            vat jmenovku oddilu
                      00196 
10A1   3001           00197         movlw .1
10A2   00A6           00198         movwf SECTOR_C
                      00199         PROG_PAGE_0
10A3   118A               M                         bcf PCLATH,3
10A4   120A               M                         bcf PCLATH,4
10A5   23E1           00200         call READ_SECTOR
10A6   3023           00201         movlw h'23'
10A7   00B6           00202         movwf TEMP1
10A8   23A4           00203         call PRESKOC                    ; informace o FATce co nas ted zrovna moc nezejimaji
                      00204         ; na offsetu 47 je ulozena jmenovka oddilu (11znaku), ted jsme na offsetu 46
                      00205 
10A9   2382           00206         call READ_DATA
                      00207         PROG_PAGE_2
10AA   118A               M                         bcf PCLATH,3
10AB   160A               M                         bsf PCLATH,4
10AC   0821           00208         movfw DATA_H
10AD   0080           00209         movwf INDF                              ; 1. znak ze jmenovky svazku
10AE   0A84           00210         incf FSR,F
                      00211 
10AF   3005           00212         movlw .5                                ; dalsich 10 bytu je zbytek jmenovky
10B0   00B6           00213         movwf TEMP1
10B1                  00214 ZKONTROLUJ_ODDIL_FAT32__JMENOVKA
                      00215         PROG_PAGE_0
10B1   118A               M                         bcf PCLATH,3
10B2   120A               M                         bcf PCLATH,4
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 128


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

10B3   2382           00216         call READ_DATA
                      00217         PROG_PAGE_2
10B4   118A               M                         bcf PCLATH,3
10B5   160A               M                         bsf PCLATH,4
10B6   0820           00218         movfw DATA_L
10B7   0080           00219         movwf INDF
10B8   0A84           00220         incf FSR,F
10B9   0821           00221         movfw DATA_H
10BA   0080           00222         movwf INDF
10BB   0A84           00223         incf FSR,F
10BC   0BB6           00224         decfsz TEMP1,F
10BD   28B1           00225         goto ZKONTROLUJ_ODDIL_FAT32__JMENOVKA
10BE   3010           00226         movlw .16
10BF   0284           00227         subwf FSR,F                                     ; aby fsr ukazoval na priznak o pravdivosti (FSR
                             := FSR - 16)
                      00228 
                      00229         PROG_PAGE_0
10C0   118A               M                         bcf PCLATH,3
10C1   120A               M                         bcf PCLATH,4
10C2   2382           00230         call READ_DATA
                      00231         PROG_PAGE_2
10C3   118A               M                         bcf PCLATH,3
10C4   160A               M                         bsf PCLATH,4
10C5   0820           00232         movfw DATA_L
10C6   3C46           00233         sublw 'F'               
10C7   1D03           00234         btfss STATUS,Z
10C8   28E6           00235         goto ZKONTROLUJ_ODDIL_FAT32__KONEC
10C9   0821           00236         movfw DATA_H
10CA   3C41           00237         sublw 'A'               
10CB   1D03           00238         btfss STATUS,Z
10CC   28E6           00239         goto ZKONTROLUJ_ODDIL_FAT32__KONEC
                      00240 
                      00241         PROG_PAGE_0
10CD   118A               M                         bcf PCLATH,3
10CE   120A               M                         bcf PCLATH,4
10CF   2382           00242         call READ_DATA
                      00243         PROG_PAGE_2
10D0   118A               M                         bcf PCLATH,3
10D1   160A               M                         bsf PCLATH,4
10D2   0820           00244         movfw DATA_L
10D3   3C54           00245         sublw 'T'               
10D4   1D03           00246         btfss STATUS,Z
10D5   28E6           00247         goto ZKONTROLUJ_ODDIL_FAT32__KONEC
10D6   0821           00248         movfw DATA_H
10D7   3C33           00249         sublw '3'               
10D8   1D03           00250         btfss STATUS,Z
10D9   28E6           00251         goto ZKONTROLUJ_ODDIL_FAT32__KONEC
                      00252 
                      00253         PROG_PAGE_0
10DA   118A               M                         bcf PCLATH,3
10DB   120A               M                         bcf PCLATH,4
10DC   2382           00254         call READ_DATA
                      00255         PROG_PAGE_2
10DD   118A               M                         bcf PCLATH,3
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 129


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

10DE   160A               M                         bsf PCLATH,4
10DF   0820           00256         movfw DATA_L
10E0   3C32           00257         sublw '2'
10E1   1D03           00258         btfss STATUS,Z
10E2   28E6           00259         goto ZKONTROLUJ_ODDIL_FAT32__KONEC
                      00260         ; tak, ted uz opravdu vime, ze na tomto sektoru se nachazi spousteci zaznam svazku se souborovym
                             systemem FAT32
                      00261 
10E3   30FF           00262         movlw h'FF'
10E4   0080           00263         movwf INDF
10E5   0ABB           00264         incf POZICE,F                           ; sektor skutecne obsahoval spousteci zaznam svazku...
10E6                  00265 ZKONTROLUJ_ODDIL_FAT32__KONEC
10E6   0008           00266         return
                      00267 ;**************************************************************************
10E7                  00268 NACTI_FAT32
                      00269         ; V LBA1-4 bychom meli dostat adresu prvniho sektoru FAT32 oddilu, kde by se mely nalezat inform
                            ace o fatce
                      00270         ; pokud je FATka pro nas pouzitelna (Clustery nejsou moc velke, sektor = 512B ...) nastavime bit
                             FAT32_LOAD v ATA_ATTRIBUTES
10E7   122E           00271         bcf ATA_ATTRIBUTES,FAT32_LOAD
10E8   01C0           00272         clrf POCATEK_DAT1
10E9   01C1           00273         clrf POCATEK_DAT2
10EA   01C2           00274         clrf POCATEK_DAT3
10EB   01C3           00275         clrf POCATEK_DAT4
10EC   01C4           00276         clrf POCATEK_FAT1
10ED   01C5           00277         clrf POCATEK_FAT2
10EE   01C6           00278         clrf POCATEK_FAT3
10EF   01C7           00279         clrf POCATEK_FAT4
10F0   01C8           00280         clrf ROOT_DIR_CL1
10F1   01C9           00281         clrf ROOT_DIR_CL2
10F2   01CA           00282         clrf ROOT_DIR_CL3
10F3   01CB           00283         clrf ROOT_DIR_CL4
                      00284 
10F4   01A4           00285         clrf FEATURES
10F5   3001           00286         movlw .1
10F6   00A6           00287         movwf SECTOR_C
                      00288         PROG_PAGE_0
10F7   118A               M                         bcf PCLATH,3
10F8   120A               M                         bcf PCLATH,4
10F9   23E1           00289         call READ_SECTOR
                      00290 
10FA   3005           00291         movlw .5
10FB   00B6           00292         movwf TEMP1
10FC   23A4           00293         call PRESKOC
                      00294 
10FD   2382           00295         call READ_DATA                          ; 10 bytu precteno
                      00296         PROG_PAGE_2
10FE   118A               M                         bcf PCLATH,3
10FF   160A               M                         bsf PCLATH,4
1100   0821           00297         movfw DATA_H                            ; 11,12 byte - velikost sektoru (tady by melo byt 512, a
                            le co kdyby ne...)
1101   39FF           00298         andlw h'FF'
1102   1D03           00299         btfss STATUS,Z
1103   29D2           00300         goto NACTI_FAT32__KONEC         ; pokud 11 byte neni nula, koncime (velikost sektoru se nerovna 
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 130


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            512)
                      00301 
                      00302         PROG_PAGE_0
1104   118A               M                         bcf PCLATH,3
1105   120A               M                         bcf PCLATH,4
1106   2382           00303         call READ_DATA                          ; ctu 12. a 13. byte
                      00304         PROG_PAGE_2
1107   118A               M                         bcf PCLATH,3
1108   160A               M                         bsf PCLATH,4
1109   0820           00305         movfw DATA_L
110A   3C02           00306         sublw h'02'
110B   1D03           00307         btfss STATUS,Z
110C   29D2           00308         goto NACTI_FAT32__KONEC         ; pokud 12 byte neni 2, koncime (velikost sektoru se nerovna 512
                            )
                      00309 
110D   0821           00310         movfw DATA_H                            ; byte 13. SectorsPerCluster
110E   00CC           00311         movwf CLUSTER_SIZE
110F   3C80           00312         sublw .128                              ; nas program neumi vic jak 128 (Velikost clusteru = 64K
                            B)
1110   1C03           00313         btfss STATUS,C
1111   29D2           00314         goto NACTI_FAT32__KONEC         ; pokud mame clustery vetsi jak 64KB, tak koncime
                      00315 
                      00316         PROG_PAGE_0
1112   118A               M                         bcf PCLATH,3
1113   120A               M                         bcf PCLATH,4
1114   2382           00317         call READ_DATA                          ; ctu 14. a 15. byte
                      00318         PROG_PAGE_2
1115   118A               M                         bcf PCLATH,3
1116   160A               M                         bsf PCLATH,4
1117   0820           00319         movfw DATA_L
1118   00C4           00320         movwf POCATEK_FAT1                      ; tady se nachazi pocet rezervovanych sektoru, pak k ZAC
                            ATEK_FAT pricteme adresu zacatku sektoru a mame zacatek fat...
1119   0821           00321         movfw DATA_H
111A   00C5           00322         movwf POCATEK_FAT2
                      00323         
                      00324         PROG_PAGE_0
111B   118A               M                         bcf PCLATH,3
111C   120A               M                         bcf PCLATH,4
111D   2382           00325         call READ_DATA                          ; ctu 16. a 17. byte
                      00326         PROG_PAGE_2
111E   118A               M                         bcf PCLATH,3
111F   160A               M                         bsf PCLATH,4
1120   0820           00327         movfw DATA_L                            ; Pocet FAT. byva temer vzdy 2, kdyby ale ne, tak by nam
                             to delalo docela bordel...
1121   3C02           00328         sublw .2
1122   1D03           00329         btfss STATUS,Z
1123   29D2           00330         goto NACTI_FAT32__KONEC
                      00331 
1124   3009           00332         movlw .9
1125   00B6           00333         movwf TEMP1
                      00334         PROG_PAGE_0
1126   118A               M                         bcf PCLATH,3
1127   120A               M                         bcf PCLATH,4
1128   23A4           00335         call PRESKOC                            ; 18 - 35
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 131


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00336 
1129   2382           00337         call READ_DATA                          ; 36,37 -> velikost FAT (pocet sektoru)
112A   0820           00338         movfw DATA_L
112B   00C0           00339         movwf POCATEK_DAT1
112C   0821           00340         movfw DATA_H
112D   00C1           00341         movwf POCATEK_DAT2      
112E   2382           00342         call READ_DATA                          ; 38,39 -> velikost FAT (pocet sektoru)
112F   0820           00343         movfw DATA_L
1130   00C2           00344         movwf POCATEK_DAT3
1131   0821           00345         movfw DATA_H
1132   00C3           00346         movwf POCATEK_DAT4
                      00347 
1133   2382           00348         call READ_DATA                          ; 40,41
1134   2382           00349         call READ_DATA                          ; 42,43
                      00350 
1135   2382           00351         call READ_DATA                          ; 44,45
1136   0820           00352         movfw DATA_L
1137   00C8           00353         movwf ROOT_DIR_CL1
1138   0821           00354         movfw DATA_H
1139   00C9           00355         movwf ROOT_DIR_CL2
113A   2382           00356         call READ_DATA                          ; 46,47
113B   0820           00357         movfw DATA_L
113C   00CA           00358         movwf ROOT_DIR_CL3
113D   0821           00359         movfw DATA_H
113E   00CB           00360         movwf ROOT_DIR_CL4
                      00361 
113F   3011           00362         movlw .17
1140   00B6           00363         movwf TEMP1
1141   23A4           00364         call PRESKOC                            ; 48 - 81
                      00365 
                      00366         ; ted jeste takova mala kontrola...
1142   2382           00367         call READ_DATA
                      00368         PROG_PAGE_2
1143   118A               M                         bcf PCLATH,3
1144   160A               M                         bsf PCLATH,4
1145   0820           00369         movfw DATA_L
1146   3C46           00370         sublw 'F'               
1147   1D03           00371         btfss STATUS,Z
1148   29D2           00372         goto NACTI_FAT32__KONEC
1149   0821           00373         movfw DATA_H
114A   3C41           00374         sublw 'A'               
114B   1D03           00375         btfss STATUS,Z
114C   29D2           00376         goto NACTI_FAT32__KONEC
                      00377         PROG_PAGE_0
114D   118A               M                         bcf PCLATH,3
114E   120A               M                         bcf PCLATH,4
114F   2382           00378         call READ_DATA
                      00379         PROG_PAGE_2
1150   118A               M                         bcf PCLATH,3
1151   160A               M                         bsf PCLATH,4
1152   0820           00380         movfw DATA_L
1153   3C54           00381         sublw 'T'               
1154   1D03           00382         btfss STATUS,Z
1155   29D2           00383         goto NACTI_FAT32__KONEC
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 132


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1156   0821           00384         movfw DATA_H
1157   3C33           00385         sublw '3'               
1158   1D03           00386         btfss STATUS,Z
1159   29D2           00387         goto NACTI_FAT32__KONEC
                      00388         PROG_PAGE_0
115A   118A               M                         bcf PCLATH,3
115B   120A               M                         bcf PCLATH,4
115C   2382           00389         call READ_DATA
                      00390         PROG_PAGE_2
115D   118A               M                         bcf PCLATH,3
115E   160A               M                         bsf PCLATH,4
115F   0820           00391         movfw DATA_L
1160   3C32           00392         sublw '2'
1161   1D03           00393         btfss STATUS,Z
1162   29D2           00394         goto NACTI_FAT32__KONEC
                      00395         ; tak, ted uz opravdu vime, ze na tomto sektoru se nachazi spousteci zaznam svazku se souborovym
                             systemem FAT32...
                      00396         ; tak ted jdem vypocitat ty nejdulezitejsi cisla pro praci s FATkou...
                      00397 
                      00398         INDF_BANK_1                                     ; aritmeto/logicke operace
1163   1383               M                         bcf STATUS,IRP    
1164   30A0           00399         movlw 0xA0                                      ; OPERAND_X
1165   0084           00400         movwf FSR
1166   0844           00401         movfw POCATEK_FAT1
1167   0080           00402         movwf INDF
1168   0A84           00403         incf FSR,F
1169   0845           00404         movfw POCATEK_FAT2
116A   0080           00405         movwf INDF
116B   0A84           00406         incf FSR,F
116C   0846           00407         movfw POCATEK_FAT3
116D   0080           00408         movwf INDF
116E   0A84           00409         incf FSR,F
116F   0847           00410         movfw POCATEK_FAT4
1170   0080           00411         movwf INDF
1171   0A84           00412         incf FSR,F
1172   0827           00413         movfw LBA1                                      ; OPERAND_Y
1173   0080           00414         movwf INDF
1174   0A84           00415         incf FSR,F
1175   0828           00416         movfw LBA2
1176   0080           00417         movwf INDF
1177   0A84           00418         incf FSR,F
1178   0829           00419         movfw LBA3
1179   0080           00420         movwf INDF
117A   0A84           00421         incf FSR,F
117B   082A           00422         movfw LBA4
117C   0080           00423         movwf INDF
117D   0A84           00424         incf FSR,F
                      00425         PROG_PAGE_0
117E   118A               M                         bcf PCLATH,3
117F   120A               M                         bcf PCLATH,4
1180   2629           00426         call SOUCET                                     ; pricteme k zacatku oddilu pocet rezervovanych 
                            sektoru (obvykle 32) a mame z toho POCATEK_FAT
                      00427         PROG_PAGE_2
1181   118A               M                         bcf PCLATH,3
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 133


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1182   160A               M                         bsf PCLATH,4
1183   0800           00428         movfw INDF
1184   00C4           00429         movwf POCATEK_FAT1
1185   0A84           00430         incf FSR,F
1186   0800           00431         movfw INDF
1187   00C5           00432         movwf POCATEK_FAT2
1188   0A84           00433         incf FSR,F
1189   0800           00434         movfw INDF
118A   00C6           00435         movwf POCATEK_FAT3
118B   0A84           00436         incf FSR,F
118C   0800           00437         movfw INDF
118D   00C7           00438         movwf POCATEK_FAT4
118E   0A84           00439         incf FSR,F
                      00440 
                      00441         ; v POCATEK_DAT ted mame hodnotu "velikost fat", tu vynasobime 2 a pricteme POCATEK_FAT. Tak zis
                            kame POCATEK_DAT
118F   30A0           00442         movlw 0xA0                                      ; OPERAND_X
1190   0084           00443         movwf FSR
1191   0840           00444         movfw POCATEK_DAT1
1192   0080           00445         movwf INDF
1193   0A84           00446         incf FSR,F
1194   0841           00447         movfw POCATEK_DAT2
1195   0080           00448         movwf INDF
1196   0A84           00449         incf FSR,F
1197   0842           00450         movfw POCATEK_DAT3
1198   0080           00451         movwf INDF
1199   0A84           00452         incf FSR,F
119A   0843           00453         movfw POCATEK_DAT4
119B   0080           00454         movwf INDF
119C   0A84           00455         incf FSR,F
                      00456         PROG_PAGE_0
119D   118A               M                         bcf PCLATH,3
119E   120A               M                         bcf PCLATH,4
119F   2697           00457         call POSUNDOLEVA_1                      ; X := X * 2 -> POCATEK_DAT := 2 * "velikost fat"
                      00458                                                                 ; ted jeste staci pricist POCATEK_FAT
11A0   0844           00459         movfw POCATEK_FAT1
11A1   0080           00460         movwf INDF
11A2   0A84           00461         incf FSR,F
11A3   0845           00462         movfw POCATEK_FAT2
11A4   0080           00463         movwf INDF
11A5   0A84           00464         incf FSR,F
11A6   0846           00465         movfw POCATEK_FAT3
11A7   0080           00466         movwf INDF
11A8   0A84           00467         incf FSR,F
11A9   0847           00468         movfw POCATEK_FAT4
11AA   0080           00469         movwf INDF
11AB   0A84           00470         incf FSR,F
11AC   2629           00471         call SOUCET
                      00472         PROG_PAGE_2
11AD   118A               M                         bcf PCLATH,3
11AE   160A               M                         bsf PCLATH,4
                      00473 
                      00474         ;   tady je pro me jedna zcela nepochopitelna vlastnost FATky, a to to, ze prvni dva zaznamy (nu
                            lty a prvni)
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 134


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00475         ;   ve FAT tabulce jsou obsazeny nejakyma srotama (identifikator FATky), coz by nebylo to nejhor
                            si, ale data na disku
                      00476         ;   zacinaji jiz na nultym clusteru. (POCATEK_DAT) Dochazi tedy k tomu, ze nulty cluster na disk
                            u je reprezentovan na druhe
                      00477         ;   pozici ve fatce a to cislem dve!!! Od udaje ve fatce bychom musime tedy vzdy odecist hodnotu
                             2
                      00478         ;   a ziskali bychom skutecnou polohu dat na disku.... (Je to pekne na vyliz!!!!!!!!)
                      00479         ;   Ja to tady resim tak, ze zacatek dat posunu o 2 clustery niz (POCATEK_DAT := POCATEK_DAT - 2
                            *VELIKOST_CLUSTERU),
                      00480         ;   aby udaje souhlasily a my nemuseli nic prepocitavat. 
                      00481         ;   Pak tu nastava jeste jeden problem, ROOT adresar byva adresovan jako by byl na clusteru 0, p
                            roto pokazdy kdyz je 
                      00482         ;   nekde cislo clusteru 0, tak skocime na prvni cluster root adresare. (Vetsinou 2. cluster)
                      00483         ;   O tomto jevu jsem nikde necetl, ale proste to tak je. Z toho vyplyva, ze zadny soubor nemuze
                             byt na slusteru 1...
                      00484         
                      00485         ; Tak ted mame v POCATEK_DAT = POCATEK_FAT + (velikostFat * 2)
                      00486         ; a ted jeste musime odecist 2 * velikost_clusteru
                      00487 
11AF   0D4C           00488         rlf CLUSTER_SIZE,W              ; W := CLUSTER_SIZE * 2
                      00489         BANK_1
11B0   1303               M                 bcf     STATUS,RP1              ; BANK1  RP1:RP0 = 01
11B1   1683               M                 bsf     STATUS,RP0    
11B2   00A4           00490         movwf OPERAND_Y1
11B3   01A5           00491         clrf OPERAND_Y2
11B4   01A6           00492         clrf OPERAND_Y3
11B5   01A7           00493         clrf OPERAND_Y4
11B6   0828           00494         movfw VYSLEDEK1
11B7   00A0           00495         movwf OPERAND_X1
11B8   0829           00496         movfw VYSLEDEK2
11B9   00A1           00497         movwf OPERAND_X2
11BA   082A           00498         movfw VYSLEDEK3
11BB   00A2           00499         movwf OPERAND_X3
11BC   082B           00500         movfw VYSLEDEK4
11BD   00A3           00501         movwf OPERAND_X4
                      00502         BANK_0
11BE   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
11BF   1283               M                 bcf     STATUS,RP0    
                      00503         PROG_PAGE_0
11C0   118A               M                         bcf PCLATH,3
11C1   120A               M                         bcf PCLATH,4
11C2   2655           00504         call ROZDIL                             ; VYSLEDEK := POCATEK_FAT + (2 * velikostFat) - (2 * CLU
                            STER_SIZE)
                      00505         PROG_PAGE_2
11C3   118A               M                         bcf PCLATH,3
11C4   160A               M                         bsf PCLATH,4
11C5   0800           00506         movfw INDF
11C6   00C0           00507         movwf POCATEK_DAT1
11C7   0A84           00508         incf FSR,F
11C8   0800           00509         movfw INDF
11C9   00C1           00510         movwf POCATEK_DAT2
11CA   0A84           00511         incf FSR,F
11CB   0800           00512         movfw INDF
11CC   00C2           00513         movwf POCATEK_DAT3
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 135


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

11CD   0A84           00514         incf FSR,F
11CE   0800           00515         movfw INDF
11CF   00C3           00516         movwf POCATEK_DAT4
11D0   0A84           00517         incf FSR,F
                      00518         
                      00519         ; Tak ted uz to konecne mame, muzeme se pustit do prohlizeni adresaru a souboru...
                      00520 
11D1   162E           00521         bsf ATA_ATTRIBUTES,FAT32_LOAD   
11D2                  00522 NACTI_FAT32__KONEC
11D2   0008           00523         return  
                      00524 ;**************************************************************************
                      00525 
                      00089         include "commands2.asm" ; druha cast podprogramu na obsluhu prikazu (od ridiciho procesoru)
                      00001 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
                      00002 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
                      00003 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
                      00004 ; tady jsou procedury resici jednotlive prikazy
                      00005 ; Pokud je v zasobniku prikaz pro nejakou proceduru, musi tato procedura nastavit byt STAV_PRIKAZU do 1 
                            (i kdyz treba nema vsechny parametry)
                      00006 ; Pokud procedura najde svuj prikaz a jsou prijate vsechny parametry, musi odeslat nejakou odpoved po US
                            ARTu a smazat reg. PRIJATYCH_DAT!!!
                      00007 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
                      00008 ; CAST 2 
11D3                  00009 PRIKAZ_03h                                              ; 03h  nastav oddil
11D3   0878           00010         movfw 0x078                                     ; prvni byte zasobniku prikazu
11D4   3C03           00011         sublw h'03'                                     
11D5   1D03           00012         btfss STATUS,Z
11D6   0008           00013         return                                          ; nebyl prijat prikaz 03h
11D7   1475           00014         bsf STAV_PRIKAZU,0                      ; mame tu prikaz 03h, nastavime byt STAV_PRIKAZU
11D8   0873           00015         movfw PRIJATYCH_DAT
11D9   3C04           00016         sublw .4                                        ; pro prikaz 03h museji prijit 5 byty (prikaz + 
                            4byty parametr)
11DA   1803           00017         btfsc STATUS,C
11DB   0008           00018         return                                          ; jeste nemame vsechny parametry
                      00019         ; Prisel prikaz 03h s 4bytovym parametrem (nacti oddily se systemem FAT32)
                      00020 
                      00021         ; zálohujeme si dùleité hodnoty do bufferu 1
                      00022         INDF_BANK_3
11DC   1783               M                         bsf STATUS,IRP    
11DD   3090           00023         movlw 0x90
11DE   0084           00024         movwf FSR
11DF   0840           00025         movfw POCATEK_DAT1
11E0   0080           00026         movwf INDF
11E1   0A84           00027         incf FSR,f
11E2   0841           00028         movfw POCATEK_DAT2
11E3   0080           00029         movwf INDF
11E4   0A84           00030         incf FSR,f
11E5   0842           00031         movfw POCATEK_DAT3
11E6   0080           00032         movwf INDF
11E7   0A84           00033         incf FSR,f
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 136


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

11E8   0843           00034         movfw POCATEK_DAT4
11E9   0080           00035         movwf INDF
11EA   0A84           00036         incf FSR,f
                      00037 
11EB   0844           00038         movfw POCATEK_FAT1
11EC   0080           00039         movwf INDF
11ED   0A84           00040         incf FSR,f
11EE   0845           00041         movfw POCATEK_FAT2
11EF   0080           00042         movwf INDF
11F0   0A84           00043         incf FSR,f
11F1   0846           00044         movfw POCATEK_FAT3
11F2   0080           00045         movwf INDF
11F3   0A84           00046         incf FSR,f
11F4   0847           00047         movfw POCATEK_FAT4
11F5   0080           00048         movwf INDF
11F6   0A84           00049         incf FSR,f
                      00050 
11F7   0848           00051         movfw ROOT_DIR_CL1
11F8   0080           00052         movwf INDF
11F9   0A84           00053         incf FSR,f
11FA   0849           00054         movfw ROOT_DIR_CL2
11FB   0080           00055         movwf INDF
11FC   0A84           00056         incf FSR,f
11FD   084A           00057         movfw ROOT_DIR_CL3
11FE   0080           00058         movwf INDF
11FF   0A84           00059         incf FSR,f
1200   084B           00060         movfw ROOT_DIR_CL4
1201   0080           00061         movwf INDF
1202   0A84           00062         incf FSR,f
1203   082E           00063         movfw ATA_ATTRIBUTES
1204   0080           00064         movwf INDF
                      00065 
1205   0879           00066         movfw 0x079                                     ; parametrem prikazu 03h ma byt 4bytova adresa z
                            acatku svazku, ktery se ma nacist
1206   00A7           00067         movwf LBA1
1207   087A           00068         movfw 0x07A
1208   00A8           00069         movwf LBA2
1209   087B           00070         movfw 0x07B
120A   00A9           00071         movwf LBA3
120B   087C           00072         movfw 0x07C
120C   00AA           00073         movwf LBA4
                      00074 
                      00075 ;       PROG_PAGE_2
120D   20E7           00076         call NACTI_FAT32                        ; nacte parametry zvoleneho oddilu
                      00077 ;       PROG_PAGE_2
                      00078 
120E   082E           00079         movfw ATA_ATTRIBUTES
                      00080         PROG_PAGE_0
120F   118A               M                         bcf PCLATH,3
1210   120A               M                         bcf PCLATH,4
1211   229A           00081         call WR_USART
1212   01F3           00082         clrf PRIJATYCH_DAT                      ; vyprazdnime zasobnik prikazu
                      00083         PROG_PAGE_2
1213   118A               M                         bcf PCLATH,3
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 137


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1214   160A               M                         bsf PCLATH,4
1215   1E2E           00084         btfss ATA_ATTRIBUTES,FAT32_LOAD
1216   2A8F           00085         goto PRIKAZ_03h_NENACTENO
1217                  00086 PRIKAZ_03h_NACTENO
                      00087         ; ted se podivame, zda pri predchozim spusteni byl take nacten tento oddil, a zda mame po nacten
                            i zacit prehravat
1217   1FEE           00088         btfss PREH_STAV0,7                              ; 7. bit = 1 => po naètení oddílu se zaène pøehr
                            ávat mp3, kterou se pøi posledním pøehráváni skonèilo 
1218   2B08           00089         goto PRIKAZ_03h_KONEC_NEHRAJ
                      00090         
                      00091         ; precteme informace o posledni prehrane skladbe a umistime je do buferru 1
                      00092         INDF_BANK_3
1219   1783               M                         bsf STATUS,IRP    
121A   3090           00093         movlw 0x90
121B   0084           00094         movwf FSR
121C   3004           00095         movlw .4
121D   00B6           00096         movwf TEMP1
121E                  00097 PRIKAZ_03h_LOOP1
121E   0836           00098         movfw TEMP1
                      00099         BANK_2
121F   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
1220   1283               M                 bcf     STATUS,RP0    
1221   008D           00100         movwf EEADR
                      00101         BANK_3
1222   1703               M                 bsf     STATUS,RP1              ; BANK3  RP1:RP0 = 11
1223   1683               M                 bsf     STATUS,RP0    
1224   140C           00102         bsf EECON1,RD
                      00103         BANK_2
1225   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
1226   1283               M                 bcf     STATUS,RP0    
1227   080C           00104         movfw EEDATA
1228   0080           00105         movwf INDF
1229   0A84           00106         incf FSR,f
                      00107         BANK_0
122A   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
122B   1283               M                 bcf     STATUS,RP0    
122C   0AB6           00108         incf TEMP1,f
122D   0836           00109         movfw TEMP1
122E   3C13           00110         sublw .19
122F   1D03           00111         btfss STATUS,Z
1230   2A1E           00112         goto PRIKAZ_03h_LOOP1
                      00113         
                      00114         ; podivame se zda posledne nahrany svazek byl shodny s aktualnim
1231   3090           00115         movlw 0x90
1232   0084           00116         movwf FSR
1233   0840           00117         movfw POCATEK_DAT1
1234   0200           00118         subwf INDF,w
1235   1D03           00119         btfss STATUS,Z
1236   2AB9           00120         goto PRIKAZ_03h_PROHLEDEJ_ROOT
1237   0A84           00121         incf FSR,f
1238   0841           00122         movfw POCATEK_DAT2
1239   0200           00123         subwf INDF,w
123A   1D03           00124         btfss STATUS,Z
123B   2AB9           00125         goto PRIKAZ_03h_PROHLEDEJ_ROOT
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 138


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

123C   0A84           00126         incf FSR,f
123D   0842           00127         movfw POCATEK_DAT3
123E   0200           00128         subwf INDF,w
123F   1D03           00129         btfss STATUS,Z
1240   2AB9           00130         goto PRIKAZ_03h_PROHLEDEJ_ROOT
1241   0A84           00131         incf FSR,f
1242   0843           00132         movfw POCATEK_DAT4
1243   0200           00133         subwf INDF,w
1244   1D03           00134         btfss STATUS,Z
1245   2AB9           00135         goto PRIKAZ_03h_PROHLEDEJ_ROOT
1246   0A84           00136         incf FSR,f
                      00137         ; mame ten samy oddil, jako pri poslednim prehravani, 
                      00138         ; proto se podivame, zda tu je ten soubor, ktery hral minule naposled.
                      00139         ; A pokud ano, nastavime se na jeho konec. Beh programu jiz zaridi, ze bude
                      00140         ; nalezena dalsi mp3 a nastavena k prehravani.
                      00141 
1247   0800           00142         movfw INDF
1248   00E2           00143         movwf PREH_ADR_CL1
1249   00BC           00144         movwf CLUSTER1
124A   0A84           00145         incf FSR,f
124B   0800           00146         movfw INDF
124C   00E3           00147         movwf PREH_ADR_CL2
124D   00BD           00148         movwf CLUSTER2
124E   0A84           00149         incf FSR,f
124F   0800           00150         movfw INDF
1250   00E4           00151         movwf PREH_ADR_CL3
1251   00BE           00152         movwf CLUSTER3
1252   0A84           00153         incf FSR,f
1253   0800           00154         movfw INDF
1254   00E5           00155         movwf PREH_ADR_CL4
1255   00BF           00156         movwf CLUSTER4
1256   0A84           00157         incf FSR,f
                      00158         PROG_PAGE_1
1257   158A               M                         bsf PCLATH,3
1258   120A               M                         bcf PCLATH,4
1259   2327           00159         call PRVNI_CL_ADRESARE
                      00160         ; V POZICE vrati 00h, pokud cluster je prvni cluster nejakeho adresare, FFh, pokud neobsahuje ad
                            resar
                      00161         PROG_PAGE_2
125A   118A               M                         bcf PCLATH,3
125B   160A               M                         bsf PCLATH,4
125C   183B           00162         btfsc POZICE,0
125D   2AB9           00163         goto PRIKAZ_03h_PROHLEDEJ_ROOT
                      00164 
                      00165 
                      00166         ; adresar se na dotazovanem miste nachazi...
                      00167         INDF_BANK_3
125E   1783               M                         bsf STATUS,IRP    
125F   3098           00168         movlw 0x98
1260   0084           00169         movwf FSR
1261   0800           00170         movfw INDF
1262   00E0           00171         movwf ZAZNAM1
1263   00E6           00172         movwf PREH_ZAZNAM1
1264   0A84           00173         incf FSR,f
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 139


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1265   0800           00174         movfw INDF
1266   00E1           00175         movwf ZAZNAM2
1267   00E7           00176         movwf PREH_ZAZNAM2
                      00177         PROG_PAGE_1
1268   158A               M                         bsf PCLATH,3
1269   120A               M                         bcf PCLATH,4
126A   2361           00178         call SKOC_NA_ZAZNAM
                      00179         ; - pokud ZAZNAM[1-2] ukazuji mimo adresar, vrati v POZICE FFh (jinak 00h)
                      00180         PROG_PAGE_2
126B   118A               M                         bcf PCLATH,3
126C   160A               M                         bsf PCLATH,4
126D   183B           00181         btfsc POZICE,0
126E   2AB9           00182         goto PRIKAZ_03h_PROHLEDEJ_ROOT
                      00183         ; zaznam se v adresari take nachazi....
                      00184 
                      00185         PROG_PAGE_1
126F   158A               M                         bsf PCLATH,3
1270   120A               M                         bcf PCLATH,4
1271   23E1           00186         call FILE_INFO  
                      00187         PROG_PAGE_2
1272   118A               M                         bcf PCLATH,3
1273   160A               M                         bsf PCLATH,4
                      00188         INDF_BANK_2
1274   1783               M                         bsf STATUS,IRP    
1275   3010           00189         movlw 0x10
1276   0084           00190         movwf FSR
1277   0800           00191         movfw INDF
1278   3C06           00192         sublw h'06'     ; = 06h -> zaznam je soubor s priponou MP3
1279   1D03           00193         btfss STATUS,Z
127A   2AB9           00194         goto PRIKAZ_03h_PROHLEDEJ_ROOT
                      00195         ; ...dokonce se jedna o soubor mp3, tak se nastavime na jeho konec a hotovo...
                      00196 
127B   01D3           00197         clrf PREH_D_FRAGMENT1
127C   01D4           00198         clrf PREH_D_FRAGMENT2
                      00199 
                      00200         INDF_BANK_3
127D   1783               M                         bsf STATUS,IRP    
127E   309B           00201         movlw 0x9B
127F   0084           00202         movwf FSR
1280   0800           00203         movfw INDF
1281   00E9           00204         movwf PREH_DATA_CL1
1282   0A84           00205         incf FSR,f
1283   0800           00206         movfw INDF
1284   00EA           00207         movwf PREH_DATA_CL2
1285   0A84           00208         incf FSR,f
1286   0800           00209         movfw INDF
1287   00EB           00210         movwf PREH_DATA_CL3
1288   0A84           00211         incf FSR,f
1289   0800           00212         movfw INDF
128A   00EC           00213         movwf PREH_DATA_CL4
128B   0A84           00214         incf FSR,f
                      00215 
128C   084C           00216         movfw CLUSTER_SIZE
128D   00ED           00217         movwf PREH_DATA_POZICE
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 140


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00218         ; ted bychom meli byt nastaveni na konec MP3, ktera se prehravala naposled 
                      00219         ; a automaticky bychom se meli dostat na nasledujici...
                      00220 
128E   2AB8           00221         goto PRIKAZ_03h_KONEC
                      00222 
128F                  00223 PRIKAZ_03h_NENACTENO
                      00224         ; pokud nebyla FATka úspìnì naètena, vrátíme zpìt zálohované hodnoty...
                      00225         INDF_BANK_3
128F   1783               M                         bsf STATUS,IRP    
1290   3090           00226         movlw 0x90
1291   0084           00227         movwf FSR
1292   0800           00228         movfw INDF
1293   00C0           00229         movwf POCATEK_DAT1
1294   0A84           00230         incf FSR,f
1295   0800           00231         movfw INDF
1296   00C1           00232         movwf POCATEK_DAT2
1297   0A84           00233         incf FSR,f
1298   0800           00234         movfw INDF
1299   00C2           00235         movwf POCATEK_DAT3
129A   0A84           00236         incf FSR,f
129B   0800           00237         movfw INDF
129C   00C3           00238         movwf POCATEK_DAT4
129D   0A84           00239         incf FSR,f
                      00240 
129E   0800           00241         movfw INDF
129F   00C4           00242         movwf POCATEK_FAT1
12A0   0A84           00243         incf FSR,f
12A1   0800           00244         movfw INDF
12A2   00C5           00245         movwf POCATEK_FAT2
12A3   0A84           00246         incf FSR,f
12A4   0800           00247         movfw INDF
12A5   00C6           00248         movwf POCATEK_FAT3
12A6   0A84           00249         incf FSR,f
12A7   0800           00250         movfw INDF
12A8   00C7           00251         movwf POCATEK_FAT4
12A9   0A84           00252         incf FSR,f
                      00253 
12AA   0800           00254         movfw INDF
12AB   00C8           00255         movwf ROOT_DIR_CL1
12AC   0A84           00256         incf FSR,f
12AD   0800           00257         movfw INDF
12AE   00C9           00258         movwf ROOT_DIR_CL2
12AF   0A84           00259         incf FSR,f
12B0   0800           00260         movfw INDF
12B1   00CA           00261         movwf ROOT_DIR_CL3
12B2   0A84           00262         incf FSR,f
12B3   0800           00263         movfw INDF
12B4   00CB           00264         movwf ROOT_DIR_CL4
12B5   0A84           00265         incf FSR,f
12B6   0800           00266         movfw INDF
12B7   00AE           00267         movwf ATA_ATTRIBUTES
                      00268 
12B8                  00269 PRIKAZ_03h_KONEC
                      00270 ;       clrf PRIJATYCH_DAT                      ; vyprazdnime zasobnik
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 141


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

12B8   0008           00271         return
                      00272 
12B9                  00273 PRIKAZ_03h_PROHLEDEJ_ROOT
12B9   01D3           00274         clrf PREH_D_FRAGMENT1
12BA   01D4           00275         clrf PREH_D_FRAGMENT2
12BB   01E2           00276         clrf PREH_ADR_CL1
12BC   01E3           00277         clrf PREH_ADR_CL2
12BD   01E4           00278         clrf PREH_ADR_CL3
12BE   01E5           00279         clrf PREH_ADR_CL4
12BF   01E6           00280         clrf PREH_ZAZNAM1
12C0   01E7           00281         clrf PREH_ZAZNAM2
12C1   10EE           00282         bcf PREH_STAV0,1                        ; neni soubor k prehravani
                      00283 
                      00284 ;       clrf PRIJATYCH_DAT                      ; vyprazdnime zasobnik
                      00285 
12C2   01DA           00286         clrf HL_ADR_CL1
12C3   01DB           00287         clrf HL_ADR_CL2
12C4   01DC           00288         clrf HL_ADR_CL3
12C5   01DD           00289         clrf HL_ADR_CL4                         ; hledej v ROOT
12C6   302E           00290         movlw b'00101110'                       ; hledej 1. mp3
12C7   00D9           00291         movwf HL_PARAMETRY
                      00292 
                      00293         PROG_PAGE_1
12C8   158A               M                         bsf PCLATH,3
12C9   120A               M                         bcf PCLATH,4
12CA   2479           00294         call HLEDEJ
                      00295         PROG_PAGE_2
12CB   118A               M                         bcf PCLATH,3
12CC   160A               M                         bsf PCLATH,4
                      00296 
                      00297         BANK_2
12CD   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
12CE   1283               M                 bcf     STATUS,RP0    
12CF   0830           00298         movfw 0x30
                      00299         BANK_0
12D0   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
12D1   1283               M                 bcf     STATUS,RP0    
12D2   3C06           00300         sublw h'06'                                     ; = 06h -> zaznam je soubor s priponou MP3
12D3   1D03           00301         btfss STATUS,Z
12D4   0008           00302         return
                      00303 
                      00304         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00305         ; byla nalezena 1. MP3 v ROOT adresari
                      00306         INDF_BANK_2
12D5   1783               M                         bsf STATUS,IRP    
12D6   303C           00307         movlw 0x3C
12D7   0084           00308         movwf FSR
                      00309 
12D8   0800           00310         movfw INDF
12D9   00E9           00311         movwf PREH_DATA_CL1
12DA   00BC           00312         movwf CLUSTER1
12DB   0A84           00313         incf FSR,f
12DC   0800           00314         movfw INDF
12DD   00EA           00315         movwf PREH_DATA_CL2
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 142


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

12DE   00BD           00316         movwf CLUSTER2
12DF   0A84           00317         incf FSR,f
12E0   0800           00318         movfw INDF
12E1   00EB           00319         movwf PREH_DATA_CL3
12E2   00BE           00320         movwf CLUSTER3
12E3   0A84           00321         incf FSR,f
12E4   0800           00322         movfw INDF
12E5   00EC           00323         movwf PREH_DATA_CL4
12E6   00BF           00324         movwf CLUSTER4
                      00325 
12E7   0A84           00326         incf FSR,f
12E8   0800           00327         movfw INDF
12E9   00E6           00328         movwf PREH_ZAZNAM1
12EA   0A84           00329         incf FSR,f
12EB   0800           00330         movfw INDF
12EC   00E7           00331         movwf PREH_ZAZNAM2
                      00332 
                      00333         PROG_PAGE_0
12ED   118A               M                         bcf PCLATH,3
12EE   120A               M                         bcf PCLATH,4
12EF   2573           00334         call ZJISTI_FRAGMENT
                      00335         PROG_PAGE_2
12F0   118A               M                         bcf PCLATH,3
12F1   160A               M                         bsf PCLATH,4
12F2   0851           00336         movfw FRAGMENT1
12F3   00D3           00337         movwf PREH_D_FRAGMENT1
12F4   0852           00338         movfw FRAGMENT2
12F5   00D4           00339         movwf PREH_D_FRAGMENT2
                      00340         ; aktualni prehravany soubor i prehravana slozka byly nastaveny...
                      00341 
12F6   01ED           00342         clrf PREH_DATA_POZICE
12F7   146E           00343         bsf PREH_STAV0,0                        ; je zvoleno play
12F8   14EE           00344         bsf PREH_STAV0,1                        ; je co prehravat
12F9   156E           00345         bsf PREH_STAV0,2                        ; byl automaticky zmenen prehravany soubor
                      00346 
12FA   10CD           00347         bcf VSREG_MODE_L,1                      ; prehravame normalni rychlosti 
12FB   106F           00348         bcf PREH_STAV1,0                        ; prehravame normalni rychlosti 
                      00349 
                      00350         PROG_PAGE_1     
12FC   158A               M                         bsf PCLATH,3
12FD   120A               M                         bcf PCLATH,4
12FE   204D           00351         call VS_SOFT_RESET
                      00352 
12FF   3000           00353         movlw VSADDR_MODE
1300   00B6           00354         movwf TEMP1
1301   084D           00355         movfw VSREG_MODE_L
1302   00B7           00356         movwf TEMP2
1303   01B8           00357         clrf TEMP3
1304   201C           00358         call VS_WR_REG
                      00359         PROG_PAGE_2
1305   118A               M                         bcf PCLATH,3
1306   160A               M                         bsf PCLATH,4
                      00360 
1307   0008           00361         return
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 143


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1308                  00362 PRIKAZ_03h_KONEC_NEHRAJ
1308   01D3           00363         clrf PREH_D_FRAGMENT1
1309   01D4           00364         clrf PREH_D_FRAGMENT2
130A   01E2           00365         clrf PREH_ADR_CL1
130B   01E3           00366         clrf PREH_ADR_CL2
130C   01E4           00367         clrf PREH_ADR_CL3
130D   01E5           00368         clrf PREH_ADR_CL4
130E   01E6           00369         clrf PREH_ZAZNAM1
130F   01E7           00370         clrf PREH_ZAZNAM2
1310   10EE           00371         bcf PREH_STAV0,1                        ; neni soubor k prehravani
                      00372 
                      00373 ;       clrf PRIJATYCH_DAT                      ; vyprazdnime zasobnik
1311   0008           00374         return
                      00375 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
1312                  00376 PRIKAZ_0Bh                                              ; 0Bh  zjisti velikost fragmentu
1312   0878           00377         movfw 0x078                                     ; prvni byte zasobniku prikazu
1313   3C0B           00378         sublw h'0b'                                     
1314   1D03           00379         btfss STATUS,Z
1315   0008           00380         return                                          ; nebyl prijat prikaz 0Bh
1316   1475           00381         bsf STAV_PRIKAZU,0                      ; mame tu prikaz 0Bh, nastavime byt STAV_PRIKAZU
1317   0873           00382         movfw PRIJATYCH_DAT
1318   3C04           00383         sublw .4                                        ; pro prikaz 0Bh museji prijit 5 bytu (prikaz + 
                            4byty parametr)
1319   1803           00384         btfsc STATUS,C
131A   0008           00385         return                                          ; jeste nemame vsechny parametry
                      00386         ; Prisel prikaz 0Bh s 4bytovym parametrem 
                      00387 
131B   0879           00388         movfw 0x079                                     ; nejnizsi cast clusteru
131C   00BC           00389         movwf CLUSTER1
131D   087A           00390         movfw 0x07A
131E   00BD           00391         movwf CLUSTER2
131F   087B           00392         movfw 0x07B
1320   00BE           00393         movwf CLUSTER3
1321   087C           00394         movfw 0x07C
1322   00BF           00395         movwf CLUSTER4
                      00396 
                      00397         PROG_PAGE_0
1323   118A               M                         bcf PCLATH,3
1324   120A               M                         bcf PCLATH,4
1325   2573           00398         call ZJISTI_FRAGMENT
                      00399         PROG_PAGE_2
1326   118A               M                         bcf PCLATH,3
1327   160A               M                         bsf PCLATH,4
                      00400 ; v CLUSTER[1-4] prijme cislo clusteru a do FRAGMENT[1-2] umisti kolik clusteru 
                      00401 ; po tomto clusteru nasledujich tvori jeden fragment
                      00402 ; (pokud je retezec tvoren pouze z tohoto clusteru, je vraceno cislo 0)
                      00403 
                      00404 ; Pokud soucasny cluster je prazdny (coz by se stat nemelo) vrati v POZICE FFh
                      00405 ; Jinak, pokud s vse povede, dame do POZICE 0
                      00406 
                      00407 ; ! PODPROGRAM NENI POUZITELNY PRO CLUSTER 0 (prvni cluster ROOT adresare)
                      00408 ; ! PODPROGRAM NETESTUJE ZDA NEBYLO ZADANO VETSI CISLO NEZ JE POCET CLUSTERU !!!
                      00409         
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 144


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00410         PROG_PAGE_0
1328   118A               M                         bcf PCLATH,3
1329   120A               M                         bcf PCLATH,4
132A   083B           00411         movfw POZICE 
132B   229A           00412         call WR_USART
132C   0851           00413         movfw FRAGMENT1
132D   229A           00414         call WR_USART
132E   0852           00415         movfw FRAGMENT2
132F   229A           00416         call WR_USART
                      00417         PROG_PAGE_2
1330   118A               M                         bcf PCLATH,3
1331   160A               M                         bsf PCLATH,4
                      00418         
1332   01F3           00419         clrf PRIJATYCH_DAT                      ; vyprazdnime zasobnik prikazu
1333   0008           00420         return
                      00421 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
1334                  00422 PRIKAZ_0Ch                                              ; 0Ch  najdi záznam o tomto adresáøi v nadøazen
                            ém adresáøi
1334   0878           00423         movfw 0x078                                     ; prvni byte zasobniku prikazu
1335   3C0C           00424         sublw h'0C'                                     
1336   1D03           00425         btfss STATUS,Z
1337   0008           00426         return                                          ; nebyl prijat prikaz 0Ch
1338   1475           00427         bsf STAV_PRIKAZU,0                      ; mame tu prikaz 0Ch, nastavime byt STAV_PRIKAZU
1339   0873           00428         movfw PRIJATYCH_DAT
133A   3C04           00429         sublw .4                                        ; pro prikaz 0Ch museji prijit 5 bytu (prikaz + 
                            4byty parametr)
133B   1803           00430         btfsc STATUS,C
133C   0008           00431         return                                          ; jeste nemame vsechny parametry
                      00432         ; Prisel prikaz 0Ch s 4bytovym parametrem 
                      00433 
133D   0879           00434         movfw 0x079                                     ; nejnizsi cast clusteru
133E   00BC           00435         movwf CLUSTER1
133F   087A           00436         movfw 0x07A
1340   00BD           00437         movwf CLUSTER2
1341   087B           00438         movfw 0x07B
1342   00BE           00439         movwf CLUSTER3
1343   087C           00440         movfw 0x07C
1344   00BF           00441         movwf CLUSTER4
                      00442 
1345   083C           00443         movfw CLUSTER1
1346   043D           00444         iorwf CLUSTER2,W
1347   043E           00445         iorwf CLUSTER3,W
1348   043F           00446         iorwf CLUSTER4,W
1349   1903           00447         btfsc STATUS,Z
134A   2B5D           00448         goto PRIKAZ_0Ch_JEROOT          ; pokud CLUSTER[1-4]=0, tak se jedna o 1. cluster ROOT adr., pro
                            to nemusime dale resit co tam je...
                      00449 
                      00450         PROG_PAGE_1
134B   158A               M                         bsf PCLATH,3
134C   120A               M                         bcf PCLATH,4
134D   2327           00451         call PRVNI_CL_ADRESARE          ; V POZICE vrati 00h, pokud cluster je prvni cluster nejakeho ad
                            resare, FFh, pokud neobsahuje adresar
                      00452         PROG_PAGE_2
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 145


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

134E   118A               M                         bcf PCLATH,3
134F   160A               M                         bsf PCLATH,4
1350   083B           00453         movfw POZICE
1351   39FF           00454         andlw h'FF'
1352   1D03           00455         btfss STATUS,Z
1353   2B5B           00456         goto PRIKAZ_0Ch_NENI_ZACATEK_ADR        
                      00457 
                      00458         PROG_PAGE_1
1354   158A               M                         bsf PCLATH,3
1355   120A               M                         bcf PCLATH,4
1356   26E3           00459         call HLEDEJ_V_NADRAZENEM
                      00460         PROG_PAGE_2
1357   118A               M                         bcf PCLATH,3
1358   160A               M                         bsf PCLATH,4
                      00461 
1359   3000           00462         movlw h'00'
135A   2B5E           00463         goto PRIKAZ_0Ch_ODESLI
135B                  00464 PRIKAZ_0Ch_NENI_ZACATEK_ADR
135B   3081           00465         movlw h'81'
135C   2B5E           00466         goto PRIKAZ_0Ch_ODESLI
135D                  00467 PRIKAZ_0Ch_JEROOT
135D   3001           00468         movlw h'01'
135E                  00469 PRIKAZ_0Ch_ODESLI
                      00470 
                      00471         PROG_PAGE_0
135E   118A               M                         bcf PCLATH,3
135F   120A               M                         bcf PCLATH,4
1360   229A           00472         call WR_USART
                      00473 
                      00474         INDF_BANK_3
1361   1783               M                         bsf STATUS,IRP    
1362   3090           00475         movlw h'90'
1363   0084           00476         movwf FSR
                      00477 
1364   0800           00478         movfw INDF
1365   229A           00479         call WR_USART
1366   0A84           00480         incf FSR,f
1367   0800           00481         movfw INDF
1368   229A           00482         call WR_USART
1369   0A84           00483         incf FSR,f
136A   0800           00484         movfw INDF
136B   229A           00485         call WR_USART
136C   0A84           00486         incf FSR,f
136D   0800           00487         movfw INDF
136E   229A           00488         call WR_USART
136F   0A84           00489         incf FSR,f
                      00490 
1370   0860           00491         movfw ZAZNAM1
1371   229A           00492         call WR_USART
1372   0861           00493         movfw ZAZNAM2
1373   229A           00494         call WR_USART
                      00495         PROG_PAGE_2
1374   118A               M                         bcf PCLATH,3
1375   160A               M                         bsf PCLATH,4
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 146


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00496         
1376   01F3           00497         clrf PRIJATYCH_DAT                      ; vyprazdnime zasobnik prikazu
1377   0008           00498         return
                      00499 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
1378                  00500 PRIKAZ_0Dh                                              ; 0Dh  nastav dobu, po ktere se disk prepne do 
                            STANDBY
1378   0878           00501         movfw 0x078                                     ; prvni byte zasobniku prikazu
1379   3C0D           00502         sublw h'0D'                                     
137A   1D03           00503         btfss STATUS,Z
137B   0008           00504         return                                          ; nebyl prijat prikaz 0Dh
137C   1475           00505         bsf STAV_PRIKAZU,0                      ; mame tu prikaz 0Dh, nastavime byt STAV_PRIKAZU
137D   0873           00506         movfw PRIJATYCH_DAT
137E   3C02           00507         sublw .2                                        ; pro prikaz 0Ch museji prijit 3 bytu (prikaz + 
                            2byty parametr)
137F   1803           00508         btfsc STATUS,C
1380   0008           00509         return                                          ; jeste nemame vsechny parametry
                      00510         ; Prisel prikaz 0Dh s 2bytovym parametrem 
                      00511 
1381   0879           00512         movfw 0x079
1382   047A           00513         iorwf 0x07A,w
1383   1903           00514         btfsc STATUS,Z
1384   2B8C           00515         goto PRIKAZ_0Dh_OKAMZITE
                      00516 
1385   0879           00517         movfw 0x079                                     ; 2. byte zasobniku prikazu             
1386   00D7           00518         movwf KONST_NECINNOSTI1
1387   00D5           00519         movwf CITAC_NECINNOSTI1
1388   087A           00520         movfw 0x07A                                     ; 3. byte zasobniku prikazu             
1389   00D8           00521         movwf KONST_NECINNOSTI2
138A   00D6           00522         movwf CITAC_NECINNOSTI2         ; disk je vypinan po urcite dobe necinosti
                      00523 
138B   2B8E           00524         goto PRIKAZ_0Dh_KONEC
138C                  00525 PRIKAZ_0Dh_OKAMZITE
138C   01D5           00526         clrf CITAC_NECINNOSTI1
138D   01D6           00527         clrf CITAC_NECINNOSTI2
                      00528 
138E                  00529 PRIKAZ_0Dh_KONEC
                      00530 
                      00531         PROG_PAGE_0
138E   118A               M                         bcf PCLATH,3
138F   120A               M                         bcf PCLATH,4
1390   30FF           00532         movlw h'ff'
1391   229A           00533         call WR_USART
                      00534         PROG_PAGE_2
1392   118A               M                         bcf PCLATH,3
1393   160A               M                         bsf PCLATH,4
                      00535 
1394   01F3           00536         clrf PRIJATYCH_DAT                      ; vyprazdnime zasobnik
1395   0008           00537         return
                      00538 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
1396                  00539 PRIKAZ_85h                                              ; 85h  nastav pøedvolený ekvalizér
1396   0878           00540         movfw 0x078                                     ; prvni byte zasobniku prikazu
1397   3C85           00541         sublw h'85'                                     
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 147


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1398   1D03           00542         btfss STATUS,Z
1399   0008           00543         return                                          ; nebyl prijat prikaz 0Dh
139A   1475           00544         bsf STAV_PRIKAZU,0                      ; mame tu prikaz 0Dh, nastavime byt STAV_PRIKAZU
139B   0873           00545         movfw PRIJATYCH_DAT
139C   3C01           00546         sublw .1                                        ; pro prikaz 85h museji prijit 2 byty (prikaz + 
                            1byt parametr)
139D   1803           00547         btfsc STATUS,C
139E   0008           00548         return                                          ; jeste nemame vsechny parametry
                      00549         ; Prisel prikaz 85h s 1 bytem parametru
                      00550 
139F   0879           00551         movfw 0x079
13A0   39FF           00552         andlw h'FF'
13A1   1903           00553         btfsc STATUS,Z
13A2   2BD8           00554         goto PRIKAZ_85h_VYPNI
                      00555 
13A3   0879           00556         movfw 0x079     
13A4   3C0C           00557         sublw .12
13A5   1C03           00558         btfss STATUS,C
13A6   2BD1           00559         goto PRIKAZ_85h_SPATNY_PARAMETR
                      00560 
13A7   0879           00561         movfw 0x079     
13A8   00AF           00562         movwf VS_LOUDNESS
                      00563 
13A9   300A           00564         movlw VSADDR_AIADDR
13AA   00B6           00565         movwf TEMP1
13AB   3000           00566         movlw 0x00
13AC   00B7           00567         movwf TEMP2     
13AD   3042           00568         movlw 0x42
13AE   00B8           00569         movwf TEMP3
                      00570         PROG_PAGE_1     
13AF   158A               M                         bsf PCLATH,3
13B0   120A               M                         bcf PCLATH,4
13B1   201C           00571         call VS_WR_REG                          ; nastavime zacatek uzivatelskeho programu (0x4200)
                      00572         PROG_PAGE_2
13B2   118A               M                         bcf PCLATH,3
13B3   160A               M                         bsf PCLATH,4
                      00573 
13B4   300D           00574         movlw VSADDR_AICTRL0
13B5   00B6           00575         movwf TEMP1
13B6   3000           00576         movlw 0x00
13B7   00B7           00577         movwf TEMP2     
13B8   3000           00578         movlw 0x00
13B9   00B8           00579         movwf TEMP3
                      00580         PROG_PAGE_1     
13BA   158A               M                         bsf PCLATH,3
13BB   120A               M                         bcf PCLATH,4
13BC   201C           00581         call VS_WR_REG                          ; resetujeme plugin
                      00582         PROG_PAGE_2
13BD   118A               M                         bcf PCLATH,3
13BE   160A               M                         bsf PCLATH,4
                      00583 
13BF   300D           00584         movlw VSADDR_AICTRL0
13C0   00B6           00585         movwf TEMP1
13C1   082F           00586         movfw VS_LOUDNESS
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 148


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

13C2   00B7           00587         movwf TEMP2     
13C3   3000           00588         movlw 0x00
13C4   00B8           00589         movwf TEMP3
                      00590         PROG_PAGE_1     
13C5   158A               M                         bsf PCLATH,3
13C6   120A               M                         bcf PCLATH,4
13C7   201C           00591         call VS_WR_REG                          ; nastavime pozadovany filter
                      00592         PROG_PAGE_2
13C8   118A               M                         bcf PCLATH,3
13C9   160A               M                         bsf PCLATH,4
                      00593 
                      00594         PROG_PAGE_0
13CA   118A               M                         bcf PCLATH,3
13CB   120A               M                         bcf PCLATH,4
13CC   30FF           00595         movlw h'ff'
13CD   229A           00596         call WR_USART
                      00597         PROG_PAGE_2
13CE   118A               M                         bcf PCLATH,3
13CF   160A               M                         bsf PCLATH,4
13D0   2BF1           00598         goto PRIKAZ_85h_KONEC
                      00599 
13D1                  00600 PRIKAZ_85h_SPATNY_PARAMETR
                      00601         PROG_PAGE_0
13D1   118A               M                         bcf PCLATH,3
13D2   120A               M                         bcf PCLATH,4
13D3   3000           00602         movlw h'00'
13D4   229A           00603         call WR_USART
                      00604         PROG_PAGE_2
13D5   118A               M                         bcf PCLATH,3
13D6   160A               M                         bsf PCLATH,4
13D7   2BF1           00605         goto PRIKAZ_85h_KONEC
                      00606 
13D8                  00607 PRIKAZ_85h_VYPNI
13D8   01AF           00608         clrf VS_LOUDNESS
                      00609 
13D9   300D           00610         movlw VSADDR_AICTRL0
13DA   00B6           00611         movwf TEMP1
13DB   3000           00612         movlw 0x00
13DC   00B7           00613         movwf TEMP2     
13DD   3000           00614         movlw 0x00
13DE   00B8           00615         movwf TEMP3
                      00616         PROG_PAGE_1     
13DF   158A               M                         bsf PCLATH,3
13E0   120A               M                         bcf PCLATH,4
13E1   201C           00617         call VS_WR_REG                          ; resetujeme plugin
                      00618         PROG_PAGE_2
13E2   118A               M                         bcf PCLATH,3
13E3   160A               M                         bsf PCLATH,4
                      00619 
13E4   300A           00620         movlw VSADDR_AIADDR
13E5   00B6           00621         movwf TEMP1
13E6   01B7           00622         clrf TEMP2      
13E7   01B8           00623         clrf TEMP3
                      00624         PROG_PAGE_1     
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 149


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

13E8   158A               M                         bsf PCLATH,3
13E9   120A               M                         bcf PCLATH,4
13EA   201C           00625         call VS_WR_REG                          ; vypneme plugin
                      00626 
                      00627         PROG_PAGE_0
13EB   118A               M                         bcf PCLATH,3
13EC   120A               M                         bcf PCLATH,4
13ED   30FF           00628         movlw h'ff'
13EE   229A           00629         call WR_USART
                      00630         PROG_PAGE_2
13EF   118A               M                         bcf PCLATH,3
13F0   160A               M                         bsf PCLATH,4
13F1                  00631 PRIKAZ_85h_KONEC
13F1   01F3           00632         clrf PRIJATYCH_DAT                      ; vyprazdnime zasobnik
13F2   0008           00633         return
                      00634 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
13F3                  00635 PRIKAZ_86h                                              ; 86h  vra nastavenou hlasitost
13F3   0878           00636         movfw 0x078                                     ; prvni byte zasobniku prikazu
13F4   3C86           00637         sublw h'86'
13F5   1D03           00638         btfss STATUS,Z
13F6   0008           00639         return                                          ; nebyl prijat prikaz 86h
13F7   1475           00640         bsf STAV_PRIKAZU,0                      ; mame tu prikaz 86h, nastavime byt STAV_PRIKAZU
                      00641         ; pro prikaz 04h nejsou definovany zadne parametry, proto jiz nic jineho netestujeme
                      00642 
                      00643         PROG_PAGE_0
13F8   118A               M                         bcf PCLATH,3
13F9   120A               M                         bcf PCLATH,4
13FA   0850           00644         movfw VSREG_VOL_H                       ; hlasitost pro levy kanal
13FB   229A           00645         call WR_USART   
13FC   084F           00646         movfw VSREG_VOL_L                       ; hlasitost pro pravy kanal
13FD   229A           00647         call WR_USART
                      00648         PROG_PAGE_2
13FE   118A               M                         bcf PCLATH,3
13FF   160A               M                         bsf PCLATH,4
1400   01F3           00649         clrf PRIJATYCH_DAT                      ; vyprazdnime zasobnik
1401   0008           00650         return
                      00651 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
1402                  00652 PRIKAZ_87h                                              ; 87h  ulo nastavení pøehrávání do EEPROM
1402   0878           00653         movfw 0x078                                     ; prvni byte zasobniku prikazu
1403   3C87           00654         sublw h'87'
1404   1D03           00655         btfss STATUS,Z
1405   0008           00656         return                                          ; nebyl prijat prikaz 87h
1406   1475           00657         bsf STAV_PRIKAZU,0                      ; mame tu prikaz 87h, nastavime byt STAV_PRIKAZU
                      00658         ; pro prikaz 87h nejsou definovany zadne parametry, proto jiz nic jineho netestujeme
                      00659 
                      00660         PROG_PAGE_0
1407   118A               M                         bcf PCLATH,3
1408   120A               M                         bcf PCLATH,4
1409   224C           00661         call ULOZ_KONFIGUTACI
                      00662         
140A   30FF           00663         movlw h'FF'                                     ; pro prikaz je vzdy odpoved FFh
140B   229A           00664         call WR_USART
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 150


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00665         PROG_PAGE_2
140C   118A               M                         bcf PCLATH,3
140D   160A               M                         bsf PCLATH,4
                      00666         
140E   01F3           00667         clrf PRIJATYCH_DAT                      ; vyprazdnime zasobnik
140F   0008           00668         return
                      00669 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXXXXXXXXXXXX
                      00090         include "subdirectory.asm"; podpora podadresaru pri prehravani
                      00001 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXX
                      00002 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXX
                      00003 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXX
                      00004 ; Tady ta èást kódu má jeden jediný smysl. A to aby nalezla dalí adresáø, který se má pøehrávat pokud v
                             aktuálním 
                      00005 ; adresáøi ji není ádná MP3, která nebyla pøehrána. 
                      00006 ; 
                      00007 ; máme-li následující adresáøovou strukruru:
                      00008 ; ROOT
                      00009 ;  | skladba_01.mp3
                      00010 ;  | skladba_02.mp3
                      00011 ;  +- DIRECTORY_1
                      00012 ;  |  | skladba_03.mp3
                      00013 ;  |  | skladba_04.mp3
                      00014 ;  |  +- DIRECTORY_1_1
                      00015 ;  |     | skladba_05.mp3
                      00016 ;  |
                      00017 ;  +- DIRECTORY_2
                      00018 ;     | skladba_06.mp3
                      00019 ;
                      00020 ; Tak sou mp3 pøehrávany v poøadí, jak je zobrazeno. Nejdøíve vechny mp3 v ROOT (skladba_01,02) poté DI
                            RECTORY_1...
                      00021 ; XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                            XXXXXXXXXXX
                      00022 
                      00023 ; function  HLEDEJ_ADRESAR(){
                      00024 ;  if (PREH_ADR_CL == ROOT){
                      00025 ;       HL_PARAMETRY = [hledej 1. adresar]
                      00026 ;  }else{
                      00027 ;       HL_PARAMETRY = [hledej nasledujici adresar] //po ".."
                      00028 ;  }
                      00029 ;  HL_ADR_CL=PREH_ADR_CL
                      00030 ;  HL_ZAZNAM = 1
                      00031 ;  hledej();
                      00032 ;  if (nalezeno){
                      00033 ;       goto HLEDEJ_ADR_NALEZEN
                      00034 ;  }else{
                      00035 ;       HLEDEJ_ADR_OADR_VIS
                      00036 ;       if (PREH_ADR_CL == ROOT){
                      00037 ;               PREH_STAV0=[stop]
                      00038 ;               exit
                      00039 ;       }else{
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 151


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00040 ;               HLEDEJ_ADR_OADR_VIS_NOROOT
                      00041 ;               najdi odkaz na PREH_ADR_CL v nadrazenem adresari                
                      00042 ;               hledej dalsi adresar v nadrazenem adresari po PREH_ADR_CL
                      00043 ;               PREH_ADR_CL = nadrazeny adresar
                      00044 ;               if (nalezeno){
                      00045 ;                       goto HLEDEJ_ADR_NALEZEN
                      00046 ;               }else{
                      00047 ;                       goto HLEDEJ_ADR_OADR_VIS
                      00048 ;               }
                      00049 ;       }
                      00050 ;  }
                      00051 ;
                      00052 ;  HLEDEJ_ADR_NALEZEN
                      00053 ;  hledej 1. mp3 v nalezenem adresari
                      00054 ;  pokud byla mp3 nalezena, nastav ji jako prehravanou
                      00055 ; }
                      00056 
1410                  00057 HLEDEJ_ADRESAR
                      00058 
1410   0862           00059         movfw PREH_ADR_CL1
1411   0463           00060         iorwf PREH_ADR_CL2,w
1412   0464           00061         iorwf PREH_ADR_CL3,w
1413   0465           00062         iorwf PREH_ADR_CL4,w
1414   300A           00063         movlw b'00001010'                       ; PREH_ADR je ROOT, tak hledame 1. adresar
1415   1D03           00064         btfss STATUS,Z
1416   3002           00065         movlw b'00000010'                       ; PREH_ADR neni ROOT, tak hledame nasledujici adresar po
                             adresari 1 ('..')
1417   00D9           00066         movwf HL_PARAMETRY
1418   3001           00067         movlw .1
1419   00E0           00068         movwf ZAZNAM1
141A   01E1           00069         clrf ZAZNAM2
141B   0862           00070         movfw PREH_ADR_CL1
141C   00DA           00071         movwf HL_ADR_CL1
141D   0863           00072         movfw PREH_ADR_CL2
141E   00DB           00073         movwf HL_ADR_CL2
141F   0864           00074         movfw PREH_ADR_CL3
1420   00DC           00075         movwf HL_ADR_CL3
1421   0865           00076         movfw PREH_ADR_CL4
1422   00DD           00077         movwf HL_ADR_CL4
                      00078         PROG_PAGE_1
1423   158A               M                         bsf PCLATH,3
1424   120A               M                         bcf PCLATH,4
1425   2479           00079         call HLEDEJ
                      00080         PROG_PAGE_2
1426   118A               M                         bcf PCLATH,3
1427   160A               M                         bsf PCLATH,4
                      00081         BANK_2
1428   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
1429   1283               M                 bcf     STATUS,RP0    
142A   0830           00082         movfw 0x130
                      00083 ;       1. byte:        = 00h -> zadny vyhovujici zaznam nebyl nalezen
                      00084 ;                               = 01h -> zaznam je adresar
                      00085 ;                               = 02h -> zaznam je soubor; 
                      00086 ;                               = 06h -> zaznam je soubor s priponou MP3
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 152


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00087         BANK_0
142B   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
142C   1283               M                 bcf     STATUS,RP0    
142D   39FF           00088         andlw h'FF'
142E   1D03           00089         btfss STATUS,Z
142F   2C66           00090         goto HLEDEJ_ADR_NALEZEN
                      00091 ;HLEDEJ_ADR_NENALEZEN
1430                  00092 HLEDEJ_ADR_OADR_VIS
                      00093 ;       HLEDEJ_ADR_OADR_VIS
                      00094 ;       if (PREH_ADR_CL == ROOT){
                      00095 ;               PREH_STAV0=[stop]
                      00096 ;               exit
                      00097 ;       }else{
                      00098 ;               HLEDEJ_ADR_OADR_VIS_NOROOT              
                      00099 ;               najdi odkaz na PREH_ADR_CL v nadrazenem adresari                
                      00100 ;               hledej dalsi adresar v nadrazenem adresari po PREH_ADR_CL
                      00101 ;               PREH_ADR_CL = nadrazeny adresar
                      00102 ;               if (nalezeno){
                      00103 ;                       goto HLEDEJ_ADR_NALEZEN
                      00104 ;               }else{
                      00105 ;                       goto HLEDEJ_ADR_OADR_VIS
                      00106 ;               }
                      00107 ;       }
1430   0862           00108         movfw PREH_ADR_CL1
1431   0463           00109         iorwf PREH_ADR_CL2,w
1432   0464           00110         iorwf PREH_ADR_CL3,w
1433   0465           00111         iorwf PREH_ADR_CL4,w
1434   1D03           00112         btfss STATUS,Z  
1435   2C38           00113         goto HLEDEJ_ADR_OADR_VIS_NOROOT
                      00114 
1436   106E           00115         bcf PREH_STAV0,0        ; 0. bit =      0 => stop nebo pausa (nic nehraje)
                      00116 
1437   2CBA           00117         goto HLEDEJ_ADRESAR_KONEC
                      00118 
1438                  00119 HLEDEJ_ADR_OADR_VIS_NOROOT      
1438   0862           00120         movfw PREH_ADR_CL1
1439   00BC           00121         movwf CLUSTER1
143A   0863           00122         movfw PREH_ADR_CL2
143B   00BD           00123         movwf CLUSTER2
143C   0864           00124         movfw PREH_ADR_CL3
143D   00BE           00125         movwf CLUSTER3
143E   0865           00126         movfw PREH_ADR_CL4
143F   00BF           00127         movwf CLUSTER4
                      00128         
                      00129         PROG_PAGE_1
1440   158A               M                         bsf PCLATH,3
1441   120A               M                         bcf PCLATH,4
1442   26E3           00130         call HLEDEJ_V_NADRAZENEM        ; najdi odkaz na PREH_ADR_CL v nadrazenem adresari
                      00131         PROG_PAGE_2
1443   118A               M                         bcf PCLATH,3
1444   160A               M                         bsf PCLATH,4
                      00132 
                      00133         INDF_BANK_3
1445   1783               M                         bsf STATUS,IRP    
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 153


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1446   3090           00134         movlw h'90'
1447   0084           00135         movwf FSR
1448   0800           00136         movfw INDF
1449   00E2           00137         movwf PREH_ADR_CL1
144A   00DA           00138         movwf HL_ADR_CL1
144B   0A84           00139         incf FSR,f
144C   0800           00140         movfw INDF
144D   00E3           00141         movwf PREH_ADR_CL2
144E   00DB           00142         movwf HL_ADR_CL2
144F   0A84           00143         incf FSR,f
1450   0800           00144         movfw INDF
1451   00E4           00145         movwf PREH_ADR_CL3
1452   00DC           00146         movwf HL_ADR_CL3
1453   0A84           00147         incf FSR,f
1454   0800           00148         movfw INDF
1455   00E5           00149         movwf PREH_ADR_CL4                      ; PREH_ADR_CL = nadrazeny adresar
1456   00DD           00150         movwf HL_ADR_CL4
                      00151 
1457   3002           00152         movlw b'00000010'                       ; hledame nasledujici adresar
                      00153         PROG_PAGE_1
1458   158A               M                         bsf PCLATH,3
1459   120A               M                         bcf PCLATH,4
145A   2479           00154         call HLEDEJ
                      00155         PROG_PAGE_2                                     ; hledej dalsi adresar v nadrazenem adresari po 
                            PREH_ADR_CL
145B   118A               M                         bcf PCLATH,3
145C   160A               M                         bsf PCLATH,4
                      00156 ;               if (nalezeno){
                      00157 ;                       goto HLEDEJ_ADR_NALEZEN
                      00158 ;               }else{
                      00159 ;                       goto HLEDEJ_ADR_OADR_VIS
                      00160 ;               }
                      00161         BANK_2
145D   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
145E   1283               M                 bcf     STATUS,RP0    
145F   0830           00162         movfw 0x30
                      00163         BANK_0
1460   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
1461   1283               M                 bcf     STATUS,RP0    
1462   3C01           00164         sublw h'01'                     ; = 01h -> zaznam je adresar
1463   1D03           00165         btfss STATUS,Z
1464   2C30           00166         goto HLEDEJ_ADR_OADR_VIS
1465   2C66           00167         goto HLEDEJ_ADR_NALEZEN
                      00168 
                      00169 
                      00170 
1466                  00171 HLEDEJ_ADR_NALEZEN
                      00172         INDF_BANK_2
1466   1783               M                         bsf STATUS,IRP    
1467   303C           00173         movlw 0x3C
1468   0084           00174         movwf FSR
                      00175 
1469   0800           00176         movfw INDF
146A   00E2           00177         movwf PREH_ADR_CL1
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 154


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

146B   00DA           00178         movwf HL_ADR_CL1
146C   0A84           00179         incf FSR,f
146D   0800           00180         movfw INDF
146E   00E3           00181         movwf PREH_ADR_CL2
146F   00DB           00182         movwf HL_ADR_CL2
1470   0A84           00183         incf FSR,f
1471   0800           00184         movfw INDF
1472   00E4           00185         movwf PREH_ADR_CL3
1473   00DC           00186         movwf HL_ADR_CL3
1474   0A84           00187         incf FSR,f
1475   0800           00188         movfw INDF
1476   00E5           00189         movwf PREH_ADR_CL4
1477   00DD           00190         movwf HL_ADR_CL4
                      00191 
1478   302E           00192         movlw b'00101110'                       ; hledej 1. mp3
1479   00D9           00193         movwf HL_PARAMETRY
                      00194 
147A   156E           00195         bsf PREH_STAV0,2                        ; byl automaticky zmenen prehravany soubor/adresar
                      00196 
                      00197         PROG_PAGE_1
147B   158A               M                         bsf PCLATH,3
147C   120A               M                         bcf PCLATH,4
147D   2479           00198         call HLEDEJ
                      00199         PROG_PAGE_2
147E   118A               M                         bcf PCLATH,3
147F   160A               M                         bsf PCLATH,4
                      00200 
                      00201         BANK_2
1480   1703               M                 bsf     STATUS,RP1              ; BANK2  RP1:RP0 = 10
1481   1283               M                 bcf     STATUS,RP0    
1482   0830           00202         movfw 0x30
                      00203         BANK_0
1483   1303               M                 bcf     STATUS,RP1              ; BANK0  RP1:RP0 = 00
1484   1283               M                 bcf     STATUS,RP0    
1485   3C06           00204         sublw h'06'                     ; = 06h -> zaznam je soubor s priponou MP3
1486   1D03           00205         btfss STATUS,Z
1487   2CBA           00206         goto HLEDEJ_ADRESAR_KONEC
                      00207 
                      00208         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00209         ; byl nalezen soubor v podadresari, nastavime jej jako prehravany...
                      00210         INDF_BANK_2
1488   1783               M                         bsf STATUS,IRP    
1489   303C           00211         movlw 0x3C
148A   0084           00212         movwf FSR
                      00213 
148B   0800           00214         movfw INDF
148C   00E9           00215         movwf PREH_DATA_CL1
148D   00BC           00216         movwf CLUSTER1
148E   0A84           00217         incf FSR,f
148F   0800           00218         movfw INDF
1490   00EA           00219         movwf PREH_DATA_CL2
1491   00BD           00220         movwf CLUSTER2
1492   0A84           00221         incf FSR,f
1493   0800           00222         movfw INDF
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 155


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1494   00EB           00223         movwf PREH_DATA_CL3
1495   00BE           00224         movwf CLUSTER3
1496   0A84           00225         incf FSR,f
1497   0800           00226         movfw INDF
1498   00EC           00227         movwf PREH_DATA_CL4
1499   00BF           00228         movwf CLUSTER4
                      00229 
149A   0A84           00230         incf FSR,f
149B   0800           00231         movfw INDF
149C   00E6           00232         movwf PREH_ZAZNAM1
149D   0A84           00233         incf FSR,f
149E   0800           00234         movfw INDF
149F   00E7           00235         movwf PREH_ZAZNAM2
                      00236 
                      00237         PROG_PAGE_0
14A0   118A               M                         bcf PCLATH,3
14A1   120A               M                         bcf PCLATH,4
14A2   2573           00238         call ZJISTI_FRAGMENT
                      00239         PROG_PAGE_2
14A3   118A               M                         bcf PCLATH,3
14A4   160A               M                         bsf PCLATH,4
14A5   0851           00240         movfw FRAGMENT1
14A6   00D3           00241         movwf PREH_D_FRAGMENT1
14A7   0852           00242         movfw FRAGMENT2
14A8   00D4           00243         movwf PREH_D_FRAGMENT2
                      00244         ; aktualni prehravany soubor i prehravana slozka byly nastaveny...
                      00245 
14A9   01ED           00246         clrf PREH_DATA_POZICE
14AA   146E           00247         bsf PREH_STAV0,0                        ; je zvoleno play
14AB   14EE           00248         bsf PREH_STAV0,1                        ; je co prehravat
14AC   156E           00249         bsf PREH_STAV0,2                        ; byl automaticky zmenen prehravany soubor/adresar
                      00250 
14AD   10CD           00251         bcf VSREG_MODE_L,1                      ; prehravame normalni rychlosti 
14AE   106F           00252         bcf PREH_STAV1,0                        ; prehravame normalni rychlosti 
                      00253 
                      00254         PROG_PAGE_1     
14AF   158A               M                         bsf PCLATH,3
14B0   120A               M                         bcf PCLATH,4
14B1   204D           00255         call VS_SOFT_RESET
                      00256 
14B2   3000           00257         movlw VSADDR_MODE
14B3   00B6           00258         movwf TEMP1
14B4   084D           00259         movfw VSREG_MODE_L
14B5   00B7           00260         movwf TEMP2
14B6   01B8           00261         clrf TEMP3
14B7   201C           00262         call VS_WR_REG
                      00263         PROG_PAGE_2
14B8   118A               M                         bcf PCLATH,3
14B9   160A               M                         bsf PCLATH,4
                      00264 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
14BA                  00265 HLEDEJ_ADRESAR_KONEC
                      00266         PROG_PAGE_0
14BA   118A               M                         bcf PCLATH,3
14BB   120A               M                         bcf PCLATH,4
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 156


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

14BC   2914           00267         goto HLEDEJ_ADRESAR_RETURN
                      00091 
1800                  00092  org 0x1800                                     ; PAGE 3
                      00093         include "loudness.asm"  ; plugin dekoderu "loudness" a podprogramy pro jeho nahrani a obsluhu
                      00001 ; Plugin LOUDNESS pro dekoder VS1001k umoznoje pri dekodovani mp3 menit prenosovou charakteristiku.
                      00002 ; Vybirat muzeme celkem z 12 prednastavenych ekvalizeru.
                      00003 
                      00004 ; Samotny plugin je treba po resetu nahrat do RAM pameti dekoderu.
                      00005 ; Pak uz jej muzeme pres uzivatelske registry VS ovladat a poslouchat, jak nam to krasne hraje:)
                      00006 
                      00007 ; Je pouzit originalni vzorovy plugin od firmy VLSI (verze 1.41)
                      00008 ; Pro blizsi informace o pluginu si prectete datasheet ze stranek www.vlsi.fi
                      00009 
                      00010 ; Do VS registru WRAMADDR se nejdrive musi nahrat adresa 0x8200 pro zacatek pluginu na adrese 0x4200 
                      00011 ; (0x4200 + 0x4000 = 0x8200 vis. "6.5.8 WRAMADDR" datasheetu VS1001k)
                      00012 ; A pote do registru WRAM nasledujici tabulka. Prvni dato je dolni byte slova.
                      00013 
                      00014 ;# addr = 0x4200, 379 32-bit words = 1516 bytes
1800                  00015  org 0x1800                                     ; PAGE 3
1800   3413           00016         retlw 0x13
1801   3436           00017         retlw 0x36
1802   3424           00018         retlw 0x24
1803   3400           00019         retlw 0x00
1804   3412           00020         retlw 0x12
1805   343E           00021         retlw 0x3e
1806   3417           00022         retlw 0x17
1807   34B8           00023         retlw 0xb8
1808   3412           00024         retlw 0x12
1809   343E           00025         retlw 0x3e
180A   3415           00026         retlw 0x15
180B   3438           00027         retlw 0x38
180C   3405           00028         retlw 0x05
180D   343E           00029         retlw 0x3e
180E   3414           00030         retlw 0x14
180F   34B8           00031         retlw 0xb8
1810   3415           00032         retlw 0x15
1811   3436           00033         retlw 0x36
1812   3424           00034         retlw 0x24
1813   3400           00035         retlw 0x00
1814   3400           00036         retlw 0x00
1815   3400           00037         retlw 0x00
1816   340A           00038         retlw 0x0a
1817   3480           00039         retlw 0x80
1818   3410           00040         retlw 0x10
1819   343E           00041         retlw 0x3e
181A   3404           00042         retlw 0x04
181B   34B8           00043         retlw 0xb8
181C   3400           00044         retlw 0x00
181D   3400           00045         retlw 0x00
181E   3482           00046         retlw 0x82
181F   3400           00047         retlw 0x00
1820   3404           00048         retlw 0x04
1821   343E           00049         retlw 0x3e
1822   3412           00050         retlw 0x12
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 157


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1823   3478           00051         retlw 0x78
1824   3424           00052         retlw 0x24
1825   3460           00053         retlw 0x60
1826   3424           00054         retlw 0x24
1827   3400           00055         retlw 0x00
1828   3404           00056         retlw 0x04
1829   3400           00057         retlw 0x00
182A   3491           00058         retlw 0x91
182B   34E5           00059         retlw 0xe5
182C   3410           00060         retlw 0x10
182D   3428           00061         retlw 0x28
182E   3415           00062         retlw 0x15
182F   348A           00063         retlw 0x8a
1830   3494           00064         retlw 0x94
1831   3440           00065         retlw 0x40
1832   3424           00066         retlw 0x24
1833   3400           00067         retlw 0x00
1834   3400           00068         retlw 0x00
1835   3431           00069         retlw 0x31
1836   344C           00070         retlw 0x4c
1837   3498           00071         retlw 0x98
1838   3484           00072         retlw 0x84
1839   3442           00073         retlw 0x42
183A   3424           00074         retlw 0x24
183B   3400           00075         retlw 0x00
183C   3404           00076         retlw 0x04
183D   3400           00077         retlw 0x00
183E   3412           00078         retlw 0x12
183F   34E0           00079         retlw 0xe0
1840   3410           00080         retlw 0x10
1841   3428           00081         retlw 0x28
1842   3445           00082         retlw 0x45
1843   3487           00083         retlw 0x87
1844   3400           00084         retlw 0x00
1845   3400           00085         retlw 0x00
1846   3491           00086         retlw 0x91
1847   3400           00087         retlw 0x00
1848   3410           00088         retlw 0x10
1849   34F1           00089         retlw 0xf1
184A   3440           00090         retlw 0x40
184B   34B8           00091         retlw 0xb8
184C   3410           00092         retlw 0x10
184D   3429           00093         retlw 0x29
184E   34C0           00094         retlw 0xc0
184F   34D3           00095         retlw 0xd3
1850   3409           00096         retlw 0x09
1851   3430           00097         retlw 0x30
1852   3450           00098         retlw 0x50
1853   3438           00099         retlw 0x38
1854   3404           00100         retlw 0x04
1855   3400           00101         retlw 0x00
1856   3412           00102         retlw 0x12
1857   34E2           00103         retlw 0xe2
1858   3400           00104         retlw 0x00
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 158


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1859   3400           00105         retlw 0x00
185A   3491           00106         retlw 0x91
185B   3400           00107         retlw 0x00
185C   3410           00108         retlw 0x10
185D   34F1           00109         retlw 0xf1
185E   3450           00110         retlw 0x50
185F   3498           00111         retlw 0x98
1860   3410           00112         retlw 0x10
1861   3429           00113         retlw 0x29
1862   34C0           00114         retlw 0xc0
1863   34D3           00115         retlw 0xd3
1864   3413           00116         retlw 0x13
1865   3430           00117         retlw 0x30
1866   3424           00118         retlw 0x24
1867   3400           00119         retlw 0x00
1868   3409           00120         retlw 0x09
1869   3430           00121         retlw 0x30
186A   34D0           00122         retlw 0xd0
186B   341B           00123         retlw 0x1b
186C   3410           00124         retlw 0x10
186D   3428           00125         retlw 0x28
186E   3480           00126         retlw 0x80
186F   3490           00127         retlw 0x90
1870   3409           00128         retlw 0x09
1871   3430           00129         retlw 0x30
1872   34C0           00130         retlw 0xc0
1873   341B           00131         retlw 0x1b
1874   3410           00132         retlw 0x10
1875   34F1           00133         retlw 0xf1
1876   3440           00134         retlw 0x40
1877   34B8           00135         retlw 0xb8
1878   3410           00136         retlw 0x10
1879   3429           00137         retlw 0x29
187A   3440           00138         retlw 0x40
187B   34C6           00139         retlw 0xc6
187C   3409           00140         retlw 0x09
187D   3430           00141         retlw 0x30
187E   3450           00142         retlw 0x50
187F   3438           00143         retlw 0x38
1880   3404           00144         retlw 0x04
1881   3400           00145         retlw 0x00
1882   3412           00146         retlw 0x12
1883   34E2           00147         retlw 0xe2
1884   3400           00148         retlw 0x00
1885   3400           00149         retlw 0x00
1886   3491           00150         retlw 0x91
1887   3400           00151         retlw 0x00
1888   3410           00152         retlw 0x10
1889   34F1           00153         retlw 0xf1
188A   3450           00154         retlw 0x50
188B   3498           00155         retlw 0x98
188C   3410           00156         retlw 0x10
188D   3429           00157         retlw 0x29
188E   3440           00158         retlw 0x40
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 159


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

188F   34C6           00159         retlw 0xc6
1890   3413           00160         retlw 0x13
1891   3430           00161         retlw 0x30
1892   3424           00162         retlw 0x24
1893   3400           00163         retlw 0x00
1894   3409           00164         retlw 0x09
1895   3430           00165         retlw 0x30
1896   34D0           00166         retlw 0xd0
1897   341B           00167         retlw 0x1b
1898   3410           00168         retlw 0x10
1899   3428           00169         retlw 0x28
189A   3480           00170         retlw 0x80
189B   3490           00171         retlw 0x90
189C   3409           00172         retlw 0x09
189D   3430           00173         retlw 0x30
189E   34C0           00174         retlw 0xc0
189F   341B           00175         retlw 0x1b
18A0   3400           00176         retlw 0x00
18A1   3400           00177         retlw 0x00
18A2   3402           00178         retlw 0x02
18A3   3401           00179         retlw 0x01
18A4   3410           00180         retlw 0x10
18A5   3428           00181         retlw 0x28
18A6   3415           00182         retlw 0x15
18A7   348F           00183         retlw 0x8f
18A8   3400           00184         retlw 0x00
18A9   3400           00185         retlw 0x00
18AA   3424           00186         retlw 0x24
18AB   3400           00187         retlw 0x00
18AC   3400           00188         retlw 0x00
18AD   3431           00189         retlw 0x31
18AE   344C           00190         retlw 0x4c
18AF   3498           00191         retlw 0x98
18B0   3484           00192         retlw 0x84
18B1   3442           00193         retlw 0x42
18B2   3424           00194         retlw 0x24
18B3   3400           00195         retlw 0x00
18B4   3404           00196         retlw 0x04
18B5   3400           00197         retlw 0x00
18B6   3412           00198         retlw 0x12
18B7   34E0           00199         retlw 0xe0
18B8   3410           00200         retlw 0x10
18B9   3428           00201         retlw 0x28
18BA   3485           00202         retlw 0x85
18BB   348D           00203         retlw 0x8d
18BC   3400           00204         retlw 0x00
18BD   3400           00205         retlw 0x00
18BE   3451           00206         retlw 0x51
18BF   3400           00207         retlw 0x00
18C0   3480           00208         retlw 0x80
18C1   3441           00209         retlw 0x41
18C2   3440           00210         retlw 0x40
18C3   34B8           00211         retlw 0xb8
18C4   3410           00212         retlw 0x10
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 160


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

18C5   3429           00213         retlw 0x29
18C6   34C0           00214         retlw 0xc0
18C7   34D3           00215         retlw 0xd3
18C8   3409           00216         retlw 0x09
18C9   3430           00217         retlw 0x30
18CA   3450           00218         retlw 0x50
18CB   3438           00219         retlw 0x38
18CC   3409           00220         retlw 0x09
18CD   3430           00221         retlw 0x30
18CE   34D0           00222         retlw 0xd0
18CF   341B           00223         retlw 0x1b
18D0   3410           00224         retlw 0x10
18D1   3428           00225         retlw 0x28
18D2   3480           00226         retlw 0x80
18D3   3490           00227         retlw 0x90
18D4   3409           00228         retlw 0x09
18D5   3430           00229         retlw 0x30
18D6   34C0           00230         retlw 0xc0
18D7   341B           00231         retlw 0x1b
18D8   3480           00232         retlw 0x80
18D9   3441           00233         retlw 0x41
18DA   3440           00234         retlw 0x40
18DB   34B8           00235         retlw 0xb8
18DC   3410           00236         retlw 0x10
18DD   3429           00237         retlw 0x29
18DE   3440           00238         retlw 0x40
18DF   34C6           00239         retlw 0xc6
18E0   3409           00240         retlw 0x09
18E1   3430           00241         retlw 0x30
18E2   3450           00242         retlw 0x50
18E3   3438           00243         retlw 0x38
18E4   3409           00244         retlw 0x09
18E5   3430           00245         retlw 0x30
18E6   34D0           00246         retlw 0xd0
18E7   341B           00247         retlw 0x1b
18E8   3410           00248         retlw 0x10
18E9   3428           00249         retlw 0x28
18EA   3480           00250         retlw 0x80
18EB   3490           00251         retlw 0x90
18EC   3409           00252         retlw 0x09
18ED   3430           00253         retlw 0x30
18EE   34C0           00254         retlw 0xc0
18EF   341B           00255         retlw 0x1b
18F0   3424           00256         retlw 0x24
18F1   3460           00257         retlw 0x60
18F2   3424           00258         retlw 0x24
18F3   3400           00259         retlw 0x00
18F4   3400           00260         retlw 0x00
18F5   3400           00261         retlw 0x00
18F6   3424           00262         retlw 0x24
18F7   3400           00263         retlw 0x00
18F8   3410           00264         retlw 0x10
18F9   3428           00265         retlw 0x28
18FA   3495           00266         retlw 0x95
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 161


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

18FB   3490           00267         retlw 0x90
18FC   3400           00268         retlw 0x00
18FD   3400           00269         retlw 0x00
18FE   3424           00270         retlw 0x24
18FF   3400           00271         retlw 0x00
1900   3410           00272         retlw 0x10
1901   3429           00273         retlw 0x29
1902   3440           00274         retlw 0x40
1903   3492           00275         retlw 0x92
1904   3488           00276         retlw 0x88
1905   3441           00277         retlw 0x41
1906   3424           00278         retlw 0x24
1907   3400           00279         retlw 0x00
1908   34F4           00280         retlw 0xf4
1909   3436           00281         retlw 0x36
190A   3412           00282         retlw 0x12
190B   3458           00283         retlw 0x58
190C   34F0           00284         retlw 0xf0
190D   3436           00285         retlw 0x36
190E   3404           00286         retlw 0x04
190F   3498           00287         retlw 0x98
1910   3405           00288         retlw 0x05
1911   3434           00289         retlw 0x34
1912   3414           00290         retlw 0x14
1913   3490           00291         retlw 0x90
1914   34F3           00292         retlw 0xf3
1915   3436           00293         retlw 0x36
1916   3424           00294         retlw 0x24
1917   3400           00295         retlw 0x00
1918   34F2           00296         retlw 0xf2
1919   3436           00297         retlw 0x36
191A   3415           00298         retlw 0x15
191B   3418           00299         retlw 0x18
191C   3400           00300         retlw 0x00
191D   3420           00301         retlw 0x20
191E   3400           00302         retlw 0x00
191F   3400           00303         retlw 0x00
1920   34F2           00304         retlw 0xf2
1921   3436           00305         retlw 0x36
1922   3417           00306         retlw 0x17
1923   3498           00307         retlw 0x98
1924   3413           00308         retlw 0x13
1925   3436           00309         retlw 0x36
1926   3424           00310         retlw 0x24
1927   3400           00311         retlw 0x00
1928   3422           00312         retlw 0x22
1929   343E           00313         retlw 0x3e
192A   3415           00314         retlw 0x15
192B   34B8           00315         retlw 0xb8
192C   3405           00316         retlw 0x05
192D   343E           00317         retlw 0x3e
192E   3414           00318         retlw 0x14
192F   34B8           00319         retlw 0xb8
1930   3425           00320         retlw 0x25
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 162


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1931   3436           00321         retlw 0x36
1932   3424           00322         retlw 0x24
1933   3400           00323         retlw 0x00
1934   3400           00324         retlw 0x00
1935   3400           00325         retlw 0x00
1936   340A           00326         retlw 0x0a 
1937   3480           00327         retlw 0x80
1938   3410           00328         retlw 0x10
1939   343E           00329         retlw 0x3e
193A   3401           00330         retlw 0x01
193B   3438           00331         retlw 0x38
193C   3404           00332         retlw 0x04
193D   3400           00333         retlw 0x00
193E   3400           00334         retlw 0x00
193F   34E0           00335         retlw 0xe0
1940   3411           00336         retlw 0x11
1941   343E           00337         retlw 0x3e
1942   3410           00338         retlw 0x10
1943   3478           00339         retlw 0x78
1944   3413           00340         retlw 0x13
1945   343E           00341         retlw 0x3e
1946   340E           00342         retlw 0x0e 
1947   34F8           00343         retlw 0xf8
1948   3403           00344         retlw 0x03
1949   343E           00345         retlw 0x3e
194A   344C           00346         retlw 0x4c
194B   3450           00347         retlw 0x50
194C   3488           00348         retlw 0x88
194D   3444           00349         retlw 0x44
194E   34C0           00350         retlw 0xc0
194F   3433           00351         retlw 0x33
1950   3404           00352         retlw 0x04
1951   3400           00353         retlw 0x00
1952   34D0           00354         retlw 0xd0
1953   34E0           00355         retlw 0xe0
1954   3410           00356         retlw 0x10
1955   3428           00357         retlw 0x28
1956   3495           00358         retlw 0x95
1957   3498           00359         retlw 0x98
1958   3400           00360         retlw 0x00
1959   3400           00361         retlw 0x00
195A   34CE           00362         retlw 0xce 
195B   3403           00363         retlw 0x03
195C   3410           00364         retlw 0x10
195D   3424           00365         retlw 0x24
195E   34CE           00366         retlw 0xce 
195F   3496           00367         retlw 0x96
1960   3480           00368         retlw 0x80
1961   34B8           00369         retlw 0xb8
1962   344C           00370         retlw 0x4c
1963   3410           00371         retlw 0x10
1964   3405           00372         retlw 0x05
1965   3434           00373         retlw 0x34
1966   3424           00374         retlw 0x24
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 163


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1967   34C0           00375         retlw 0xc0
1968   3410           00376         retlw 0x10
1969   343F           00377         retlw 0x3f
196A   3424           00378         retlw 0x24
196B   3400           00379         retlw 0x00
196C   3405           00380         retlw 0x05
196D   343C           00381         retlw 0x3c
196E   3424           00382         retlw 0x24
196F   34C0           00383         retlw 0xc0
1970   3404           00384         retlw 0x04
1971   3400           00385         retlw 0x00
1972   3400           00386         retlw 0x00
1973   34E0           00387         retlw 0xe0
1974   3404           00388         retlw 0x04
1975   3400           00389         retlw 0x00
1976   34D0           00390         retlw 0xd0
1977   34E0           00391         retlw 0xe0
1978   3470           00392         retlw 0x70
1979   3438           00393         retlw 0x38
197A   34CC           00394         retlw 0xcc 
197B   3413           00395         retlw 0x13
197C   3404           00396         retlw 0x04
197D   3400           00397         retlw 0x00
197E   3400           00398         retlw 0x00
197F   34E2           00399         retlw 0xe2
1980   3410           00400         retlw 0x10
1981   3428           00401         retlw 0x28
1982   3400           00402         retlw 0x00
1983   34C4           00403         retlw 0xc4
1984   3413           00404         retlw 0x13
1985   3430           00405         retlw 0x30
1986   3424           00406         retlw 0x24
1987   3400           00407         retlw 0x00
1988   3470           00408         retlw 0x70
1989   3430           00409         retlw 0x30
198A   3424           00410         retlw 0x24
198B   3400           00411         retlw 0x00
198C   3480           00412         retlw 0x80
198D   3440           00413         retlw 0x40
198E   344C           00414         retlw 0x4c
198F   3400           00415         retlw 0x00
1990   3404           00416         retlw 0x04
1991   3400           00417         retlw 0x00
1992   3400           00418         retlw 0x00
1993   34E0           00419         retlw 0xe0
1994   3410           00420         retlw 0x10
1995   3428           00421         retlw 0x28
1996   3445           00422         retlw 0x45
1997   349B           00423         retlw 0x9b
1998   3400           00424         retlw 0x00
1999   3400           00425         retlw 0x00
199A   3424           00426         retlw 0x24
199B   3400           00427         retlw 0x00
199C   3400           00428         retlw 0x00
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 164


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

199D   3430           00429         retlw 0x30
199E   3424           00430         retlw 0x24
199F   3400           00431         retlw 0x00
19A0   3480           00432         retlw 0x80
19A1   3440           00433         retlw 0x40
19A2   3424           00434         retlw 0x24
19A3   3400           00435         retlw 0x00
19A4   3400           00436         retlw 0x00
19A5   3400           00437         retlw 0x00
19A6   3424           00438         retlw 0x24
19A7   3400           00439         retlw 0x00
19A8   3410           00440         retlw 0x10
19A9   3428           00441         retlw 0x28
19AA   3495           00442         retlw 0x95
19AB   349C           00443         retlw 0x9c
19AC   3490           00444         retlw 0x90
19AD   3444           00445         retlw 0x44
19AE   3424           00446         retlw 0x24
19AF   3400           00447         retlw 0x00
19B0   3404           00448         retlw 0x04
19B1   3400           00449         retlw 0x00
19B2   3400           00450         retlw 0x00
19B3   34E0           00451         retlw 0xe0
19B4   3404           00452         retlw 0x04
19B5   3400           00453         retlw 0x00
19B6   34D0           00454         retlw 0xd0
19B7   34E0           00455         retlw 0xe0
19B8   3470           00456         retlw 0x70
19B9   3438           00457         retlw 0x38
19BA   3424           00458         retlw 0x24
19BB   3400           00459         retlw 0x00
19BC   3404           00460         retlw 0x04
19BD   3400           00461         retlw 0x00
19BE   3400           00462         retlw 0x00
19BF   34E2           00463         retlw 0xe2
19C0   3413           00464         retlw 0x13
19C1   3430           00465         retlw 0x30
19C2   3424           00466         retlw 0x24
19C3   3400           00467         retlw 0x00
19C4   3490           00468         retlw 0x90
19C5   3444           00469         retlw 0x44
19C6   3400           00470         retlw 0x00
19C7   3420           00471         retlw 0x20
19C8   3400           00472         retlw 0x00
19C9   3400           00473         retlw 0x00
19CA   3480           00474         retlw 0x80
19CB   3400           00475         retlw 0x00
19CC   3410           00476         retlw 0x10
19CD   3428           00477         retlw 0x28
19CE   3495           00478         retlw 0x95
19CF   349F           00479         retlw 0x9f
19D0   3401           00480         retlw 0x01
19D1   3400           00481         retlw 0x00
19D2   3410           00482         retlw 0x10
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 165


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

19D3   34E0           00483         retlw 0xe0
19D4   3410           00484         retlw 0x10
19D5   3400           00485         retlw 0x00
19D6   3480           00486         retlw 0x80
19D7   34A2           00487         retlw 0xa2
19D8   3409           00488         retlw 0x09
19D9   3430           00489         retlw 0x30
19DA   3440           00490         retlw 0x40
19DB   3420           00491         retlw 0x20
19DC   340F           00492         retlw 0x0f 
19DD   3400           00493         retlw 0x00
19DE   3400           00494         retlw 0x00
19DF   347C           00495         retlw 0x7c
19E0   3409           00496         retlw 0x09
19E1   3430           00497         retlw 0x30
19E2   3440           00498         retlw 0x40
19E3   3420           00499         retlw 0x20
19E4   3420           00500         retlw 0x20
19E5   3400           00501         retlw 0x00
19E6   3400           00502         retlw 0x00
19E7   3400           00503         retlw 0x00
19E8   3409           00504         retlw 0x09
19E9   3430           00505         retlw 0x30
19EA   3440           00506         retlw 0x40
19EB   3420           00507         retlw 0x20
19EC   3407           00508         retlw 0x07
19ED   3400           00509         retlw 0x00
19EE   3400           00510         retlw 0x00
19EF   34E0           00511         retlw 0xe0
19F0   3410           00512         retlw 0x10
19F1   3428           00513         retlw 0x28
19F2   3400           00514         retlw 0x00
19F3   34C2           00515         retlw 0xc2
19F4   3409           00516         retlw 0x09
19F5   3430           00517         retlw 0x30
19F6   3400           00518         retlw 0x00
19F7   3420           00519         retlw 0x20
19F8   3400           00520         retlw 0x00
19F9   3464           00521         retlw 0x64
19FA   3424           00522         retlw 0x24
19FB   3400           00523         retlw 0x00
19FC   3400           00524         retlw 0x00
19FD   3400           00525         retlw 0x00
19FE   34C0           00526         retlw 0xc0
19FF   3400           00527         retlw 0x00
1A00   3410           00528         retlw 0x10
1A01   3428           00529         retlw 0x28
1A02   34D5           00530         retlw 0xd5
1A03   34A2           00531         retlw 0xa2
1A04   3400           00532         retlw 0x00
1A05   3400           00533         retlw 0x00
1A06   3424           00534         retlw 0x24
1A07   3400           00535         retlw 0x00
1A08   340E           00536         retlw 0x0e 
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 166


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1A09   3400           00537         retlw 0x00
1A0A   3440           00538         retlw 0x40
1A0B   3491           00539         retlw 0x91
1A0C   3409           00540         retlw 0x09
1A0D   3430           00541         retlw 0x30
1A0E   3440           00542         retlw 0x40
1A0F   3420           00543         retlw 0x20
1A10   3411           00544         retlw 0x11
1A11   3400           00545         retlw 0x00
1A12   3440           00546         retlw 0x40
1A13   3497           00547         retlw 0x97
1A14   3409           00548         retlw 0x09
1A15   3430           00549         retlw 0x30
1A16   3440           00550         retlw 0x40
1A17   3420           00551         retlw 0x20
1A18   3420           00552         retlw 0x20
1A19   3400           00553         retlw 0x00
1A1A   3400           00554         retlw 0x00
1A1B   3400           00555         retlw 0x00
1A1C   3409           00556         retlw 0x09
1A1D   3430           00557         retlw 0x30
1A1E   3440           00558         retlw 0x40
1A1F   3420           00559         retlw 0x20
1A20   3407           00560         retlw 0x07
1A21   3400           00561         retlw 0x00
1A22   3400           00562         retlw 0x00
1A23   34D7           00563         retlw 0xd7
1A24   3410           00564         retlw 0x10
1A25   3428           00565         retlw 0x28
1A26   3400           00566         retlw 0x00
1A27   34C2           00567         retlw 0xc2
1A28   3409           00568         retlw 0x09
1A29   3430           00569         retlw 0x30
1A2A   3400           00570         retlw 0x00
1A2B   3420           00571         retlw 0x20
1A2C   3400           00572         retlw 0x00
1A2D   3464           00573         retlw 0x64
1A2E   3424           00574         retlw 0x24
1A2F   3400           00575         retlw 0x00
1A30   3400           00576         retlw 0x00
1A31   3400           00577         retlw 0x00
1A32   3400           00578         retlw 0x00
1A33   3401           00579         retlw 0x01
1A34   3410           00580         retlw 0x10
1A35   3428           00581         retlw 0x28
1A36   3415           00582         retlw 0x15
1A37   34A6           00583         retlw 0xa6
1A38   3400           00584         retlw 0x00
1A39   3400           00585         retlw 0x00
1A3A   3424           00586         retlw 0x24
1A3B   3400           00587         retlw 0x00
1A3C   3411           00588         retlw 0x11
1A3D   3400           00589         retlw 0x00
1A3E   3440           00590         retlw 0x40
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 167


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1A3F   3466           00591         retlw 0x66
1A40   3409           00592         retlw 0x09
1A41   3430           00593         retlw 0x30
1A42   3440           00594         retlw 0x40
1A43   3420           00595         retlw 0x20
1A44   340E           00596         retlw 0x0e 
1A45   3400           00597         retlw 0x00
1A46   3440           00598         retlw 0x40
1A47   34BA           00599         retlw 0xba
1A48   3409           00600         retlw 0x09
1A49   3430           00601         retlw 0x30
1A4A   3440           00602         retlw 0x40
1A4B   3420           00603         retlw 0x20
1A4C   3420           00604         retlw 0x20
1A4D   3400           00605         retlw 0x00
1A4E   3400           00606         retlw 0x00
1A4F   3400           00607         retlw 0x00
1A50   3409           00608         retlw 0x09
1A51   3430           00609         retlw 0x30
1A52   3440           00610         retlw 0x40
1A53   3420           00611         retlw 0x20
1A54   3407           00612         retlw 0x07
1A55   3400           00613         retlw 0x00
1A56   3480           00614         retlw 0x80
1A57   34C2           00615         retlw 0xc2
1A58   3410           00616         retlw 0x10
1A59   3428           00617         retlw 0x28
1A5A   3400           00618         retlw 0x00
1A5B   34C2           00619         retlw 0xc2
1A5C   3409           00620         retlw 0x09
1A5D   3430           00621         retlw 0x30
1A5E   3400           00622         retlw 0x00
1A5F   3420           00623         retlw 0x20
1A60   3400           00624         retlw 0x00
1A61   3464           00625         retlw 0x64
1A62   3424           00626         retlw 0x24
1A63   3400           00627         retlw 0x00
1A64   3400           00628         retlw 0x00
1A65   3400           00629         retlw 0x00
1A66   3440           00630         retlw 0x40
1A67   3401           00631         retlw 0x01
1A68   3410           00632         retlw 0x10
1A69   3428           00633         retlw 0x28
1A6A   3455           00634         retlw 0x55
1A6B   34A9           00635         retlw 0xa9
1A6C   3400           00636         retlw 0x00
1A6D   3400           00637         retlw 0x00
1A6E   3424           00638         retlw 0x24
1A6F   3400           00639         retlw 0x00
1A70   3412           00640         retlw 0x12
1A71   3400           00641         retlw 0x00
1A72   3480           00642         retlw 0x80
1A73   3414           00643         retlw 0x14
1A74   3409           00644         retlw 0x09
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 168


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1A75   3430           00645         retlw 0x30
1A76   3440           00646         retlw 0x40
1A77   3420           00647         retlw 0x20
1A78   340E           00648         retlw 0x0e 
1A79   3400           00649         retlw 0x00
1A7A   3400           00650         retlw 0x00
1A7B   3429           00651         retlw 0x29
1A7C   3409           00652         retlw 0x09
1A7D   3430           00653         retlw 0x30
1A7E   3440           00654         retlw 0x40
1A7F   3420           00655         retlw 0x20
1A80   3420           00656         retlw 0x20
1A81   3400           00657         retlw 0x00
1A82   3400           00658         retlw 0x00
1A83   3400           00659         retlw 0x00
1A84   3409           00660         retlw 0x09
1A85   3430           00661         retlw 0x30
1A86   3440           00662         retlw 0x40
1A87   3420           00663         retlw 0x20
1A88   3407           00664         retlw 0x07
1A89   3400           00665         retlw 0x00
1A8A   3440           00666         retlw 0x40
1A8B   34E1           00667         retlw 0xe1
1A8C   3410           00668         retlw 0x10
1A8D   3428           00669         retlw 0x28
1A8E   3400           00670         retlw 0x00
1A8F   34C2           00671         retlw 0xc2
1A90   3409           00672         retlw 0x09
1A91   3430           00673         retlw 0x30
1A92   3400           00674         retlw 0x00
1A93   3420           00675         retlw 0x20
1A94   3400           00676         retlw 0x00
1A95   3464           00677         retlw 0x64
1A96   3424           00678         retlw 0x24
1A97   3400           00679         retlw 0x00
1A98   3400           00680         retlw 0x00
1A99   3400           00681         retlw 0x00
1A9A   3480           00682         retlw 0x80
1A9B   3401           00683         retlw 0x01
1A9C   3410           00684         retlw 0x10
1A9D   3428           00685         retlw 0x28
1A9E   3455           00686         retlw 0x55
1A9F   34AC           00687         retlw 0xac
1AA0   3400           00688         retlw 0x00
1AA1   3400           00689         retlw 0x00
1AA2   3424           00690         retlw 0x24
1AA3   3400           00691         retlw 0x00
1AA4   3410           00692         retlw 0x10
1AA5   3400           00693         retlw 0x00
1AA6   3400           00694         retlw 0x00
1AA7   3400           00695         retlw 0x00
1AA8   3480           00696         retlw 0x80
1AA9   34B8           00697         retlw 0xb8
1AAA   3440           00698         retlw 0x40
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 169


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1AAB   34A0           00699         retlw 0xa0
1AAC   3409           00700         retlw 0x09
1AAD   3430           00701         retlw 0x30
1AAE   3440           00702         retlw 0x40
1AAF   3420           00703         retlw 0x20
1AB0   3438           00704         retlw 0x38
1AB1   3400           00705         retlw 0x00
1AB2   3400           00706         retlw 0x00
1AB3   3429           00707         retlw 0x29
1AB4   3409           00708         retlw 0x09
1AB5   3430           00709         retlw 0x30
1AB6   3440           00710         retlw 0x40
1AB7   3420           00711         retlw 0x20
1AB8   3438           00712         retlw 0x38
1AB9   3400           00713         retlw 0x00
1ABA   3480           00714         retlw 0x80
1ABB   3410           00715         retlw 0x10
1ABC   3410           00716         retlw 0x10
1ABD   3428           00717         retlw 0x28
1ABE   3400           00718         retlw 0x00
1ABF   34C2           00719         retlw 0xc2
1AC0   3409           00720         retlw 0x09
1AC1   3430           00721         retlw 0x30
1AC2   3400           00722         retlw 0x00
1AC3   3420           00723         retlw 0x20
1AC4   3400           00724         retlw 0x00
1AC5   3464           00725         retlw 0x64
1AC6   3424           00726         retlw 0x24
1AC7   3400           00727         retlw 0x00
1AC8   3400           00728         retlw 0x00
1AC9   3400           00729         retlw 0x00
1ACA   34C0           00730         retlw 0xc0
1ACB   3401           00731         retlw 0x01
1ACC   3410           00732         retlw 0x10
1ACD   3428           00733         retlw 0x28
1ACE   3495           00734         retlw 0x95
1ACF   34AF           00735         retlw 0xaf
1AD0   3400           00736         retlw 0x00
1AD1   3400           00737         retlw 0x00
1AD2   3424           00738         retlw 0x24
1AD3   3400           00739         retlw 0x00
1AD4   3418           00740         retlw 0x18
1AD5   3400           00741         retlw 0x00
1AD6   3400           00742         retlw 0x00
1AD7   3400           00743         retlw 0x00
1AD8   3409           00744         retlw 0x09
1AD9   3430           00745         retlw 0x30
1ADA   3440           00746         retlw 0x40
1ADB   3420           00747         retlw 0x20
1ADC   3439           00748         retlw 0x39
1ADD   3400           00749         retlw 0x00
1ADE   3400           00750         retlw 0x00
1ADF   34FC           00751         retlw 0xfc
1AE0   3409           00752         retlw 0x09
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 170


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1AE1   3430           00753         retlw 0x30
1AE2   3440           00754         retlw 0x40
1AE3   3420           00755         retlw 0x20
1AE4   3438           00756         retlw 0x38
1AE5   3400           00757         retlw 0x00
1AE6   3400           00758         retlw 0x00
1AE7   3429           00759         retlw 0x29
1AE8   3409           00760         retlw 0x09
1AE9   3430           00761         retlw 0x30
1AEA   3440           00762         retlw 0x40
1AEB   3420           00763         retlw 0x20
1AEC   3438           00764         retlw 0x38
1AED   3400           00765         retlw 0x00
1AEE   3480           00766         retlw 0x80
1AEF   3410           00767         retlw 0x10
1AF0   3410           00768         retlw 0x10
1AF1   3428           00769         retlw 0x28
1AF2   3400           00770         retlw 0x00
1AF3   34C2           00771         retlw 0xc2
1AF4   3409           00772         retlw 0x09
1AF5   3430           00773         retlw 0x30
1AF6   3400           00774         retlw 0x00
1AF7   3420           00775         retlw 0x20
1AF8   3400           00776         retlw 0x00
1AF9   3464           00777         retlw 0x64
1AFA   3424           00778         retlw 0x24
1AFB   3400           00779         retlw 0x00
1AFC   3400           00780         retlw 0x00
1AFD   3400           00781         retlw 0x00
1AFE   3400           00782         retlw 0x00
1AFF   3402           00783         retlw 0x02
1B00   3410           00784         retlw 0x10
1B01   3428           00785         retlw 0x28
1B02   34D5           00786         retlw 0xd5
1B03   34B2           00787         retlw 0xb2
1B04   3401           00788         retlw 0x01
1B05   3400           00789         retlw 0x00
1B06   3410           00790         retlw 0x10
1B07   34E0           00791         retlw 0xe0
1B08   3415           00792         retlw 0x15
1B09   3400           00793         retlw 0x00
1B0A   3400           00794         retlw 0x00
1B0B   3458           00795         retlw 0x58
1B0C   3409           00796         retlw 0x09
1B0D   3430           00797         retlw 0x30
1B0E   3440           00798         retlw 0x40
1B0F   3420           00799         retlw 0x20
1B10   3438           00800         retlw 0x38
1B11   3400           00801         retlw 0x00
1B12   34C0           00802         retlw 0xc0
1B13   3488           00803         retlw 0x88
1B14   3409           00804         retlw 0x09
1B15   3430           00805         retlw 0x30
1B16   3440           00806         retlw 0x40
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 171


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B17   3420           00807         retlw 0x20
1B18   3438           00808         retlw 0x38
1B19   3400           00809         retlw 0x00
1B1A   3440           00810         retlw 0x40
1B1B   3433           00811         retlw 0x33
1B1C   3409           00812         retlw 0x09
1B1D   3430           00813         retlw 0x30
1B1E   3440           00814         retlw 0x40
1B1F   3420           00815         retlw 0x20
1B20   3438           00816         retlw 0x38
1B21   3400           00817         retlw 0x00
1B22   3480           00818         retlw 0x80
1B23   3410           00819         retlw 0x10
1B24   3410           00820         retlw 0x10
1B25   3428           00821         retlw 0x28
1B26   3400           00822         retlw 0x00
1B27   34C2           00823         retlw 0xc2
1B28   3409           00824         retlw 0x09
1B29   3430           00825         retlw 0x30
1B2A   3400           00826         retlw 0x00
1B2B   3420           00827         retlw 0x20
1B2C   3400           00828         retlw 0x00
1B2D   3464           00829         retlw 0x64
1B2E   3424           00830         retlw 0x24
1B2F   3400           00831         retlw 0x00
1B30   3400           00832         retlw 0x00
1B31   3400           00833         retlw 0x00
1B32   3440           00834         retlw 0x40
1B33   3402           00835         retlw 0x02
1B34   3410           00836         retlw 0x10
1B35   3428           00837         retlw 0x28
1B36   3415           00838         retlw 0x15
1B37   34B6           00839         retlw 0xb6
1B38   3400           00840         retlw 0x00
1B39   3400           00841         retlw 0x00
1B3A   3424           00842         retlw 0x24
1B3B   3400           00843         retlw 0x00
1B3C   3419           00844         retlw 0x19
1B3D   3400           00845         retlw 0x00
1B3E   3400           00846         retlw 0x00
1B3F   34D3           00847         retlw 0xd3
1B40   3409           00848         retlw 0x09
1B41   3430           00849         retlw 0x30
1B42   3440           00850         retlw 0x40
1B43   3420           00851         retlw 0x20
1B44   3406           00852         retlw 0x06
1B45   3400           00853         retlw 0x00
1B46   3400           00854         retlw 0x00
1B47   342D           00855         retlw 0x2d
1B48   3409           00856         retlw 0x09
1B49   3430           00857         retlw 0x30
1B4A   3440           00858         retlw 0x40
1B4B   3420           00859         retlw 0x20
1B4C   3438           00860         retlw 0x38
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 172


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B4D   3400           00861         retlw 0x00
1B4E   3440           00862         retlw 0x40
1B4F   3408           00863         retlw 0x08
1B50   3409           00864         retlw 0x09
1B51   3430           00865         retlw 0x30
1B52   3440           00866         retlw 0x40
1B53   3420           00867         retlw 0x20
1B54   3438           00868         retlw 0x38
1B55   3400           00869         retlw 0x00
1B56   3480           00870         retlw 0x80
1B57   3410           00871         retlw 0x10
1B58   3410           00872         retlw 0x10
1B59   3428           00873         retlw 0x28
1B5A   3400           00874         retlw 0x00
1B5B   34C2           00875         retlw 0xc2
1B5C   3409           00876         retlw 0x09
1B5D   3430           00877         retlw 0x30
1B5E   3400           00878         retlw 0x00
1B5F   3420           00879         retlw 0x20
1B60   3400           00880         retlw 0x00
1B61   3464           00881         retlw 0x64
1B62   3424           00882         retlw 0x24
1B63   3400           00883         retlw 0x00
1B64   3400           00884         retlw 0x00
1B65   3400           00885         retlw 0x00
1B66   3480           00886         retlw 0x80
1B67   3402           00887         retlw 0x02
1B68   3410           00888         retlw 0x10
1B69   3428           00889         retlw 0x28
1B6A   3415           00890         retlw 0x15
1B6B   34B9           00891         retlw 0xb9
1B6C   3400           00892         retlw 0x00
1B6D   3400           00893         retlw 0x00
1B6E   3424           00894         retlw 0x24
1B6F   3400           00895         retlw 0x00
1B70   3410           00896         retlw 0x10
1B71   3400           00897         retlw 0x00
1B72   3400           00898         retlw 0x00
1B73   3400           00899         retlw 0x00
1B74   3480           00900         retlw 0x80
1B75   34B8           00901         retlw 0xb8
1B76   3440           00902         retlw 0x40
1B77   34A0           00903         retlw 0xa0
1B78   3409           00904         retlw 0x09
1B79   3430           00905         retlw 0x30
1B7A   3440           00906         retlw 0x40
1B7B   3420           00907         retlw 0x20
1B7C   3438           00908         retlw 0x38
1B7D   3400           00909         retlw 0x00
1B7E   3480           00910         retlw 0x80
1B7F   3466           00911         retlw 0x66
1B80   3409           00912         retlw 0x09
1B81   3430           00913         retlw 0x30
1B82   3440           00914         retlw 0x40
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 173


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1B83   3420           00915         retlw 0x20
1B84   3438           00916         retlw 0x38
1B85   3400           00917         retlw 0x00
1B86   3400           00918         retlw 0x00
1B87   3429           00919         retlw 0x29
1B88   3410           00920         retlw 0x10
1B89   3428           00921         retlw 0x28
1B8A   3400           00922         retlw 0x00
1B8B   34C2           00923         retlw 0xc2
1B8C   3409           00924         retlw 0x09
1B8D   3430           00925         retlw 0x30
1B8E   3400           00926         retlw 0x00
1B8F   3420           00927         retlw 0x20
1B90   3400           00928         retlw 0x00
1B91   3464           00929         retlw 0x64
1B92   3424           00930         retlw 0x24
1B93   3400           00931         retlw 0x00
1B94   3400           00932         retlw 0x00
1B95   3400           00933         retlw 0x00
1B96   34C0           00934         retlw 0xc0
1B97   3402           00935         retlw 0x02
1B98   3410           00936         retlw 0x10
1B99   3428           00937         retlw 0x28
1B9A   3455           00938         retlw 0x55
1B9B   34BC           00939         retlw 0xbc
1B9C   3400           00940         retlw 0x00
1B9D   3400           00941         retlw 0x00
1B9E   3424           00942         retlw 0x24
1B9F   3400           00943         retlw 0x00
1BA0   3418           00944         retlw 0x18
1BA1   3400           00945         retlw 0x00
1BA2   3400           00946         retlw 0x00
1BA3   3400           00947         retlw 0x00
1BA4   3409           00948         retlw 0x09
1BA5   3430           00949         retlw 0x30
1BA6   3440           00950         retlw 0x40
1BA7   3420           00951         retlw 0x20
1BA8   3439           00952         retlw 0x39
1BA9   3400           00953         retlw 0x00
1BAA   3400           00954         retlw 0x00
1BAB   34FC           00955         retlw 0xfc
1BAC   3409           00956         retlw 0x09
1BAD   3430           00957         retlw 0x30
1BAE   3440           00958         retlw 0x40
1BAF   3420           00959         retlw 0x20
1BB0   3438           00960         retlw 0x38
1BB1   3400           00961         retlw 0x00
1BB2   3400           00962         retlw 0x00
1BB3   347B           00963         retlw 0x7b
1BB4   3409           00964         retlw 0x09
1BB5   3430           00965         retlw 0x30
1BB6   3440           00966         retlw 0x40
1BB7   3420           00967         retlw 0x20
1BB8   3438           00968         retlw 0x38
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 174


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1BB9   3400           00969         retlw 0x00
1BBA   3440           00970         retlw 0x40
1BBB   3433           00971         retlw 0x33
1BBC   3410           00972         retlw 0x10
1BBD   3428           00973         retlw 0x28
1BBE   3400           00974         retlw 0x00
1BBF   34C2           00975         retlw 0xc2
1BC0   3409           00976         retlw 0x09
1BC1   3430           00977         retlw 0x30
1BC2   3400           00978         retlw 0x00
1BC3   3420           00979         retlw 0x20
1BC4   3400           00980         retlw 0x00
1BC5   3464           00981         retlw 0x64
1BC6   3424           00982         retlw 0x24
1BC7   3400           00983         retlw 0x00
1BC8   3400           00984         retlw 0x00
1BC9   3400           00985         retlw 0x00
1BCA   3400           00986         retlw 0x00
1BCB   3403           00987         retlw 0x03
1BCC   3410           00988         retlw 0x10
1BCD   3428           00989         retlw 0x28
1BCE   3495           00990         retlw 0x95
1BCF   34BF           00991         retlw 0xbf
1BD0   3400           00992         retlw 0x00
1BD1   3400           00993         retlw 0x00
1BD2   3424           00994         retlw 0x24
1BD3   3400           00995         retlw 0x00
1BD4   3415           00996         retlw 0x15
1BD5   3400           00997         retlw 0x00
1BD6   3400           00998         retlw 0x00
1BD7   3458           00999         retlw 0x58
1BD8   3409           01000         retlw 0x09
1BD9   3430           01001         retlw 0x30
1BDA   3440           01002         retlw 0x40
1BDB   3420           01003         retlw 0x20
1BDC   3438           01004         retlw 0x38
1BDD   3400           01005         retlw 0x00
1BDE   34C0           01006         retlw 0xc0
1BDF   3488           01007         retlw 0x88
1BE0   3409           01008         retlw 0x09
1BE1   3430           01009         retlw 0x30
1BE2   3440           01010         retlw 0x40
1BE3   3420           01011         retlw 0x20
1BE4   3438           01012         retlw 0x38
1BE5   3400           01013         retlw 0x00
1BE6   3480           01014         retlw 0x80
1BE7   3466           01015         retlw 0x66
1BE8   3409           01016         retlw 0x09
1BE9   3430           01017         retlw 0x30
1BEA   3440           01018         retlw 0x40
1BEB   3420           01019         retlw 0x20
1BEC   3438           01020         retlw 0x38
1BED   3400           01021         retlw 0x00
1BEE   34C0           01022         retlw 0xc0
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 175


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1BEF   3424           01023         retlw 0x24
1BF0   3410           01024         retlw 0x10
1BF1   3428           01025         retlw 0x28
1BF2   3400           01026         retlw 0x00
1BF3   34C2           01027         retlw 0xc2
1BF4   3409           01028         retlw 0x09
1BF5   3430           01029         retlw 0x30
1BF6   3400           01030         retlw 0x00
1BF7   3420           01031         retlw 0x20
1BF8   3400           01032         retlw 0x00
1BF9   3464           01033         retlw 0x64
1BFA   3424           01034         retlw 0x24
1BFB   3400           01035         retlw 0x00
1BFC   3410           01036         retlw 0x10
1BFD   3400           01037         retlw 0x00
1BFE   3400           01038         retlw 0x00
1BFF   3400           01039         retlw 0x00
1C00   3410           01040         retlw 0x10
1C01   3428           01041         retlw 0x28
1C02   3415           01042         retlw 0x15
1C03   34C2           01043         retlw 0xc2
1C04   3400           01044         retlw 0x00
1C05   3400           01045         retlw 0x00
1C06   3424           01046         retlw 0x24
1C07   3400           01047         retlw 0x00
1C08   3409           01048         retlw 0x09
1C09   3430           01049         retlw 0x30
1C0A   3440           01050         retlw 0x40
1C0B   3420           01051         retlw 0x20
1C0C   3409           01052         retlw 0x09
1C0D   3430           01053         retlw 0x30
1C0E   3440           01054         retlw 0x40
1C0F   3420           01055         retlw 0x20
1C10   3438           01056         retlw 0x38
1C11   3400           01057         retlw 0x00
1C12   3480           01058         retlw 0x80
1C13   3414           01059         retlw 0x14
1C14   3409           01060         retlw 0x09
1C15   3430           01061         retlw 0x30
1C16   3440           01062         retlw 0x40
1C17   3420           01063         retlw 0x20
1C18   3438           01064         retlw 0x38
1C19   3400           01065         retlw 0x00
1C1A   3400           01066         retlw 0x00
1C1B   3452           01067         retlw 0x52
1C1C   3409           01068         retlw 0x09
1C1D   3430           01069         retlw 0x30
1C1E   3400           01070         retlw 0x00
1C1F   3420           01071         retlw 0x20
1C20   3401           01072         retlw 0x01
1C21   3400           01073         retlw 0x00
1C22   3410           01074         retlw 0x10
1C23   34E1           01075         retlw 0xe1
1C24   3400           01076         retlw 0x00
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 176


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C25   3400           01077         retlw 0x00
1C26   3400           01078         retlw 0x00
1C27   3400           01079         retlw 0x00
1C28   3400           01080         retlw 0x00
1C29   3400           01081         retlw 0x00
1C2A   3401           01082         retlw 0x01
1C2B   3401           01083         retlw 0x01
1C2C   3412           01084         retlw 0x12
1C2D   3464           01085         retlw 0x64
1C2E   3400           01086         retlw 0x00
1C2F   34A0           01087         retlw 0xa0
1C30   3400           01088         retlw 0x00
1C31   3400           01089         retlw 0x00
1C32   3440           01090         retlw 0x40
1C33   3400           01091         retlw 0x00
1C34   3410           01092         retlw 0x10
1C35   3428           01093         retlw 0x28
1C36   3419           01094         retlw 0x19
1C37   34C4           01095         retlw 0xc4
1C38   3404           01096         retlw 0x04
1C39   3400           01097         retlw 0x00
1C3A   3490           01098         retlw 0x90
1C3B   34E5           01099         retlw 0xe5
1C3C   3490           01100         retlw 0x90
1C3D   3440           01101         retlw 0x40
1C3E   3424           01102         retlw 0x24
1C3F   3400           01103         retlw 0x00
1C40   3400           01104         retlw 0x00
1C41   3438           01105         retlw 0x38
1C42   3424           01106         retlw 0x24
1C43   3400           01107         retlw 0x00
1C44   34F3           01108         retlw 0xf3
1C45   3436           01109         retlw 0x36
1C46   3424           01110         retlw 0x24
1C47   3440           01111         retlw 0x40
1C48   34F3           01112         retlw 0xf3
1C49   3436           01113         retlw 0x36
1C4A   340E           01114         retlw 0x0e 
1C4B   34D8           01115         retlw 0xd8
1C4C   34F1           01116         retlw 0xf1
1C4D   3436           01117         retlw 0x36
1C4E   3410           01118         retlw 0x10
1C4F   3458           01119         retlw 0x58
1C50   34F0           01120         retlw 0xf0
1C51   3436           01121         retlw 0x36
1C52   3401           01122         retlw 0x01
1C53   3418           01123         retlw 0x18
1C54   3405           01124         retlw 0x05
1C55   3434           01125         retlw 0x34
1C56   3414           01126         retlw 0x14
1C57   3490           01127         retlw 0x90
1C58   34E3           01128         retlw 0xe3
1C59   3436           01129         retlw 0x36
1C5A   3424           01130         retlw 0x24
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 177


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C5B   3400           01131         retlw 0x00
1C5C   3400           01132         retlw 0x00
1C5D   3420           01133         retlw 0x20
1C5E   3400           01134         retlw 0x00
1C5F   3400           01135         retlw 0x00
1C60   34F2           01136         retlw 0xf2
1C61   3436           01137         retlw 0x36
1C62   3415           01138         retlw 0x15
1C63   3498           01139         retlw 0x98
1C64   3412           01140         retlw 0x12
1C65   343E           01141         retlw 0x3e
1C66   3417           01142         retlw 0x17
1C67   34B8           01143         retlw 0xb8
1C68   3412           01144         retlw 0x12
1C69   343E           01145         retlw 0x3e
1C6A   3415           01146         retlw 0x15
1C6B   3438           01147         retlw 0x38
1C6C   3414           01148         retlw 0x14
1C6D   343E           01149         retlw 0x3e
1C6E   3411           01150         retlw 0x11
1C6F   3438           01151         retlw 0x38
1C70   3414           01152         retlw 0x14
1C71   343E           01153         retlw 0x3e
1C72   3413           01154         retlw 0x13
1C73   34B8           01155         retlw 0xb8
1C74   3415           01156         retlw 0x15
1C75   343E           01157         retlw 0x3e
1C76   340D           01158         retlw 0x0d 
1C77   3438           01159         retlw 0x38
1C78   3410           01160         retlw 0x10
1C79   343E           01161         retlw 0x3e
1C7A   3401           01162         retlw 0x01
1C7B   3438           01163         retlw 0x38
1C7C   3410           01164         retlw 0x10
1C7D   343E           01165         retlw 0x3e
1C7E   3403           01166         retlw 0x03
1C7F   34B8           01167         retlw 0xb8
1C80   3411           01168         retlw 0x11
1C81   343E           01169         retlw 0x3e
1C82   3405           01170         retlw 0x05
1C83   3438           01171         retlw 0x38
1C84   3411           01172         retlw 0x11
1C85   343E           01173         retlw 0x3e
1C86   3407           01174         retlw 0x07
1C87   34B8           01175         retlw 0xb8
1C88   3403           01176         retlw 0x03
1C89   343E           01177         retlw 0x3e
1C8A   340E           01178         retlw 0x0e 
1C8B   34F8           01179         retlw 0xf8
1C8C   3400           01180         retlw 0x00
1C8D   34F4           01181         retlw 0xf4
1C8E   3497           01182         retlw 0x97
1C8F   3444           01183         retlw 0x44
1C90   3400           01184         retlw 0x00
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 178


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1C91   3400           01185         retlw 0x00
1C92   340A           01186         retlw 0x0a 
1C93   3400           01187         retlw 0x00
1C94   3433           01188         retlw 0x33
1C95   3437           01189         retlw 0x37
1C96   3424           01190         retlw 0x24
1C97   3400           01191         retlw 0x00
1C98   3424           01192         retlw 0x24
1C99   3437           01193         retlw 0x37
1C9A   3424           01194         retlw 0x24
1C9B   3480           01195         retlw 0x80
1C9C   3401           01196         retlw 0x01
1C9D   3400           01197         retlw 0x00
1C9E   3414           01198         retlw 0x14
1C9F   34E0           01199         retlw 0xe0
1CA0   3420           01200         retlw 0x20
1CA1   3400           01201         retlw 0x00
1CA2   3415           01202         retlw 0x15
1CA3   3401           01203         retlw 0x01
1CA4   3490           01204         retlw 0x90
1CA5   3440           01205         retlw 0x40
1CA6   34C5           01206         retlw 0xc5
1CA7   341F           01207         retlw 0x1f
1CA8   3410           01208         retlw 0x10
1CA9   3424           01209         retlw 0x24
1CAA   3440           01210         retlw 0x40
1CAB   34D0           01211         retlw 0xd0
1CAC   3420           01212         retlw 0x20
1CAD   3400           01213         retlw 0x00
1CAE   3493           01214         retlw 0x93
1CAF   3400           01215         retlw 0x00
1CB0   348E           01216         retlw 0x8e 
1CB1   34BF           01217         retlw 0xbf
1CB2   3404           01218         retlw 0x04
1CB3   3400           01219         retlw 0x00
1CB4   3448           01220         retlw 0x48
1CB5   34F1           01221         retlw 0xf1
1CB6   3424           01222         retlw 0x24
1CB7   3400           01223         retlw 0x00
1CB8   3487           01224         retlw 0x87
1CB9   34BD           01225         retlw 0xbd
1CBA   3448           01226         retlw 0x48
1CBB   34AC           01227         retlw 0xac
1CBC   3409           01228         retlw 0x09
1CBD   34FE           01229         retlw 0xfe
1CBE   3449           01230         retlw 0x49
1CBF   3428           01231         retlw 0x28
1CC0   3407           01232         retlw 0x07
1CC1   3452           01233         retlw 0x52
1CC2   3448           01234         retlw 0x48
1CC3   3429           01235         retlw 0x29
1CC4   3407           01236         retlw 0x07
1CC5   3452           01237         retlw 0x52
1CC6   344C           01238         retlw 0x4c
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 179


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1CC7   3429           01239         retlw 0x29
1CC8   34D6           01240         retlw 0xd6
1CC9   3458           01241         retlw 0x58
1CCA   3485           01242         retlw 0x85
1CCB   341C           01243         retlw 0x1c
1CCC   34DE           01244         retlw 0xde 
1CCD   3458           01245         retlw 0x58
1CCE   3445           01246         retlw 0x45
1CCF   341C           01247         retlw 0x1c
1CD0   34BE           01248         retlw 0xbe 
1CD1   3446           01249         retlw 0x46
1CD2   3462           01250         retlw 0x62
1CD3   341F           01251         retlw 0x1f
1CD4   34D2           01252         retlw 0xd2
1CD5   344F           01253         retlw 0x4f
1CD6   3404           01254         retlw 0x04
1CD7   3492           01255         retlw 0x92
1CD8   34C2           01256         retlw 0xc2
1CD9   344C           01257         retlw 0x4c
1CDA   3424           01258         retlw 0x24
1CDB   3400           01259         retlw 0x00
1CDC   34C6           01260         retlw 0xc6
1CDD   344C           01261         retlw 0x4c
1CDE   3424           01262         retlw 0x24
1CDF   3400           01263         retlw 0x00
1CE0   34EA           01264         retlw 0xea 
1CE1   34F1           01265         retlw 0xf1
1CE2   3443           01266         retlw 0x43
1CE3   343C           01267         retlw 0x3c
1CE4   34E2           01268         retlw 0xe2
1CE5   344D           01269         retlw 0x4d
1CE6   3421           01270         retlw 0x21
1CE7   343C           01271         retlw 0x3c
1CE8   3486           01272         retlw 0x86
1CE9   344C           01273         retlw 0x4c
1CEA   3445           01274         retlw 0x45
1CEB   341C           01275         retlw 0x1c
1CEC   3410           01276         retlw 0x10
1CED   343F           01277         retlw 0x3f
1CEE   3424           01278         retlw 0x24
1CEF   3440           01279         retlw 0x40
1CF0   3410           01280         retlw 0x10
1CF1   3428           01281         retlw 0x28
1CF2   3452           01282         retlw 0x52
1CF3   34D0           01283         retlw 0xd0
1CF4   34D8           01284         retlw 0xd8
1CF5   343F           01285         retlw 0x3f
1CF6   3424           01286         retlw 0x24
1CF7   3400           01287         retlw 0x00
1CF8   3410           01288         retlw 0x10
1CF9   3428           01289         retlw 0x28
1CFA   3454           01290         retlw 0x54
1CFB   34D0           01291         retlw 0xd0
1CFC   341F           01292         retlw 0x1f 
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 180


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1CFD   3400           01293         retlw 0x00
1CFE   34C3           01294         retlw 0xc3
1CFF   34FF           01295         retlw 0xff
1D00   34E0           01296         retlw 0xe0
1D01   340F           01297         retlw 0x0f
1D02   3403           01298         retlw 0x03
1D03   3400           01299         retlw 0x00
1D04   3480           01300         retlw 0x80
1D05   3438           01301         retlw 0x38
1D06   3424           01302         retlw 0x24
1D07   34C0           01303         retlw 0xc0
1D08   34F3           01304         retlw 0xf3
1D09   3437           01305         retlw 0x37
1D0A   3424           01306         retlw 0x24
1D0B   3400           01307         retlw 0x00
1D0C   3404           01308         retlw 0x04
1D0D   343F           01309         retlw 0x3f
1D0E   3424           01310         retlw 0x24
1D0F   3480           01311         retlw 0x80
1D10   34F3           01312         retlw 0xf3
1D11   3436           01313         retlw 0x36
1D12   340E           01314         retlw 0x0e 
1D13   34D8           01315         retlw 0xd8
1D14   34F1           01316         retlw 0xf1
1D15   3436           01317         retlw 0x36
1D16   3407           01318         retlw 0x07
1D17   3498           01319         retlw 0x98
1D18   34F1           01320         retlw 0xf1
1D19   3436           01321         retlw 0x36
1D1A   3405           01322         retlw 0x05
1D1B   3418           01323         retlw 0x18
1D1C   34F0           01324         retlw 0xf0
1D1D   3436           01325         retlw 0x36
1D1E   3403           01326         retlw 0x03
1D1F   3498           01327         retlw 0x98
1D20   34F0           01328         retlw 0xf0
1D21   3436           01329         retlw 0x36
1D22   3401           01330         retlw 0x01
1D23   3418           01331         retlw 0x18
1D24   34F5           01332         retlw 0xf5
1D25   3436           01333         retlw 0x36
1D26   340D           01334         retlw 0x0d 
1D27   3418           01335         retlw 0x18
1D28   34F4           01336         retlw 0xf4
1D29   3436           01337         retlw 0x36
1D2A   3413           01338         retlw 0x13
1D2B   3498           01339         retlw 0x98
1D2C   34F4           01340         retlw 0xf4
1D2D   3436           01341         retlw 0x36
1D2E   3411           01342         retlw 0x11
1D2F   3418           01343         retlw 0x18
1D30   34F2           01344         retlw 0xf2
1D31   3436           01345         retlw 0x36
1D32   3415           01346         retlw 0x15
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 181


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D33   3418           01347         retlw 0x18
1D34   3400           01348         retlw 0x00
1D35   3420           01349         retlw 0x20
1D36   3400           01350         retlw 0x00
1D37   3400           01351         retlw 0x00
1D38   34F2           01352         retlw 0xf2
1D39   3436           01353         retlw 0x36
1D3A   3417           01354         retlw 0x17
1D3B   3498           01355         retlw 0x98
1D3C   3412           01356         retlw 0x12
1D3D   343E           01357         retlw 0x3e
1D3E   3417           01358         retlw 0x17
1D3F   34B8           01359         retlw 0xb8
1D40   3412           01360         retlw 0x12
1D41   343E           01361         retlw 0x3e
1D42   3415           01362         retlw 0x15
1D43   3438           01363         retlw 0x38
1D44   3414           01364         retlw 0x14
1D45   343E           01365         retlw 0x3e
1D46   3411           01366         retlw 0x11
1D47   3438           01367         retlw 0x38
1D48   3414           01368         retlw 0x14
1D49   343E           01369         retlw 0x3e
1D4A   3413           01370         retlw 0x13
1D4B   34B8           01371         retlw 0xb8
1D4C   3415           01372         retlw 0x15
1D4D   343E           01373         retlw 0x3e
1D4E   340D           01374         retlw 0x0d 
1D4F   3438           01375         retlw 0x38
1D50   3410           01376         retlw 0x10
1D51   343E           01377         retlw 0x3e
1D52   3401           01378         retlw 0x01
1D53   3438           01379         retlw 0x38
1D54   3410           01380         retlw 0x10
1D55   343E           01381         retlw 0x3e
1D56   3403           01382         retlw 0x03
1D57   34B8           01383         retlw 0xb8
1D58   3411           01384         retlw 0x11
1D59   343E           01385         retlw 0x3e
1D5A   3405           01386         retlw 0x05
1D5B   3438           01387         retlw 0x38
1D5C   3411           01388         retlw 0x11
1D5D   343E           01389         retlw 0x3e
1D5E   3407           01390         retlw 0x07
1D5F   34B8           01391         retlw 0xb8
1D60   3413           01392         retlw 0x13
1D61   343E           01393         retlw 0x3e
1D62   340E           01394         retlw 0x0e 
1D63   34F8           01395         retlw 0xf8
1D64   3486           01396         retlw 0x86
1D65   34BD           01397         retlw 0xbd
1D66   3497           01398         retlw 0x97
1D67   3444           01399         retlw 0x44
1D68   3409           01400         retlw 0x09
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 182


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D69   3430           01401         retlw 0x30
1D6A   340C           01402         retlw 0x0c 
1D6B   341D           01403         retlw 0x1d
1D6C   3401           01404         retlw 0x01
1D6D   3400           01405         retlw 0x00
1D6E   3414           01406         retlw 0x14
1D6F   34E0           01407         retlw 0xe0
1D70   3420           01408         retlw 0x20
1D71   3400           01409         retlw 0x00
1D72   34D5           01410         retlw 0xd5
1D73   3400           01411         retlw 0x00
1D74   3491           01412         retlw 0x91
1D75   3440           01413         retlw 0x40
1D76   34E2           01414         retlw 0xe2
1D77   34E2           01415         retlw 0xe2
1D78   3411           01416         retlw 0x11
1D79   3437           01417         retlw 0x37
1D7A   3424           01418         retlw 0x24
1D7B   3440           01419         retlw 0x40
1D7C   3410           01420         retlw 0x10
1D7D   3424           01421         retlw 0x24
1D7E   34C0           01422         retlw 0xc0
1D7F   34DD           01423         retlw 0xdd
1D80   34F8           01424         retlw 0xf8
1D81   3437           01425         retlw 0x37
1D82   340A           01426         retlw 0x0a 
1D83   3498           01427         retlw 0x98
1D84   3489           01428         retlw 0x89
1D85   3445           01429         retlw 0x45
1D86   3448           01430         retlw 0x48
1D87   3406           01431         retlw 0x06
1D88   340D           01432         retlw 0x0d 
1D89   34FE           01433         retlw 0xfe
1D8A   3448           01434         retlw 0x48
1D8B   3421           01435         retlw 0x21
1D8C   3417           01436         retlw 0x17
1D8D   3450           01437         retlw 0x50
1D8E   3448           01438         retlw 0x48
1D8F   34A6           01439         retlw 0xa6
1D90   34B6           01440         retlw 0xb6
1D91   344D           01441         retlw 0x4d
1D92   3485           01442         retlw 0x85
1D93   3448           01443         retlw 0x48
1D94   3484           01444         retlw 0x84
1D95   3443           01445         retlw 0x43
1D96   3443           01446         retlw 0x43
1D97   3448           01447         retlw 0x48
1D98   3431           01448         retlw 0x31
1D99   34FE           01449         retlw 0xfe
1D9A   3466           01450         retlw 0x66
1D9B   3467           01451         retlw 0x67
1D9C   34AE           01452         retlw 0xae 
1D9D   3450           01453         retlw 0x50
1D9E   3424           01454         retlw 0x24
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 183


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1D9F   3400           01455         retlw 0x00
1DA0   34BE           01456         retlw 0xbe 
1DA1   3446           01457         retlw 0x46
1DA2   3400           01458         retlw 0x00
1DA3   3492           01459         retlw 0x92
1DA4   34D7           01460         retlw 0xd7
1DA5   344E           01461         retlw 0x4e
1DA6   3464           01462         retlw 0x64
1DA7   3465           01463         retlw 0x65
1DA8   3430           01464         retlw 0x30
1DA9   34FE           01465         retlw 0xfe
1DAA   3481           01466         retlw 0x81
1DAB   3440           01467         retlw 0x40
1DAC   34AA           01468         retlw 0xaa 
1DAD   3450           01469         retlw 0x50
1DAE   34E0           01470         retlw 0xe0
1DAF   3440           01471         retlw 0x40
1DB0   34BA           01472         retlw 0xba 
1DB1   3444           01473         retlw 0x44
1DB2   3424           01474         retlw 0x24
1DB3   3400           01475         retlw 0x00
1DB4   34EA           01476         retlw 0xea
1DB5   346F           01477         retlw 0x6f
1DB6   3424           01478         retlw 0x24
1DB7   3400           01479         retlw 0x00
1DB8   3482           01480         retlw 0x82
1DB9   344C           01481         retlw 0x4c
1DBA   3424           01482         retlw 0x24
1DBB   3400           01483         retlw 0x00
1DBC   3400           01484         retlw 0x00
1DBD   3400           01485         retlw 0x00
1DBE   3424           01486         retlw 0x24
1DBF   3400           01487         retlw 0x00
1DC0   3410           01488         retlw 0x10
1DC1   3428           01489         retlw 0x28
1DC2   34D2           01490         retlw 0xd2
1DC3   34DD           01491         retlw 0xdd
1DC4   34EB           01492         retlw 0xeb
1DC5   344E           01493         retlw 0x4e
1DC6   3462           01494         retlw 0x62
1DC7   3463           01495         retlw 0x63
1DC8   3482           01496         retlw 0x82
1DC9   344C           01497         retlw 0x4c
1DCA   3424           01498         retlw 0x24
1DCB   3400           01499         retlw 0x00
1DCC   3400           01500         retlw 0x00
1DCD   3400           01501         retlw 0x00
1DCE   3424           01502         retlw 0x24
1DCF   3400           01503         retlw 0x00
1DD0   3410           01504         retlw 0x10
1DD1   3428           01505         retlw 0x28
1DD2   34D4           01506         retlw 0xd4
1DD3   34DD           01507         retlw 0xdd
1DD4   341F           01508         retlw 0x1f 
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 184


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

1DD5   3400           01509         retlw 0x00
1DD6   34C1           01510         retlw 0xc1
1DD7   34FF           01511         retlw 0xff
1DD8   34E0           01512         retlw 0xe0
1DD9   340F           01513         retlw 0x0f
1DDA   3401           01514         retlw 0x01
1DDB   3400           01515         retlw 0x00
1DDC   34EA           01516         retlw 0xea
1DDD   344E           01517         retlw 0x4e
1DDE   3401           01518         retlw 0x01
1DDF   3422           01519         retlw 0x22
1DE0   3411           01520         retlw 0x11
1DE1   343F           01521         retlw 0x3f
1DE2   3424           01522         retlw 0x24
1DE3   3440           01523         retlw 0x40
1DE4   3410           01524         retlw 0x10
1DE5   3428           01525         retlw 0x28
1DE6   3400           01526         retlw 0x00
1DE7   34D1           01527         retlw 0xd1
1DE8   34F8           01528         retlw 0xf8
1DE9   343F           01529         retlw 0x3f
1DEA   34CC           01530         retlw 0xcc
1DEB   349B           01531         retlw 0x9b
                      01532 
                      01533 
                      01534 ;-----------------------------------------------------------------------
                      01535 ;-----------------------------------------------------------------------
                      01536 ; podprogramy pro nahrani pluginu
                      01537 ;-----------------------------------------------------------------------
                      01538 ;-----------------------------------------------------------------------
                      01539 
1DEC                  01540 CTI_TABULKU
1DEC   0861           01541         movfw ZAZNAM2
1DED   008A           01542         movwf PCLATH
1DEE   0860           01543         movfw ZAZNAM1
1DEF   0082           01544         movwf PCL
                      01545 
                      01546 ;-----------------------------------------------------------------------
                      01547 
1DF0                  01548 VS_LOAD_PLUGIN          ; nahraje plugin do RAM dekodeku
1DF0   3007           01549         movlw VSADDR_WRAMADDR 
1DF1   00B6           01550         movwf TEMP1             ; do TEMP1 dame adresu registru 
1DF2   3000           01551         movlw 0x00
1DF3   00B7           01552         movwf TEMP2             ; do TEMP2 dame dolni slabiku zapisovaneho slova
1DF4   3082           01553         movlw 0x82
1DF5   00B8           01554         movwf TEMP3             ; do TEMP3 dame horni slabiku zapisovaneho slova
                      01555 
                      01556         PROG_PAGE_1
1DF6   158A               M                         bsf PCLATH,3
1DF7   120A               M                         bcf PCLATH,4
1DF8   201C           01557         call VS_WR_REG
                      01558         PROG_PAGE_3
1DF9   158A               M                         bsf PCLATH,3
1DFA   160A               M                         bsf PCLATH,4
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 185


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01559                         ; Do VS registru WRAMADDR se nejdrive musi nahrat adresa 0x8200 pro zacatek plug
                            inu na adrese 0x4200 
                      01560                         ; (0x4200 + 0x4000 = 0x8200 vis. "6.5.8 WRAMADDR" datasheetu VS1001k)
                      01561                         ;
                      01562         ; a ted jdeme nahravat samotny plugin
                      01563         ; tabulku s pluginem mame na adrese 0x1800..0x1DEB (1516 bytes)
1DFB   3000           01564         movlw 0x00
1DFC   00E0           01565         movwf ZAZNAM1
1DFD   3018           01566         movlw 0x18
1DFE   00E1           01567         movwf ZAZNAM2
1DFF                  01568 VS_LOAD_PLUGIN_LOAD
1DFF   3006           01569         movlw VSADDR_WRAM
1E00   00B6           01570         movwf TEMP1             ; do TEMP1 dame adresu registru 
1E01   25EC           01571         call CTI_TABULKU
1E02   00B7           01572         movwf TEMP2             ; do TEMP2 dame dolni slabiku zapisovaneho slova
1E03   0AE0           01573         incf ZAZNAM1,f
1E04   25EC           01574         call CTI_TABULKU
1E05   00B8           01575         movwf TEMP3             ; do TEMP3 dame horni slabiku zapisovaneho slova
                      01576         PROG_PAGE_1
1E06   158A               M                         bsf PCLATH,3
1E07   120A               M                         bcf PCLATH,4
1E08   201C           01577         call VS_WR_REG
                      01578         PROG_PAGE_3
1E09   158A               M                         bsf PCLATH,3
1E0A   160A               M                         bsf PCLATH,4
                      01579 
1E0B   0AE0           01580         incf ZAZNAM1,f
1E0C   1903           01581         btfsc STATUS,Z
1E0D   0AE1           01582         incf ZAZNAM2,f
                      01583 
1E0E   0861           01584         movfw ZAZNAM2
1E0F   3C1D           01585         sublw 0x1D
1E10   1D03           01586         btfss STATUS,Z 
1E11   2DFF           01587         goto VS_LOAD_PLUGIN_LOAD
                      01588 
1E12   0860           01589         movfw ZAZNAM1
1E13   3CEC           01590         sublw 0xEC
1E14   1D03           01591         btfss STATUS,Z 
1E15   2DFF           01592         goto VS_LOAD_PLUGIN_LOAD
                      01593 
1E16   01AF           01594         clrf VS_LOUDNESS
                      01595         PROG_PAGE_1
1E17   158A               M                         bsf PCLATH,3
1E18   120A               M                         bcf PCLATH,4
1E19   204D           01596         call VS_SOFT_RESET
                      01597         PROG_PAGE_3     
1E1A   158A               M                         bsf PCLATH,3
1E1B   160A               M                         bsf PCLATH,4
1E1C   0008           01598         return
                      01599 ;-----------------------------------------------------------------------
                      00094 ;**********************************************************
2100                  00095  org    0x2100          ; tabulka v pameti EEPROM (256 bytu)
2100   0030 0030 00C3 00096         de      0x30, 0x30, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x00
       0000 0000 0000 
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 186


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       0000 0000 
2108   0000 0000 0000 00097         de      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
       0000 0000 0000 
       0000 0000 
2110   0000 0000 0000 00098         de      0x00, 0x00, 0x00
                      00099         END
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 187


SYMBOL TABLE
  LABEL                             VALUE 

ABRT                              00000002
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
APPLICABLE                        00000007
ATA_ADDRESS                       00000005
ATA_ADDRESS_TRIS                  00000085
ATA_ATTRIBUTES                    0000002E
ATA_CONTROL                       00000009
ATA_CONTROL_TRIS                  00000089
ATA_DIOR_N                        ATA_CONTROL,2
ATA_DIOW_N                        ATA_CONTROL,1
ATA_ERROR                         00000025
ATA_OK                            00000000
ATA_RESET                         000003C6
ATA_RESET_N                       ATA_CONTROL,0
ATA_STANDBY                       00000419
ATA_STATUS                        0000002C
ATA_STATUS_A                      00000022
BANK_0                            
BANK_1                            
BANK_2                            
BANK_3                            
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BIG_LOOP                          00000042
BIG_LOOP_DALSI_FRAGMENT           00000092
BIG_LOOP_DEC_FRAGMENT             000000A0
BIG_LOOP_DEC_FRAGMENT_NO_PLUG     000000BA
BIG_LOOP__NENI_PRIKAZ             0000006B
BIG_LOOP__NO_STANDBY              00000074
BIG_SECTOR                        00000003
BRGH                              00000002
BSY                               00000007
BUF2_LOW_TO_HIGH                  00000E30
BUF2_TO_BUF1                      00000DF2
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CCP1CON                           00000017
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 188


SYMBOL TABLE
  LABEL                             VALUE 

CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2H                            0000001C
CCPR2L                            0000001B
CEKEJ_PRIKAZ                      000008DD
CEK_PRIKAZ_01h                    00000022
CEK_PRIKAZ_02h_03h                00000034
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CIS                               00000003
CITAC_NECINNOSTI1                 00000055
CITAC_NECINNOSTI2                 00000056
CKE                               00000006
CKP                               00000004
CLEAR_BEFFER1__CLEAR              00000DEC
CLEAR_BEFFER2__CLEAR              000003C0
CLEAR_BUFFER1                     00000DE6
CLEAR_BUFFER2                     000003BA
CLUSTER1                          0000003C
CLUSTER2                          0000003D
CLUSTER3                          0000003E
CLUSTER4                          0000003F
CLUSTER_SIZE                      0000004C
CLUSTER_TO_LBA                    00000488
CLUSTER_TO_LBA_NO_ROOT            000004AC
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             0000009C
CMIE                              00000006
CMIF                              00000006
COMMAND                           0000002D
COMPARE_B1_B2_BUFF1               00000DDC
COMPARE_B1_B2_BUFF2               00000DE1
COMPARE_B1_B2_BYT10               00000DB9
COMPARE_B1_B2_BYT11               00000DC3
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 189


SYMBOL TABLE
  LABEL                             VALUE 

COMPARE_B1_B2_BYT12               00000DCD
COMPARE_B1_B2_BYT2                00000D69
COMPARE_B1_B2_BYT3                00000D73
COMPARE_B1_B2_BYT4                00000D7D
COMPARE_B1_B2_BYT5                00000D87
COMPARE_B1_B2_BYT6                00000D91
COMPARE_B1_B2_BYT7                00000D9B
COMPARE_B1_B2_BYT8                00000DA5
COMPARE_B1_B2_BYT9                00000DAF
COMPARE_B1_B2_SHODNE              00000DD7
COMPARE_BUFF1_BUFF2               00000D56
COMPARE_BUFF2_L_H                 00000D43
CREN                              00000004
CSRC                              00000007
CTI_TABULKU                       00001DEC
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            0000009D
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
D                                 00000005
DALSI_SKLADBA                     00000117
DALSI_SKLADBA_MAME_SOUBOR         00000180
DALSI_SKLADBA_NO_R_S              00000151
DALSI_SKLADBA_PLAY                0000019D
DALSI_SKLADBA_REPAT_SOUBORU       00000121
DATA_ADDRESS                      00000005
DATA_H                            00000021
DATA_L                            00000020
DATA_PORT_HIGH                    00000008
DATA_PORT_HIGH_TRIS               00000088
DATA_PORT_LOW                     00000006
DATA_PORT_LOW_TRIS                00000086
DC                                00000001
DEKREMENTUJ                       00000681
DEKREMENTUJ_KONEC                 0000068E
DELAY_200ms                       000002FF
DELAY_25us                        0000047D
DELAY_2ms                         000002F6
DELAY_5us                         000008D8
DEVICE                            0000002B
DEVICE_C                          00000023
DRDY                              00000006
DRQ                               00000003
D_A                               00000005
D_COMMAND                         00000027
D_DATA_R                          00000020
D_DEVICE                          00000026
D_DEVICE_C                        0000001E
D_ERROR                           00000021
D_FEATURES                        00000021
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 190


SYMBOL TABLE
  LABEL                             VALUE 

D_LBA1                            00000023
D_LBA2                            00000024
D_LBA3                            00000025
D_SECTOR_C                        00000022
D_STATUS                          00000027
D_STATUS_A                        0000001E
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
END_OF_INTERRUPT                  000002EE
ERR                               00000000
ERROR_LED                         ATA_ADDRESS,3
F                                 00000001
FAT32_LOAD                        00000004
FEATURES                          00000024
FERR                              00000002
FILE_INFO                         00000BE1
FILE_INFO__CTI20_KONEC            00000C54
FILE_INFO__DIR                    00000C25
FILE_INFO__FILE                   00000C27
FILE_INFO__READ_NAME              00000BE9
FILE_SIZE                         00000C5C
FRAGMENT1                         00000051
FRAGMENT2                         00000052
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
HLEDEJ                            00000C79
HLEDEJVNAD_CLUSTER                00000F15
HLEDEJVNAD_KONEC                  00000F69
HLEDEJVNAD_SECTOR                 00000F16
HLEDEJVNAD_ZAZNAM                 00000F20
HLEDEJ_ADRESAR                    00001410
HLEDEJ_ADRESAR_KONEC              000014BA
HLEDEJ_ADRESAR_RETURN             00000114
HLEDEJ_ADR_NALEZEN                00001466
HLEDEJ_ADR_OADR_VIS               00001430
HLEDEJ_ADR_OADR_VIS_NOROOT        00001438
HLEDEJ_ELSE1                      00000CA2
HLEDEJ_ELSE3                      00000CEF
HLEDEJ_ELSEIF1                    00000C9B
HLEDEJ_ENDIF3                     00000CF5
HLEDEJ_END_REPEAT                 00000CF6
HLEDEJ_HLEDANI                    00000CC0
HLEDEJ_IF2_ENDIF                  00000CBA
HLEDEJ_IF4                        00000CED
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 191


SYMBOL TABLE
  LABEL                             VALUE 

HLEDEJ_KONEC                      00000D13
HLEDEJ_NEHLEDAME_PRVNI            00000CAA
HLEDEJ_REPEAT                     00000CC5
HLEDEJ_V_NADRAZENEM               00000EE3
HL_ADR_CL1                        0000005A
HL_ADR_CL2                        0000005B
HL_ADR_CL3                        0000005C
HL_ADR_CL4                        0000005D
HL_PARAMETRY                      00000059
HOB                               00000007
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
IDENTIFY_DEVICE                   00000432
IF2                               00000CB7
INDF                              00000000
INDF_BANK_0                       
INDF_BANK_1                       
INDF_BANK_2                       
INDF_BANK_3                       
INIT_ATA__DALSI                   00000469
INIT_ATA__DALSI2                  00000473
INIT_ATA__NOT_SUPPORT_LBA48       00000466
INIT_CONFIG                       000001C2
INIT_PORT                         000001AF
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTERRUPT                         000002CF
INTERRUPT_TIMER1                  000002D4
INTERRUPT_USART                   000002E2
INTF                              00000001
IRP                               00000007
KONST_NECINNOSTI1                 00000057
KONST_NECINNOSTI2                 00000058
LBA1                              00000027
LBA2                              00000028
LBA3                              00000029
LBA4                              0000002A
LBA48_SUPPORT                     00000002
LBA_SUPPORT                       00000001
LONG_NAME                         00000E59
LONG_NAME_ELSE1                   00000E6C
LONG_NAME_ELSE2                   00000ED0
LONG_NAME_ENDIF1                  00000E72
LONG_NAME_ENDIF2                  00000ED7
LONG_NAME_ENDWHILE                00000EDD
LONG_NAME_IF2                     00000E98
LONG_NAME_MIMO_ROZSAH             00000EE0
LONG_NAME_NASOBENI                00000E9D
LONG_NAME_WHILE                   00000E72
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 192


SYMBOL TABLE
  LABEL                             VALUE 

MP3_BSYNC                         MP3_PORT,2
MP3_CS                            MP3_PORT,1
MP3_DREQ                          MP3_PORT,0
MP3_NOT_PLAY                      00000107
MP3_PORT                          00000007
MP3_PORT_TRIS                     00000087
MP3_REWIND_FORWARD                000000D9
MP3_SCLK                          MP3_PORT,3
MP3_SI                            MP3_PORT,5
MP3_SO                            MP3_PORT,4
NACTI_FAT32                       000010E7
NACTI_FAT32__KONEC                000011D2
NEXT_CLUSTER                      000004EB
NEXT_CLUSTER_KONEC                00000570
NEXT_CLUSTER_NEPRAZDNY            00000559
NEXT_CLUSTER_NO_ROOT              0000050F
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_MP3_REWIND_FORWARD            000000E5
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NULA                              0000073E
OBF                               00000006
ODESLI_BUFF2_HIGH                 000002BB
ODESLI_BUFF2_HIGH_ODESILANI       000002BE
ODESLI_BUFFER2                    000002C5
ODESLI_BUFFER2_ODESILANI          000002C8
ODESLI_DATA                       000002A2
ODESLI_MODEL_NUMBER               000002AA
ODESLI_MODEL_NUMBER_ODESILANI     000002AF
OERR                              00000001
OPERAND_X1                        000000A0
OPERAND_X2                        000000A1
OPERAND_X3                        000000A2
OPERAND_X4                        000000A3
OPERAND_Y1                        000000A4
OPERAND_Y2                        000000A5
OPERAND_Y3                        000000A6
OPERAND_Y4                        000000A7
OPTION_REG                        00000081
P                                 00000004
PARAM_SLOV_V_SEKTORU1             00000033
PARAM_SLOV_V_SEKTORU2             00000034
PCFG0                             00000000
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 193


SYMBOL TABLE
  LABEL                             VALUE 

PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
POCATEK_DAT1                      00000040
POCATEK_DAT2                      00000041
POCATEK_DAT3                      00000042
POCATEK_DAT4                      00000043
POCATEK_FAT1                      00000044
POCATEK_FAT2                      00000045
POCATEK_FAT3                      00000046
POCATEK_FAT4                      00000047
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
POSUNDOLEVA                       00000691
POSUNDOLEVA_1                     00000697
POSUNDOLEVA_2                     0000069F
POSUNDOLEVA_3                     000006A8
POSUNDOLEVA_4                     000006B2
POSUNDOLEVA_5                     000006BD
POSUNDOLEVA_6                     000006C9
POSUNDOLEVA_7                     000006D6
POSUNDOPRAVA                      000006E4
POSUNDOPRAVA_1                    000006EA
POSUNDOPRAVA_2                    000006F3
POSUNDOPRAVA_3                    000006FD
POSUNDOPRAVA_4                    00000708
POSUNDOPRAVA_5                    00000714
POSUNDOPRAVA_6                    00000721
POSUNDOPRAVA_7                    0000072F
POZICE                            0000003B
PR2                               00000092
PREH_ADR_CL1                      00000062
PREH_ADR_CL2                      00000063
PREH_ADR_CL3                      00000064
PREH_ADR_CL4                      00000065
PREH_CITAC_PREV                   00000068
PREH_DATA_CL1                     00000069
PREH_DATA_CL2                     0000006A
PREH_DATA_CL3                     0000006B
PREH_DATA_CL4                     0000006C
PREH_DATA_POZICE                  0000006D
PREH_D_FRAGMENT1                  00000053
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 194


SYMBOL TABLE
  LABEL                             VALUE 

PREH_D_FRAGMENT2                  00000054
PREH_STAV0                        0000006E
PREH_STAV1                        0000006F
PREH_ZAZNAM1                      00000066
PREH_ZAZNAM2                      00000067
PRESKOC                           000003A4
PRETECENI                         000000AC
PRIJATE_DATO                      00000074
PRIJATYCH_DAT                     00000073
PRIKAZ_02h                        000008E2
PRIKAZ_02h__ODESILANI_ODDILU      000008FD
PRIKAZ_03h                        000011D3
PRIKAZ_03h_KONEC                  000012B8
PRIKAZ_03h_KONEC_NEHRAJ           00001308
PRIKAZ_03h_LOOP1                  0000121E
PRIKAZ_03h_NACTENO                00001217
PRIKAZ_03h_NENACTENO              0000128F
PRIKAZ_03h_PROHLEDEJ_ROOT         000012B9
PRIKAZ_04h                        00000908
PRIKAZ_05h                        00000915
PRIKAZ_05h_KONEC                  0000093D
PRIKAZ_05h_PAR1_NOT_OK            00000929
PRIKAZ_05h_PAR1_OK                0000092F
PRIKAZ_05h_PAR2_NOT_OK            00000936
PRIKAZ_05h_PAR2_OK                0000093C
PRIKAZ_06h                        00000946
PRIKAZ_07h                        00000968
PRIKAZ_07h__ODESLI_SECTOR         00000984
PRIKAZ_08h                        0000098F
PRIKAZ_08h_KONEC                  000009B2
PRIKAZ_08h_PAR1_NOT_OK            000009A3
PRIKAZ_08h_PAR1_OK                000009A6
PRIKAZ_08h_PAR2_NOT_OK            000009AD
PRIKAZ_08h_PAR2_OK                000009B0
PRIKAZ_09h                        000009BD
PRIKAZ_09h_KONEC                  000009E7
PRIKAZ_09h_SPATNY_PAR             000009E1
PRIKAZ_0Ah                        000009F0
PRIKAZ_0Ah_KONEC                  00000A13
PRIKAZ_0Ah_PAR1_NOT_OK            00000A08
PRIKAZ_0Ah_PAR1_OK                00000A0E
PRIKAZ_0Bh                        00001312
PRIKAZ_0Ch                        00001334
PRIKAZ_0Ch_JEROOT                 0000135D
PRIKAZ_0Ch_NENI_ZACATEK_ADR       0000135B
PRIKAZ_0Ch_ODESLI                 0000135E
PRIKAZ_0Dh                        00001378
PRIKAZ_0Dh_KONEC                  0000138E
PRIKAZ_0Dh_OKAMZITE               0000138C
PRIKAZ_80h                        00000A1E
PRIKAZ_80h_KONEC                  00000A7F
PRIKAZ_80h_PAR1_NOT_OK            00000A32
PRIKAZ_80h_PAR1_OK                00000A38
PRIKAZ_80h_PAR2_NOT_OK            00000A3F
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 195


SYMBOL TABLE
  LABEL                             VALUE 

PRIKAZ_80h_PAR2_OK                00000A45
PRIKAZ_81h                        00000A8A
PRIKAZ_82h                        00000AA9
PRIKAZ_83h                        00000ABF
PRIKAZ_84h                        00000AF3
PRIKAZ_85h                        00001396
PRIKAZ_85h_KONEC                  000013F1
PRIKAZ_85h_SPATNY_PARAMETR        000013D1
PRIKAZ_85h_VYPNI                  000013D8
PRIKAZ_86h                        000013F3
PRIKAZ_87h                        00001402
PROG_PAGE_0                       
PROG_PAGE_1                       
PROG_PAGE_2                       
PROG_PAGE_3                       
PRVNI_CL_ADRESARE                 00000B27
PRVNI_CL_ADRESARE_KONEC           00000B60
PRVNI_CL_ADRESARE_MEZERY          00000B47
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
R                                 00000002
RBIE                              00000003
RBIF                              00000000
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD_DEVICE                         00000312
RD_STATUS                         0000030C
READ_DATA                         00000382
READ_DATA_CTEME                   0000038D
READ_SECTOR                       000003E1
READ_SECTOR_LBA27                 000003F2
READ_SECTOR_LBA48                 00000401
READ_WRITE                        00000002
ROOT_DIR_CL1                      00000048
ROOT_DIR_CL2                      00000049
ROOT_DIR_CL3                      0000004A
ROOT_DIR_CL4                      0000004B
ROZDIL                            00000655
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RUTR                              0000035F
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 196


SYMBOL TABLE
  LABEL                             VALUE 

RUTW                              0000036C
RX9                               00000006
RX9D                              00000000
R_W                               00000002
S                                 00000003
SCAN_BR                           0000100A
SCAN_MBR                          00001000
SCAN_MBR__HLEDEJ_ROZSIRENY_ODDIL  0000105B
SCAN_MBR__KONEC                   00001089
SECTOR_C                          00000026
SELECT_DEVICE                     000003A8
SEN                               00000000
SEND_MP3_DATA                     000000CA
SEND_MP3_WORD                     000000F6
SKOC_NA_ZAZNAM                    00000B61
SKOC_NA_ZAZNAM_KONEC              00000BE0
SKOC_NA_ZAZNAM_MAME_CL            00000BBF
SKOC_NA_ZAZNAM_MAME_ZAZNAM        00000BDB
SKOC_NA_ZAZNAM_MIMO_ROZSAH        00000BDE
SKOC_NA_ZAZNAM_PRESKOC_CL         00000B91
SMP                               00000007
SOUCET                            00000629
SPBRG                             00000099
SPEN                              00000007
SPI_SOFTWARE                      1
SREN                              00000005
SRST                              00000002
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STANDBY                           00000005
START                             00000010
STATUS                            00000003
STAV_PRIKAZU                      00000075
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 197


SYMBOL TABLE
  LABEL                             VALUE 

T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TEMP1                             00000036
TEMP2                             00000037
TEMP3                             00000038
TEMP4                             00000039
TEMP5                             0000003A
TEMPW                             00000035
TEMP_FSR                          00000072
TEMP_PCLATH                       00000076
TEMP_STATUS                       00000071
TEMP_WORKING                      00000070
TMP0                              00000038
TMP1                              00000036
TMP2                              00000037
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISB                             00000086
TRISC                             00000087
TRISD                             00000088
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
ULOZ_KONFIGUTACI                  0000024C
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 198


SYMBOL TABLE
  LABEL                             VALUE 

ULOZ_KONFIGUTACI_LOOP1            0000027D
ULOZ_KONFIGUTACI_LOOP2            0000028C
VSADDR_AIADDR                     0000000A
VSADDR_AICTRL0                    0000000D
VSADDR_AICTRL1                    0000000E
VSADDR_AUDATA                     00000005
VSADDR_CLOCKF                     00000003
VSADDR_DECODE_TIME                00000004
VSADDR_HDAT0                      00000008
VSADDR_HDAT1                      00000009
VSADDR_MODE                       00000000
VSADDR_STATUS                     00000001
VSADDR_VOL                        0000000B
VSADDR_WRAM                       00000006
VSADDR_WRAMADDR                   00000007
VSREG_MODE_L                      0000004D
VSREG_STATUS_L                    0000004E
VSREG_VOL_H                       00000050
VSREG_VOL_L                       0000004F
VS_BEEP                           000008AC
VS_END_BEEP                       0000089A
VS_INIT                           000008BE
VS_INIT_BEEP                      000008C8
VS_LOAD_PLUGIN                    00001DF0
VS_LOAD_PLUGIN_LOAD               00001DFF
VS_LOUDNESS                       0000002F
VS_RD_BYTE                        0000080D
VS_RD_REG                         0000082A
VS_SEND_1024_NULL                 00000888
VS_SEND_32_NULL                   00000880
VS_SET_VOLUME                     0000088F
VS_SOFT_RESET                     0000084D
VS_SOFT_RESET_NO_PLUG             00000838
VS_WR_BYTE                        00000800
VS_WR_REG                         0000081C
VYHOVUJE_ZAZNAM                   00000D21
VYHOV_ZAZ_ALL_FILES               00000D31
VYHOV_ZAZ_ONLY_ADR                00000D37
VYHOV_ZAZ_ONLY_MP3                00000D34
VYHOV_ZAZ_SOUBiADR                00000D3A
VYHOV_ZAZ_SOUBiADR_MP3            00000D3E
VYSLEDEK1                         000000A8
VYSLEDEK2                         000000A9
VYSLEDEK3                         000000AA
VYSLEDEK4                         000000AB
W                                 00000000
WAIT_FOR_READY                    00000482
WAIT_FOR_VSDREQ                   00000897
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WR_BLOCK                          00000350
WR_COMMAND                        0000031F
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 199


SYMBOL TABLE
  LABEL                             VALUE 

WR_DC                             00000318
WR_DEVICE                         00000342
WR_EEPROM                         00000228
WR_FEATURES                       00000349
WR_LBA1                           0000032D
WR_LBA2                           00000334
WR_LBA3                           0000033B
WR_SC                             00000326
WR_USART                          0000029A
Z                                 00000002
ZAPIS_C_ZAZNAMU                   00000D14
ZAPIS_DO_BUFFERU_1                000003AC
ZAPIS_DO_BUFFERU_1__ZAPIS         000003AF
ZAZNAM1                           00000060
ZAZNAM2                           00000061
ZAZNAMU_vBUFFERU_DISKU            0000005E
ZJISTI_FRAGMENT                   00000573
ZJISTI_FRAGMENT_CLUSTER           000005B8
ZJISTI_FRAGMENT_CTI_SECTOR        000005B4
ZJISTI_FRAGMENT_INC_KONEC         00000623
ZJISTI_FRAGMENT_KONEC             00000626
ZJISTI_FRAGMENT_NEPRAZDNY         000005D0
ZKONTROLUJ_ODDIL_FAT32            0000108A
ZKONTROLUJ_ODDIL_FAT32__JMENOVKA  000010B1
ZKONTROLUJ_ODDIL_FAT32__KONEC     000010E6
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00001FFF
_CP_OFF                           00003FFF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_HS_OSC                           00003FFE
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FFD
__16F877A                         00000001
nEIN                              00000001
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 200


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0000 : X---XXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
03C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
04C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
05C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
06C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0740 : XXXXXXXXXXXXXXXX X--------------- ---------------- ----------------
0800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
08C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
09C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 201


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0EC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXX------ ----------------
1000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
10C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
11C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
12C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
13C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXX---
1800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
18C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
19C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.04                          MAIN.ASM   8-15-2006  15:14:38         PAGE 202


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


1BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXX--- ---------------- ----------------
2000 : -------X-------- ---------------- ---------------- ----------------
2100 : XXXXXXXXXXXXXXXX XXX------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:  6546
Program Memory Words Free:  1646


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   514 suppressed

